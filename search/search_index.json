{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6b22\u8fce\u6765\u5230FCLib FCLib(fucking cool library)\u662f\u4e00\u4e2a\u5173\u4e8eRGBD SLAM\u4ee5\u53ca\u4e09\u7ef4\u573a\u666f\u91cd\u5efa\u7684C++\u5e93\u3002\u8fd9\u4e2a\u5e93\u4e3b\u8981\u662f\u5bf9\u4e00\u4e9b\u57fa\u7840\u77e5\u8bc6\u7684\u603b\u7ed3\uff0c\u5e76\u4e14\u7528\u6765\u6ee1\u8db3\u4f5c\u8005\u7684\u5f3a\u8feb\u75c7\u3002\u5b83\u5c1d\u8bd5\u88ab\u8bbe\u8ba1\u5f97\u6bd4\u8f83\u7b80\u5355\uff0c\u7ed3\u6784\u6e05\u6670\uff0c\u901a\u4fd7\u6613\u61c2\uff0c\u5bf9\u65b0\u624b\u53cb\u597d\uff0c\u4f46\u662f\u9650\u5236\u4e8e\u4f5c\u8005\u7684\u6c34\u5e73\uff0c\u53ef\u80fd\u8fd8\u662f\u5b58\u5728\u5f88\u591a\u8bbe\u8ba1\u4e0d\u591f\u597d\u7684\u5730\u65b9\u3002\u76ee\u524d\u8fd9\u4e2a\u5e93\u9664\u4e86\u53ef\u89c6\u5316\u90e8\u5206\uff0c\u6ca1\u6709\u7528\u5230GPU\u3002\u4f5c\u8005\u5e0c\u671bFCLib\u53ef\u4ee5\u5e2e\u52a9\u4e00\u4e9b\u5bf9\u8fd9\u4e2a\u9886\u57df\u6bd4\u8f83\u611f\u5174\u8da3\u7684\u4eba\u66f4\u5feb\u5730\u5165\u95e8\uff0c\u6240\u4ee5FCLib\u7684\u9996\u8981\u4efb\u52a1\u662f\u5c3d\u53ef\u80fd\u7b80\u5355\uff0c\u4f9d\u8d56\u8f83\u5c11\uff0c\u76f8\u5bf9\u6765\u8bf4\u5728\u6548\u7387\u548c\u901f\u5ea6\u4e0a\u6ca1\u6709\u4ec0\u4e48\u4f18\u52bf\u3002\u5728example\u6587\u4ef6\u5939\u4e2d\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u4f7f\u7528FCLib\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u642d\u5efa\u51fa\u4e00\u4e2a\u7b80\u5355\u7684RGBD SLAM\u7cfb\u7edf\uff0c\u5e76\u6700\u7ec8\u63d0\u53d6\u51fa\u4e09\u7ef4\u6a21\u578b\uff0c\u5982\u4e0b\u56fe\uff1a FBAFusion in example \u5f00\u59cb\u641e FCLib\u5f00\u53d1\u73af\u5883\u662fubuntu 16.04\uff0c\u4f46\u662f\u5b83\u7684\u4f9d\u8d56\u5e93\u5f88\u5c11\uff0c\u6240\u4ee5\u5bf9\u4e8e18\u7684ubuntu\u5e94\u8be5\u4e5f\u662f\u6ca1\u4ec0\u4e48\u95ee\u9898\u7684\u3002\u5b83\u6bd4\u8f83\u51fa\u540d\u7684\u4f9d\u8d56\u662fOpenCV\u548cEigen\uff0c\u5176\u4ed6\u4e00\u4e9b\u5c0f\u7684\u4f9d\u8d56\u90fd\u88ab\u6574\u5408\u52303rdParty\u4e2d\uff0c\u4e00\u822c\u6765\u8bf4\u53ea\u8981\u73af\u5883\u4e2d\u6709OpenCV\u548cEigen\uff0c\u5c31\u80fd\u4e00\u952e\u7f16\u8bd1\u8fd0\u884c\u4e86\u3002 \u5b89\u88c5OpenCV\uff083.x\uff09: baidu / google \u5b89\u88c5Eigen\uff083.x\uff09: baidu / google \u8fdb\u5165\u5230FCLib\u76ee\u5f55\u4e0b\uff0c\u8f93\u5165 mkdir build && cd build && cmake .. && make \u53e6\u5916\u8bf4\u4e00\u53e5\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u8bbe\u8ba1\u5f97\u518d\u5c11\u70b9\u4f9d\u8d56\u5462\uff1f\u9664\u4e86\u4f5c\u8005\u6c34\u5e73\u4e0d\u884c\uff0c\u8fd8\u6709\u4e00\u70b9\u662f\uff0cOpenCV\u548cEigen\u7528\u5f97\u771f\u7684\u5f88\u591a\u554a\uff0c\u5982\u679c\u4ec0\u4e48io\u63a5\u53e3\u90fd\u7528\u66f4\u5e95\u5c42\u7684\uff0c\u8fd9\u6837\u5e76\u4e0d\u65b9\u4fbf\u5e93\u7528\u5728\u66f4\u591a\u522b\u7684\u9879\u76ee\u4e2d\uff08\u4f5c\u8005\u6700\u5f00\u59cb\u7528Open3D\u4e2d\u67d0\u4e2a\u7b97\u6cd5\u65f6\uff0cOpen3D\u56fe\u7247\u8bfb\u53d6\u7528\u7684\u90fd\u662f\u66f4\u5e95\u5c42\u7684\u5e93\uff0c\u800c\u4e0d\u662fOpenCV\uff0c\u800c\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\u7528\u7684\u662fOpenCV\u7684mat\u3002\u8fd9\u6837\u683c\u5f0f\u8f6c\u6362\u5c31\u53d8\u5f97\u5f88\u9ebb\u70e6\uff0c\u540e\u6765\u5c31\u81ea\u5df1\u5b9e\u73b0\u4e86\u90a3\u4e2a\u7b97\u6cd5\uff0c\u8fd9\u6bb5\u4ee3\u7801\u6210\u4e86FCLib\u6700\u65e9\u7684\u4e00\u6bb5\u4ee3\u7801\uff09\u3002 \u4e0b\u8f7d \u6e90\u7801\u53ef\u4ee5\u5728 FCLib \u4e0b\u8f7d\uff0c\u7528\u4e8e\u6d4b\u8bd5\u7684\u6570\u636e\u53ef\u4ee5\u5728 TestData \u4e0b\u8f7d\u3002","title":"\u7b80\u5355\u4ecb\u7ecd"},{"location":"#fclib","text":"FCLib(fucking cool library)\u662f\u4e00\u4e2a\u5173\u4e8eRGBD SLAM\u4ee5\u53ca\u4e09\u7ef4\u573a\u666f\u91cd\u5efa\u7684C++\u5e93\u3002\u8fd9\u4e2a\u5e93\u4e3b\u8981\u662f\u5bf9\u4e00\u4e9b\u57fa\u7840\u77e5\u8bc6\u7684\u603b\u7ed3\uff0c\u5e76\u4e14\u7528\u6765\u6ee1\u8db3\u4f5c\u8005\u7684\u5f3a\u8feb\u75c7\u3002\u5b83\u5c1d\u8bd5\u88ab\u8bbe\u8ba1\u5f97\u6bd4\u8f83\u7b80\u5355\uff0c\u7ed3\u6784\u6e05\u6670\uff0c\u901a\u4fd7\u6613\u61c2\uff0c\u5bf9\u65b0\u624b\u53cb\u597d\uff0c\u4f46\u662f\u9650\u5236\u4e8e\u4f5c\u8005\u7684\u6c34\u5e73\uff0c\u53ef\u80fd\u8fd8\u662f\u5b58\u5728\u5f88\u591a\u8bbe\u8ba1\u4e0d\u591f\u597d\u7684\u5730\u65b9\u3002\u76ee\u524d\u8fd9\u4e2a\u5e93\u9664\u4e86\u53ef\u89c6\u5316\u90e8\u5206\uff0c\u6ca1\u6709\u7528\u5230GPU\u3002\u4f5c\u8005\u5e0c\u671bFCLib\u53ef\u4ee5\u5e2e\u52a9\u4e00\u4e9b\u5bf9\u8fd9\u4e2a\u9886\u57df\u6bd4\u8f83\u611f\u5174\u8da3\u7684\u4eba\u66f4\u5feb\u5730\u5165\u95e8\uff0c\u6240\u4ee5FCLib\u7684\u9996\u8981\u4efb\u52a1\u662f\u5c3d\u53ef\u80fd\u7b80\u5355\uff0c\u4f9d\u8d56\u8f83\u5c11\uff0c\u76f8\u5bf9\u6765\u8bf4\u5728\u6548\u7387\u548c\u901f\u5ea6\u4e0a\u6ca1\u6709\u4ec0\u4e48\u4f18\u52bf\u3002\u5728example\u6587\u4ef6\u5939\u4e2d\uff0c\u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u4f7f\u7528FCLib\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u642d\u5efa\u51fa\u4e00\u4e2a\u7b80\u5355\u7684RGBD SLAM\u7cfb\u7edf\uff0c\u5e76\u6700\u7ec8\u63d0\u53d6\u51fa\u4e09\u7ef4\u6a21\u578b\uff0c\u5982\u4e0b\u56fe\uff1a FBAFusion in example","title":"\u6b22\u8fce\u6765\u5230FCLib"},{"location":"#_1","text":"FCLib\u5f00\u53d1\u73af\u5883\u662fubuntu 16.04\uff0c\u4f46\u662f\u5b83\u7684\u4f9d\u8d56\u5e93\u5f88\u5c11\uff0c\u6240\u4ee5\u5bf9\u4e8e18\u7684ubuntu\u5e94\u8be5\u4e5f\u662f\u6ca1\u4ec0\u4e48\u95ee\u9898\u7684\u3002\u5b83\u6bd4\u8f83\u51fa\u540d\u7684\u4f9d\u8d56\u662fOpenCV\u548cEigen\uff0c\u5176\u4ed6\u4e00\u4e9b\u5c0f\u7684\u4f9d\u8d56\u90fd\u88ab\u6574\u5408\u52303rdParty\u4e2d\uff0c\u4e00\u822c\u6765\u8bf4\u53ea\u8981\u73af\u5883\u4e2d\u6709OpenCV\u548cEigen\uff0c\u5c31\u80fd\u4e00\u952e\u7f16\u8bd1\u8fd0\u884c\u4e86\u3002 \u5b89\u88c5OpenCV\uff083.x\uff09: baidu / google \u5b89\u88c5Eigen\uff083.x\uff09: baidu / google \u8fdb\u5165\u5230FCLib\u76ee\u5f55\u4e0b\uff0c\u8f93\u5165 mkdir build && cd build && cmake .. && make \u53e6\u5916\u8bf4\u4e00\u53e5\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u8bbe\u8ba1\u5f97\u518d\u5c11\u70b9\u4f9d\u8d56\u5462\uff1f\u9664\u4e86\u4f5c\u8005\u6c34\u5e73\u4e0d\u884c\uff0c\u8fd8\u6709\u4e00\u70b9\u662f\uff0cOpenCV\u548cEigen\u7528\u5f97\u771f\u7684\u5f88\u591a\u554a\uff0c\u5982\u679c\u4ec0\u4e48io\u63a5\u53e3\u90fd\u7528\u66f4\u5e95\u5c42\u7684\uff0c\u8fd9\u6837\u5e76\u4e0d\u65b9\u4fbf\u5e93\u7528\u5728\u66f4\u591a\u522b\u7684\u9879\u76ee\u4e2d\uff08\u4f5c\u8005\u6700\u5f00\u59cb\u7528Open3D\u4e2d\u67d0\u4e2a\u7b97\u6cd5\u65f6\uff0cOpen3D\u56fe\u7247\u8bfb\u53d6\u7528\u7684\u90fd\u662f\u66f4\u5e95\u5c42\u7684\u5e93\uff0c\u800c\u4e0d\u662fOpenCV\uff0c\u800c\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\u7528\u7684\u662fOpenCV\u7684mat\u3002\u8fd9\u6837\u683c\u5f0f\u8f6c\u6362\u5c31\u53d8\u5f97\u5f88\u9ebb\u70e6\uff0c\u540e\u6765\u5c31\u81ea\u5df1\u5b9e\u73b0\u4e86\u90a3\u4e2a\u7b97\u6cd5\uff0c\u8fd9\u6bb5\u4ee3\u7801\u6210\u4e86FCLib\u6700\u65e9\u7684\u4e00\u6bb5\u4ee3\u7801\uff09\u3002","title":"\u5f00\u59cb\u641e"},{"location":"#_2","text":"\u6e90\u7801\u53ef\u4ee5\u5728 FCLib \u4e0b\u8f7d\uff0c\u7528\u4e8e\u6d4b\u8bd5\u7684\u6570\u636e\u53ef\u4ee5\u5728 TestData \u4e0b\u8f7d\u3002","title":"\u4e0b\u8f7d"},{"location":"about/","text":"\u5173\u4e8e\u4f5c\u8005 \u65e0\u804a\u65f6\u7684\u81ea\u5a31\u81ea\u4e50 \u672c\u79d1\u897f\u7535\u8ba1\u7b97\u673a\uff0c\u7855\u58eb\u5728\u8bfb\uff0c\u6e05\u534e\uff08TBSI\uff09\u6570\u636e\u79d1\u5b66\uff0c\u7814\u7a76\u5174\u8da3\u4e3a3D\u89c6\u89c9\u3002 \u90ae\u7bb1: wlsdzyzl@163.com Github: MyEvolution bilibili: _\u65e0\u804a\u65f6\u7684\u81ea\u5a31\u81ea\u4e50 \u535a\u5ba2\uff1a wlsdzyzl (\u505c\u66f4) \u7a7a\u95f4\uff1a Evolution (\u57fa\u672c\u505c\u66f4) In every single place, every school I went, I dreamed of being that cool kid, Even if it meant acting stupid.","title":"\u5173\u4e8e\u4f5c\u8005"},{"location":"about/#_1","text":"","title":"\u5173\u4e8e\u4f5c\u8005"},{"location":"about/#_2","text":"\u672c\u79d1\u897f\u7535\u8ba1\u7b97\u673a\uff0c\u7855\u58eb\u5728\u8bfb\uff0c\u6e05\u534e\uff08TBSI\uff09\u6570\u636e\u79d1\u5b66\uff0c\u7814\u7a76\u5174\u8da3\u4e3a3D\u89c6\u89c9\u3002 \u90ae\u7bb1: wlsdzyzl@163.com Github: MyEvolution bilibili: _\u65e0\u804a\u65f6\u7684\u81ea\u5a31\u81ea\u4e50 \u535a\u5ba2\uff1a wlsdzyzl (\u505c\u66f4) \u7a7a\u95f4\uff1a Evolution (\u57fa\u672c\u505c\u66f4) In every single place, every school I went, I dreamed of being that cool kid, Even if it meant acting stupid.","title":"\u65e0\u804a\u65f6\u7684\u81ea\u5a31\u81ea\u4e50"},{"location":"api/","text":"FCLib FCLib\uff0c\u5373Fucking Cool Fusion\uff0c\u662f\u4e00\u4e2a\u4ee5SLAM\u4e3a\u57fa\u7840\u7684\u4e09\u7ef4\u91cd\u5efa\u7684\u5e93\uff0c\u5b9e\u9645\u4e0a\u4e00\u70b9\u4e5f\u4e0dcool\u3002 Modules Camera \u76f8\u673a\u6a21\u5757\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u9488\u5b54\u76f8\u673a\u6a21\u578b\uff0c\u5b9a\u4e49\u4e86\u76f8\u673a\u7684\u5185\u53c2\uff0c\u7578\u53d8\u53c2\u6570\uff08\u9879\u76ee\u4e2d\u6ca1\u6709\u77eb\u6b63\u7578\u53d8\uff0c\u6240\u4ee5\u6ca1\u6709\u7528\u5230\uff09\uff0c\u4ee5\u53ca\u6df1\u5ea6\u8303\u56f4\u3002\u4f60\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u6807\u5b9a\u76f8\u673a\u7684\u7ed3\u679c\u8bbe\u5b9a\u76f8\u673a\u7684\u53c2\u6570\u77e9\u9635\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5e93\u4e2d\u5b9a\u4e49\u597d\u7684TUM\u6570\u636e\u96c6\u6216\u8005\u662f\u9ed8\u8ba4\u76f8\u673a\u53c2\u6570\u3002\u9ed8\u8ba4\u76f8\u673a\u53c2\u6570\u7684\u6df1\u5ea6\u8303\u56f4depth scale\u662f1000\uff0cTUM\u6570\u636e\u96c6\u4e2ddepth scale\u662f5000\u3002\u5bf9\u4e8e\u9488\u5b54\u76f8\u673a\u6a21\u578b\u7684\u539f\u7406\u4ee5\u53ca\u5404\u4e2a\u53c2\u6570\u7684\u610f\u4e49\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u7684\u6587\u7ae0\uff1a \u76f8\u673a\u6a21\u578b \u3002 Tool \u5de5\u5177\u6a21\u5757\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5176\u4ed6\u6a21\u5757\u9700\u8981\u4f7f\u7528\u7684\uff0c\u6bd4\u8f83\u6742\u7684\u529f\u80fd\uff0c\u76ee\u524dtool\u4e2d\u5305\u542b\u4e86\u56fe\u7247\u7684\u57fa\u672c\u5904\u7406\uff0c\u5bf9\u4e8e\u63a7\u5236\u53f0\u989c\u8272\u8f93\u51fa\u7684\u63a7\u5236\uff0cPly\u6587\u4ef6\u7684\u8bfb\u53d6\uff0c\u8ba1\u65f6\u5668\uff0c\u591a\u7ebf\u7a0b\u7b49\u7b49\u3002 ConsoleColor \u5b9a\u4e49\u4e86\u4e00\u4e9b\u5bf9\u4e8e\u63a7\u5236\u53f0\u8f93\u51fa\u989c\u8272\u7684\u63a7\u5236\u3002\u6211\u5e0c\u671bFCLib\u6574\u4e2a\u6784\u67b6\u6e05\u6670\uff0c\u8f93\u51fa\u4e5f\u5c3d\u91cf\u4f18\u96c5\u3002\u5728\u8be5\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u7ea2\u9ec4\u7eff\u7bee\u56db\u79cd\u989c\u8272\uff0c\u7ea2\u8272\u5bf9\u5e94Error\uff0c\u9ec4\u8272\u5bf9\u5e94Warning\uff0c\u800c\u7eff\u8272\u8868\u793a\u8fd0\u884c\u6210\u529f\uff0c\u84dd\u8272\u5219\u662f\u8f93\u51fa\u4e00\u4e9b\u76f8\u5173\u4fe1\u606f\uff0c\u5229\u4e8eDebug\u4e4b\u7c7b\u7684\u3002\u4f7f\u7528\u65b9\u6cd5\uff0c\u5305\u542b\u4e86ConsoleColor\u5934\u6587\u4ef6\u540e\uff0c\u8f93\u51fa\uff1a //\u8f93\u51faERROR std::cout<<RED<<\"[ERROR]::There is a error.\"<<RESET<<std::endl; \u76f8\u5e94\u7684\uff0c\u9ec4\u7eff\u84dd\u5206\u522b\u5bf9\u5e94YELLOW\uff0cGREEN\uff0cBLUE\u3002RESET\u4f1a\u4f7f\u5f97\u8f93\u51fa\u989c\u8272\u6062\u590d\u9ed8\u8ba4\u7684\u767d\u8272\u3002 ImageProcessing \u56fe\u7247\u5904\u7406\u7684\u76f8\u5173\u5185\u5bb9\uff0c\u5c01\u88c5\u4e86\u4e00\u4e9bOpenCV\u7684\u51fd\u6570\uff0c\u5305\u62ec\u9ad8\u65af\u6ee4\u6ce2\uff0csobel\u6ee4\u6ce2\uff0c\u521b\u5efa\u56fe\u50cf\u91d1\u5b57\u5854\u7b49\u7b49\u3002 RPLYManager \u4f7f\u7528RPLY\u5e93\u6765\u8fdb\u884cRPLY\u7684\u8bfb\u53d6\uff0c\u53ef\u4ee5\u8bfb\u53d6\u70b9\u4e91\u4e0e\u4e09\u89d2\u7f51\u683c\u3002\u8fd9\u91cc\u662f\u57fa\u7840\u4f7f\u7528\u7684\u6a21\u5757\uff0c\u56e0\u6b64\u4e0d\u5305\u542b\u70b9\u4e91\uff0c\u7f51\u683c\u7684\u5b9a\u4e49\uff0c\u4f60\u53ea\u9700\u8981\u63d0\u4f9bply\u6587\u4ef6\u7684\u8def\u5f84\u4ee5\u53ca\u7528\u6765\u5b58\u53d6\u70b9\u4e91\u6216\u8005\u7f51\u683c\u7684 std::vector \uff0c\u51fd\u6570\u58f0\u660e\u5982\u4e0b\uff1a bool ReadPLY(const std::string &filename, geometry::Point3List &points, geometry::Point3List &normals, geometry::Point3List &colors); bool ReadPLY(const std::string &filename, geometry::Point3List &points, geometry::Point3List &normals, geometry::Point3List &colors, std::vector<Eigen::Vector3i> &triangles); MultiThreads \u4e00\u4e2a\u5bf9\u4e8e\u5faa\u73af\u7684\u591a\u7ebf\u7a0b\u5b9e\u73b0\u7684\u6a21\u677f\u51fd\u6570\u3002\u4f60\u9700\u8981\u63d0\u4f9b\u7684\u662f\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u8f93\u5165\uff0c\u4ee5\u53ca\u9700\u8981\u6539\u53d8\u7684\u8f93\u51fa\uff0c\u4ee5\u53ca\u8c03\u7528\u7684\u51fd\u6570\u3002\u53c2\u6570\u4e0e\u8fd4\u56de\uff0c\u5206\u522b\u5b58\u653e\u5728\u4e24\u4e2a std::vector \u4e2d\u3002\u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a template <class T1, class T2> void MultiThreads(const std::vector<T1> &p1, std::vector<T2> &p2, std::function<void(const T1 &, T2&)> &f); \u5bf9\u4e8e\u5177\u4f53\u7684\u4f7f\u7528\u4e5f\u5f88\u7b80\u5355\uff0c\u5c06\u8f93\u5165\u548c\u8f93\u51fa\u5206\u522b\u653e\u5230\u4e24\u4e2astd::vector\u4e2d\uff0c\u63a5\u7740\u4f7f\u7528std::function\u7ed1\u5b9a\u51fd\u6570\uff0c\u4e00\u8d77\u4f20\u5165\u4e0a\u8ff0\u51fd\u6570\u4e2d\u5373\u53ef\uff0c\u4e4b\u540e\u4ecb\u7ecd\u7684\u7f51\u683c\u751f\u6210\u4f1a\u6709\u4f7f\u7528\u7684\u4f8b\u5b50\u3002 Note\uff1aMultiThreads\u4e0d\u4f1a\u7ba1\u4f60\u7684\u5faa\u73af\u80fd\u4e0d\u80fd\u5e76\u884c\uff0c\u6240\u4ee5\u786e\u4fdd\u5faa\u73af\u53ef\u4ee5\u5e76\u884c\u52a0\u901f\u662f\u4f7f\u7528\u8005\u7684\u8d23\u4efb\u3002 TickTock TickTock\u662f\u8ba1\u65f6\u5668\uff0c\u91cc\u9762\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8ba1\u65f6\u5668\u7c7bTimer\u3002Timer\u53ef\u4ee5\u7ed9\u591a\u4e2a\u8fc7\u7a0b\u8ba1\u65f6\uff0c\u4ed6\u4eec\u53ef\u4ee5\u4ea4\u53c9\uff0c\u53ea\u8981\u540d\u5b57\u4e0d\u540c\u5c31\u53ef\u4ee5\u3002\u6ca1\u9519\uff0c\u4f7f\u7528Timer\u4f60\u5fc5\u987b\u8981\u7ed9\u8ba1\u65f6\u7684\u8fc7\u7a0b\u5b9a\u4e49\u4e00\u4e2a\u72ec\u7279\u7684\u540d\u5b57\u3002\u4f7f\u7528\u8d77\u6765\u5f88\u7b80\u5355\uff1a tool::Timer timer; timer.TICK(\"My Process\"); // code of process timer.TOCK(\"My Process\"); timer.Log(\"My Process\"); Log\u51fd\u6570\u7528\u6765\u8f93\u51fa\u4f7f\u7528\u7684\u65f6\u95f4\uff0c\u5355\u4f4d\u662f\u6beb\u79d2\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528LogAll()\u6765\u8f93\u51fa\u6240\u6709\u7684\u7edf\u8ba1\u3002\u4f46\u662f\u5bf9\u4e8e\u53eaTick\u6bd4Tock\u5927\u7684\u60c5\u51b5\u4f1a\u8f93\u51fa\u8b66\u544a\u3002\u6240\u4ee5\u5c31\u5c3d\u91cf\u6b63\u786e\u5730\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\u5427\u3002 Geometry \u51e0\u4f55\u6a21\u5757\u5b9a\u4e49\u4e86\u4e00\u4e9b\u51e0\u4f55\u76f8\u5173\u7684\u5185\u5bb9\u548c\u6570\u636e\u7ed3\u6784\u3002\u6bd4\u5982\uff0c\u5bf9\u4e8epoint\uff0cTransformation\uff0c\u674e\u7fa4\u674e\u4ee3\u6570\uff08SE(3), se(3)\uff09\u4e4b\u95f4\u7684\u8f6c\u8fd8\u7b49\u7b49\uff0c\u8fd8\u6709\u70b9\u4e91\uff0c\u4e09\u89d2\u7f51\u683c\u7b49\u5e38\u7528\u6570\u636e\u7ed3\u6784\u53ca\u76f8\u5173\u7b97\u6cd5\u7684\u5b9a\u4e49\u3002 Geometry \u8fd9\u91cc\u9762\u662f\u4e00\u4e9b\u57fa\u672c\u7684\u5b9a\u4e49\u4ee5\u53ca\u4e3a\u4e86\u7a0b\u5e8f\u4fbf\u4e8e\u7406\u89e3\u8d77\u5f97\u522b\u540d\uff0c\u4e5f\u6ca1\u4ec0\u4e48\u592a\u591a\u597d\u8bf4\u7684\u3002 PointCloud PointCloud\u662f\u70b9\u4e91\u76f8\u5173\u7684\u6570\u636e\u7ed3\u6784\u4e0e\u4e00\u4e9b\u7b80\u5355\u7684\u5904\u7406\u7b97\u6cd5\u3002\u70b9\u4e91\u5305\u542b\u70b9\uff0c\u989c\u8272\uff0c\u6cd5\u5411\uff08\u540e\u9762\u4e8c\u8005\u662f\u53ef\u9009\u7684\uff09\uff0c\u76f8\u5173\u7b97\u6cd5\u5305\u542b\u4e86\u70b9\u4e91\u7684\u4e0b\u91c7\u6837\uff0c\u6cd5\u76f8\u4f30\u8ba1\u7b49\u7b49\u3002\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e9b\u57fa\u672c\u7684\u6210\u5458\u51fd\u6570\uff1a //\u4ecePLY\u6587\u4ef6\u8bfb\u53d6\u70b9\u4e91 void LoadFromPLY(const std::string &filename); //\u4eceRGBD\u56fe\u8bfb\u53d6\u70b9\u4e91 void LoadFromRGBD(const cv::Mat &rgb, const cv::Mat & depth, const camera::PinholeCamera &camera ); //\u4f30\u8ba1\u6cd5\u5411\u91cf void EstimateNormals(); //\u79fb\u52a8\u70b9\u4e91 void Transform(const TransformationMatrix &T); //\u5bf9\u70b9\u4e91\u8fdb\u884c\u4e0b\u91c7\u6837 std::shared_ptr<PointCloud> DownSample(double grid_len); //\u5c06\u70b9\u4e91\u5199\u5230\u6587\u4ef6\u4e2d bool WriteToPLY(const std::string &fileName) const; \u8fd9\u91cc\u4e3b\u8981\u60f3\u63d0\u4e00\u4e0b\u4e0b\u91c7\u6837\u4e0e\u6cd5\u5411\u91cf\u4f30\u8ba1\u7684\u7b97\u6cd5\u3002 - \u4e0b\u91c7\u6837 \u4e0b\u91c7\u6837\u91c7\u7528\u7684\u662f\u6700\u7b80\u5355\u7684\u5747\u5300\u4e0b\u91c7\u6837\uff0c\u4e5f\u5c31\u662f\u4f53\u7d20\u5316\uff0c\u56e0\u6b64\u53c2\u6570\u4e2d\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u4f53\u7d20\u7f51\u683c\u7684\u957f\u5ea6\u3002\u5c06\u5404\u4e2a\u70b9\u6620\u5c04\u5230\u5bf9\u5e94\u7684\u4f53\u7d20\u4e2d\uff0c\u6bcf\u4e2a\u4f53\u7d20\u4e2d\u53ef\u80fd\u6709\u591a\u4e2a\u539f\u6765\u7684\u70b9\u3002\u8fd9\u4e9b\u70b9\u5728\u65b0\u7684\u70b9\u4e91\u91cc\uff0c\u5168\u90e8\u4f7f\u7528\u4f53\u7d20\u7684\u4e2d\u5fc3\u5750\u6807\u6765\u8868\u793a\uff0c\u81f3\u4e8e\u989c\u8272\u503c\u53ef\u4ee5\u5bf9\u4f53\u7d20\u4e2d\u7684\u70b9\u6c42\u5e73\u5747\u5f97\u5230\uff0c\u6211\u5728\u5b9e\u73b0\u91cc\u7b80\u5355\u7684\u5c06\u989c\u8272\u503c\u8bbe\u4e3a\u4e86\u7b2c\u4e00\u4e2a\u6620\u5c04\u8fdb\u6765\u7684\u70b9\u3002\u8fd9\u4e2a\u7b97\u6cd5\u975e\u5e38\u7b80\u5355\u4e5f\u597d\u7406\u89e3\u3002\u6548\u679c\u56fe\u5982\u4e0b\uff1a - \u6cd5\u5411\u4f30\u8ba1 \u70b9\u4e91\u7684\u6cd5\u5411\u4f30\u8ba1\u5b9e\u9645\u4e0a\u662f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u62df\u5408\u5e73\u9762\u7684\u8fc7\u7a0b\uff0c\u9009\u53d6\u6700\u8fd1\u7684N\u4e2a\u70b9\u62df\u5408\u5e73\u9762\uff0c\u63a5\u7740\u6c42\u51fa\u5e73\u9762\u7684\u6cd5\u5411\u91cf\u4f5c\u4e3a\u70b9\u4e91\u7684\u6cd5\u5411\u91cf\u3002\u8fd9\u4e2a\u7b97\u6cd5\uff0c\u6700\u91cd\u8981\u7684\u90e8\u5206\u5728\u4e8e\u600e\u4e48\u627e\u5230\u6700\u90bb\u8fd1\u7684\u70b9\uff0c\u4f7f\u7528\u7684\u662fkd\u6811\u3002kd\u6811\u662f\u4e00\u79cd\u4e8c\u53c9\u6811\uff0c\u5b83\u53ef\u4ee5\u5728\u9ad8\u7eac\u5ea6\u4e0b\u7528\u6765\u5bfb\u627e\u6700\u90bb\u8fd1\u70b9\u3002 \u5728OpenCV\u4e2d\u6709\u5bf9kd\u6811\u7684\u5b9e\u73b0\u3002\u901a\u8fc7kd\u6811\u5f97\u5230\u6700\u90bb\u8fd1\u7684k\u4e2a\u70b9\uff08knn search\uff09\uff0c\u5229\u7528\u8fd9\u4e9b\u70b9\u62df\u5408\u5e73\u9762\uff0c\u4ece\u800c\u6839\u636e\u5e73\u9762\u6c42\u5f97\u6cd5\u5411\u91cf\u3002\u4f7f\u7528\u591a\u4e2a\u70b9\u62df\u5408\u5e73\u9762\u53ef\u4ee5\u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u3002\u8fd9\u6837\u6c42\u89e3\u5f97\u5230\u7684\u6cd5\u5411\u91cf\u5177\u6709\u4e8c\u4e49\u6027\uff0c\u4e00\u822c\u6765\u8bf4\u8fd8\u9700\u8981\u6709\u4e00\u4e2a\u7edf\u4e00\u6cd5\u5411\u91cf\u7684\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u6839\u636e\u89c6\u70b9\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u89c6\u70b9\u5230\u70b9\u7684\u8ddd\u79bb\u4e0e\u6cd5\u5411\u91cf\u662f\u76f8\u53cd\u7684\uff0c\u5219\u5bf9\u6cd5\u5411\u91cf\u53d6\u53cd\u3002 \u53e6\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u522b\u7684\u6c42\u89e3\u6cd5\u5411\u91cf\u7684\u7b97\u6cd5\uff0c\u6bd4\u5982\u62df\u5408\u66f2\u9762\uff0c\u8fd9\u6837\u5f97\u5230\u7684\u6cd5\u5411\u91cf\u662f\u7edf\u4e00\u7684\uff0c\u4f46\u662f\u901f\u5ea6\u8f83\u6162\u3002 TriangleMesh TriangleMesh\u5b9a\u4e49\u4e86\u4e09\u89d2\u7f51\u683c\u6570\u636e\u7ed3\u6784\u4ee5\u53ca\u76f8\u5173\u7684\u7b97\u6cd5\uff0c\u4e09\u89d2\u7f51\u683c\u4e0e\u70b9\u4e91\u6700\u5927\u7684\u533a\u522b\u5c31\u662f\u6709\u8fb9\u548c\u9762\uff0c\u5728\u4e09\u89d2\u7f51\u683c\u4e2d\u6bcf\u4e2a\u9762\u90fd\u662f\u4e09\u89d2\u5f62\uff0c\u67093\u4e2a\u70b9\u6784\u6210\u3002\u56e0\u6b64\uff0c\u9664\u4e86\u70b9\u4e4b\u5916\uff0c\u4e09\u89d2\u7f51\u683c\u4e2d\u8fd8\u6709\u9762\u8868\uff0c\u91cc\u9762\u5b58\u653e\u7684\u662f\u6784\u6210\u9762\u76843\u4e2a\u70b9\u7684\u7d22\u5f15\u3002\u7f51\u683c\u4e00\u7cfb\u5217\u7b97\u6cd5\u6709\u7f51\u683c\u7b80\u5316\uff0c\u6cd5\u5411\u4f30\u8ba1\u7b49\u7b49\u3002 - \u6cd5\u5411\u91cf\u4f30\u8ba1 \u4e09\u89d2\u7f51\u683c\u7684\u6cd5\u5411\u91cf\u4f30\u8ba1\u76f8\u5bf9\u4e8e\u70b9\u4e91\u7684\u6cd5\u5411\u91cf\u4f30\u8ba1\u5c31\u5bb9\u6613\u591a\u4e86\u3002\u9996\u5148\uff0c\u4e09\u89d2\u7f51\u683c\u5df2\u7ecf\u6709\u9762\u4e86\uff0c\u4e5f\u5c31\u53ef\u4ee5\u5f97\u5230\u9762\u7684\u6cd5\u5411\u91cf\uff0c\u63a5\u7740\uff0c\u6211\u4eec\u53ea\u8981\u5bf9\u4e0e\u70b9\u76f8\u8fde\u63a5\u7684\u6240\u6709\u7684\u9762\u7684\u6cd5\u5411\u91cf\u8fdb\u884c\u52a0\u6743\u5e73\u5747\uff0c\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u70b9\u7684\u6cd5\u5411\u91cf\u3002 - \u7f51\u683c\u7b80\u5316\u5b9e\u73b0\u4e86\u4e24\u79cd\u7b97\u6cd5\uff0c\u57fa\u4e8e\u4f53\u7d20\u7684\u805a\u7c7b\u7b80\u5316\u7b97\u6cd5\uff0c\u4ee5\u53ca\u57fa\u4e8e\u4e8c\u6b21\u9519\u8bef\u7684\u8fb9\u574d\u584c\u7b97\u6cd5\u3002\u5bf9\u4e8e\u8fd9\u4e24\u4e2a\u7b97\u6cd5\u4e4b\u540e\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u3002\u8c03\u7528\u7f51\u683c\u7b80\u5316\uff0c\u4e0d\u4f1a\u6539\u53d8\u539f\u6765\u7684\u7f51\u683c\uff0c\u800c\u662f\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u65b0\u7684\u7b80\u5316\u540e\u7684\u7f51\u683c\u7684\u667a\u80fd\u6307\u9488\u3002\u5bf9\u4e8e\u4f53\u7d20\u7684\u805a\u7c7b\u65b9\u6cd5\uff0c\u9700\u8981\u63d0\u4f9b\u7684\u53c2\u6570\u662f\u4f53\u7d20\u7684\u8fb9\u957f\uff0c\u4f53\u7d20\u8d8a\u5927\u7b80\u5316\u7a0b\u5ea6\u8d8a\u9ad8\uff0c\u800c\u5bf9\u4e8e\u8fb9\u574d\u584c\u7b97\u6cd5\uff0c\u9700\u8981\u63d0\u4f9b\u76ee\u6807\u7684\u4e09\u89d2\u5f62\u4e2a\u6570\u3002 \u8c03\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a auto cs_mesh_ptr = mesh.ClusteringSimplify(grid_len); auto qs_mesh_ptr = mesh.QuadricSimplify(target_num); MeshSimplification Vertex Clustering Quadric Edge Decimation Visualization Odometry Odometry\u6307\u7684\u662fVisual Odometry\uff0c\u4e5f\u5c31\u662f\u89c6\u89c9\u91cc\u7a0b\u8ba1\u3002\u5bf9\u4e8e\u4e0d\u9700\u8981\u77e5\u9053\u89c6\u89c9\u91cc\u7a0b\u8ba1\u7684\u4eba\uff0c\u53ef\u4ee5\u5c06\u89c6\u89c9\u91cc\u7a0b\u8ba1\u770b\u6210\u4e00\u4e2a\u9ed1\u76d2\u5b50\uff0c\u5b83\u7684\u8f93\u5165\u8f93\u51fa\u5982\u4e0b\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u8f93\u5165\u7684\u662f\u4e00\u5bf9RGBD\u56fe\u7247\uff08\u5305\u62ecrgb\u4e0edepth\uff09\uff0c\u8f93\u51fa\u7684\u5185\u5bb9\u5305\u62ec\u76f8\u5bf9\u4f4d\u59ff\uff0c\u63d0\u53d6\u5230\u7684\u5bf9\u5e94\u70b9\uff08\u540e\u7eed\u4f18\u5316\u9700\u8981\u7528\u5230\uff09\uff0c\u4ee5\u53ca\u662f\u5426\u5339\u914d\u6210\u529f\uff08\u6839\u636eThreshold\u51b3\u5b9a\uff09\u3002\u5bf9\u4e8e\u60f3\u8981\u4e86\u89e3Odometry\u5177\u4f53\u5b9e\u73b0\u7684\u670b\u53cb\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u90e8\u5206\u3002 \u5728FCLib\u4e2d\uff0c\u6211\u5b9e\u73b0\u4e86\u4e24\u79cdOdometry\uff1a\u4e5f\u5c31\u662f\u7a00\u758f\u4f30\u8ba1\u4e0e\u7a20\u5bc6\u4f30\u8ba1\u3002 Sparse Extimation Dense Extimation Integration Frustum \u89c6\u9525\u4f53\u7684\u4f5c\u7528\u662f\u786e\u5b9a\u6bcf\u4e00\u5e27\u56fe\u7247\u91cd\u5efa\u7684\u8303\u56f4\uff0c\u6211\u4eec\u53ea\u5bf9\u89c6\u9525\u4f53\u5185\u90e8\u7684\u4f53\u7d20\u8fdb\u884c\u878d\u5408\u3002\u89c6\u9525\u4f53\u6709\u8fd1\u5e73\u9762\u4e0e\u8fdc\u5e73\u9762\u3002\u4e3a\u4e86\u6c42\u4e00\u4e2a\u89c6\u9525\u4f53\uff0c\u4e5f\u5c31\u662f\u4e3b\u8981\u6c428\u4e2a\u9876\u70b9\u3002\u8fd9\u91cc\u6c42\u89e3\u9700\u8981\u4e86\u89e3\u9488\u5b54\u76f8\u673a\u6a21\u578b\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u5f97\u5230\u7684\u662f\u76f8\u673a\u7684FOV\uff0c\u8fd9\u4e2a\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u4e5f\u5c31\u662f\u6210\u50cf\u5e73\u9762\u7684\u9ad8\u5230\u4ea4\u70b9\u7684\u8fd9\u4e2a\u5782\u76f4\u7684\u89d2\u5ea6\u3002\u5728\u76f8\u673a\u6a21\u578b\u4ecb\u7ecd\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86fx\uff0cfy\uff0ccx\uff0ccy\u7684\u610f\u601d\uff0c\u5206\u522b\u662f\u6a2a\u7eb5\u7126\u8ddd\uff08\u7406\u8bba\u4e0a\u5e94\u8be5\u76f8\u7b49\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5f80\u5f80\u662f\u6709\u4e00\u4e9b\u504f\u5dee\uff09\uff0c\u4ee5\u53ca\u76f8\u673a\u539f\u70b9\u5750\u6807\u7684\u504f\u79fb\u91cf\uff0c\u53ea\u4e0d\u8fc7\u5355\u4f4d\u662f\u50cf\u7d20\u7684\u4e2a\u6570\u3002\u50cf\u7d20\u7684\u957f\u5bbd\u867d\u7136\u4e0d\u4e00\u6837\uff0c\u4f46\u662f\u8fd9\u4e2a\u4e0d\u5f71\u54cdFOV\u7684\u8ba1\u7b97\uff0cfov\u53ea\u9700\u8981\u50cf\u7d20\u7684\u5bbd\u3002\u56e0\u6b64fov\u5f88\u5bb9\u6613\u5f97\u5230\uff0c\u5c31\u662f \\(2 * \\arctan\\frac{cy}{fy}\\) \u3002\u7406\u8bba\u4e0a\u4e0a\u534a\u89d2\u548c\u4e0b\u534a\u89d2\u662f\u5e94\u8be5\u4e00\u6837\u7684\uff0c\u4f46\u662f\u5b9e\u9645\u751f\u4ea7\u4e2d\uff0c\u7126\u70b9\u4e0e\u6210\u50cf\u5e73\u9762\u7684\u4e2d\u5fc3\u7684\u8fde\u7ebf\u4e0d\u4e00\u5b9a\u5782\u76f4\u6210\u50cf\u5e73\u9762\uff0c\u4e3a\u4e86\u5f97\u5230\u66f4\u7cbe\u786e\u7684\u4ea4\u77e9\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u6210\u4e24\u90e8\u5206\u6c42\uff0c\u4e5f\u5c31\u662f\uff1a $$ \\text{fov} = \\arctan{\\frac{cy}{fy}} + \\arctan{\\frac{height - cy}{fy}} $$ \u63a5\u7740\u6211\u4eec\u9700\u8981\u6c42\u6210\u50cf\u5e73\u9762\u7684\u957f\u5bbd\u6bd4\uff0c\u7531\u4e8e\u50cf\u7d20\u7684\u957f\u5bbd\u4e0d\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u8f6c\u5316\u6210\u5b9e\u9645\u7684\u8ddd\u79bb\u5355\u4f4d\u6765\u6bd4\u8f83\uff0c\u8fd9\u6837\u66f4\u7cbe\u786e\uff08\u8fd9\u91ccCHISEL\u4e2d\u4ee3\u7801\u5e94\u8be5\u662f\u4e2abug\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u4e00\u822c\u5f71\u54cd\u4e0d\u5927\uff09\uff1a $$ \\text{aspect} =\\frac{dx * width}{ dy * height} = \\frac{fy * width}{ fx * height} $$ \u5728\u76f8\u673a\u5750\u6807\u7cfb\u4e2d\uff0cz\u8f74\u662f\u76f8\u673a\u671d\u5411\u7684\u4f4d\u7f6e(\u4e5f\u79f0\u4e3aforward))\uff0c\u4e5f\u5c31\u662f\u5728\u76f8\u673a\u5750\u6807\u7cfb\u4e0b\uff0c\u8fdc\u8fd1\u5e73\u9762\u7684\u4e2d\u5fc3\u70b9\u662f\u5728z\u8f74\u4e0a\u7684\u3002\u800c\u65cb\u8f6c\u77e9\u9635\u7684\u4e09\u5217\u662f\u4e00\u7ec4\u65b0\u7684\u5750\u6807\u57fa \\(\\mathbf x_r\\) \uff0c \\(\\mathbf y_r\\) \uff0c \\(\\mathbf z_r\\) \uff0c\u4e5f\u662f\u65b9\u5411\u5411\u91cf\uff0c\u5206\u522b\u5bf9\u5e94\u4e86\u76f8\u673a\u5750\u6807\u7684\u524d\uff08forward\uff09\uff0c\u4e0b\uff08down\uff09\uff0c\u53f3\uff08right\uff09\uff08\u53f3\u624b\u5750\u6807\u7cfb\uff09\uff0c\u7531\u4e8e\u4e00\u822c\u4e60\u60ef\u7528\u4e0a\uff08up\uff09\uff0cup\u4e5f\u5c31\u662f \\(-y_r\\) \u3002\u7531\u4e8e\u8fdc\u5e73\u9762\u7684\u4e2d\u5fc3\u70b9\u662f\u5728z\u8f74\u4e0a\uff0c \u6240\u4ee5\u5b83\u4eec\u5728\u76f8\u673a\u5750\u6807\u7cfb\u4e0b\u4f4d\u7f6e\u4e3a \\((0,0,FarDist)\\) \uff0c\u5bf9\u5b83\u7684\u65cb\u8f6c\u53ea\u9700\u8981\u4e58\u4e0az\u7684\u65b9\u5411\u5411\u91cf\u3002\u800c\u5bf9\u4e8e\u8fdc\u5e73\u9762\u4e0a\u5176\u4ed6\u76844\u4e2a\u70b9\uff0c\u6bd4\u5982\u5de6\u4e0a\u70b9\uff0c\u5728\u76f8\u673a\u5750\u6807\u7cfb\u4e0b\u4e3a \\((WidthFar/2, -HeightFar/2, FarDist)\\) \uff0c\u56e0\u6b64\u5b83\u8f6c\u5316\u540e\u4e3a\uff1a \\((WidthFar \\cdot x_r/2, -HeightFar \\cdot y_r, FarDist \\cdot z_r)\\) \u3002\u5bf9\u4e8e\u5176\u4ed6\u7684\u70b9\u4ee5\u53ca\u8fd1\u5e73\u9762\u7684\u4e5f\u662f\u5982\u6b64\u6c42\u5f97\u3002\u8fd9\u91cc\u8bf4\u5f97\u6bd4\u8f83\u590d\u6742\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u7b80\u5355\u7684\u5bf9\u89c6\u9525\u4f53\u7684\u65cb\u8f6c\u548c\u5e73\u79fb\uff0c\u4f46\u662f\u660e\u767d\u4e86\u5c31\u80fd\u628a\u4ee3\u7801\u8bfb\u61c2\u3002 Geometry ICP Point To Point Point To Plane The cost function of Point-To-Plane ICP is \\(\\Vert (Tp_s - p_t)n \\Vert^2\\) , which is quiet easy, because it's just the distance to plane. More information can get from PointToPlane . However, the method paper given( \\(Ax=b\\) ) can be the solving of large matrix, related to the number of points. We consider this as a optimization problem and use the Jacobian Matrix. So the solution is unrelated to the number of points. The cost function is still \\(Ax=b\\) , which the Jacobian Matrix is easy-computing.","title":"FCLib"},{"location":"api/#fclib","text":"FCLib\uff0c\u5373Fucking Cool Fusion\uff0c\u662f\u4e00\u4e2a\u4ee5SLAM\u4e3a\u57fa\u7840\u7684\u4e09\u7ef4\u91cd\u5efa\u7684\u5e93\uff0c\u5b9e\u9645\u4e0a\u4e00\u70b9\u4e5f\u4e0dcool\u3002","title":"FCLib"},{"location":"api/#modules","text":"","title":"Modules"},{"location":"api/#camera","text":"\u76f8\u673a\u6a21\u5757\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u9488\u5b54\u76f8\u673a\u6a21\u578b\uff0c\u5b9a\u4e49\u4e86\u76f8\u673a\u7684\u5185\u53c2\uff0c\u7578\u53d8\u53c2\u6570\uff08\u9879\u76ee\u4e2d\u6ca1\u6709\u77eb\u6b63\u7578\u53d8\uff0c\u6240\u4ee5\u6ca1\u6709\u7528\u5230\uff09\uff0c\u4ee5\u53ca\u6df1\u5ea6\u8303\u56f4\u3002\u4f60\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u6807\u5b9a\u76f8\u673a\u7684\u7ed3\u679c\u8bbe\u5b9a\u76f8\u673a\u7684\u53c2\u6570\u77e9\u9635\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5e93\u4e2d\u5b9a\u4e49\u597d\u7684TUM\u6570\u636e\u96c6\u6216\u8005\u662f\u9ed8\u8ba4\u76f8\u673a\u53c2\u6570\u3002\u9ed8\u8ba4\u76f8\u673a\u53c2\u6570\u7684\u6df1\u5ea6\u8303\u56f4depth scale\u662f1000\uff0cTUM\u6570\u636e\u96c6\u4e2ddepth scale\u662f5000\u3002\u5bf9\u4e8e\u9488\u5b54\u76f8\u673a\u6a21\u578b\u7684\u539f\u7406\u4ee5\u53ca\u5404\u4e2a\u53c2\u6570\u7684\u610f\u4e49\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u7684\u6587\u7ae0\uff1a \u76f8\u673a\u6a21\u578b \u3002","title":"Camera"},{"location":"api/#tool","text":"\u5de5\u5177\u6a21\u5757\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5176\u4ed6\u6a21\u5757\u9700\u8981\u4f7f\u7528\u7684\uff0c\u6bd4\u8f83\u6742\u7684\u529f\u80fd\uff0c\u76ee\u524dtool\u4e2d\u5305\u542b\u4e86\u56fe\u7247\u7684\u57fa\u672c\u5904\u7406\uff0c\u5bf9\u4e8e\u63a7\u5236\u53f0\u989c\u8272\u8f93\u51fa\u7684\u63a7\u5236\uff0cPly\u6587\u4ef6\u7684\u8bfb\u53d6\uff0c\u8ba1\u65f6\u5668\uff0c\u591a\u7ebf\u7a0b\u7b49\u7b49\u3002","title":"Tool"},{"location":"api/#consolecolor","text":"\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5bf9\u4e8e\u63a7\u5236\u53f0\u8f93\u51fa\u989c\u8272\u7684\u63a7\u5236\u3002\u6211\u5e0c\u671bFCLib\u6574\u4e2a\u6784\u67b6\u6e05\u6670\uff0c\u8f93\u51fa\u4e5f\u5c3d\u91cf\u4f18\u96c5\u3002\u5728\u8be5\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u7ea2\u9ec4\u7eff\u7bee\u56db\u79cd\u989c\u8272\uff0c\u7ea2\u8272\u5bf9\u5e94Error\uff0c\u9ec4\u8272\u5bf9\u5e94Warning\uff0c\u800c\u7eff\u8272\u8868\u793a\u8fd0\u884c\u6210\u529f\uff0c\u84dd\u8272\u5219\u662f\u8f93\u51fa\u4e00\u4e9b\u76f8\u5173\u4fe1\u606f\uff0c\u5229\u4e8eDebug\u4e4b\u7c7b\u7684\u3002\u4f7f\u7528\u65b9\u6cd5\uff0c\u5305\u542b\u4e86ConsoleColor\u5934\u6587\u4ef6\u540e\uff0c\u8f93\u51fa\uff1a //\u8f93\u51faERROR std::cout<<RED<<\"[ERROR]::There is a error.\"<<RESET<<std::endl; \u76f8\u5e94\u7684\uff0c\u9ec4\u7eff\u84dd\u5206\u522b\u5bf9\u5e94YELLOW\uff0cGREEN\uff0cBLUE\u3002RESET\u4f1a\u4f7f\u5f97\u8f93\u51fa\u989c\u8272\u6062\u590d\u9ed8\u8ba4\u7684\u767d\u8272\u3002","title":"ConsoleColor"},{"location":"api/#imageprocessing","text":"\u56fe\u7247\u5904\u7406\u7684\u76f8\u5173\u5185\u5bb9\uff0c\u5c01\u88c5\u4e86\u4e00\u4e9bOpenCV\u7684\u51fd\u6570\uff0c\u5305\u62ec\u9ad8\u65af\u6ee4\u6ce2\uff0csobel\u6ee4\u6ce2\uff0c\u521b\u5efa\u56fe\u50cf\u91d1\u5b57\u5854\u7b49\u7b49\u3002","title":"ImageProcessing"},{"location":"api/#rplymanager","text":"\u4f7f\u7528RPLY\u5e93\u6765\u8fdb\u884cRPLY\u7684\u8bfb\u53d6\uff0c\u53ef\u4ee5\u8bfb\u53d6\u70b9\u4e91\u4e0e\u4e09\u89d2\u7f51\u683c\u3002\u8fd9\u91cc\u662f\u57fa\u7840\u4f7f\u7528\u7684\u6a21\u5757\uff0c\u56e0\u6b64\u4e0d\u5305\u542b\u70b9\u4e91\uff0c\u7f51\u683c\u7684\u5b9a\u4e49\uff0c\u4f60\u53ea\u9700\u8981\u63d0\u4f9bply\u6587\u4ef6\u7684\u8def\u5f84\u4ee5\u53ca\u7528\u6765\u5b58\u53d6\u70b9\u4e91\u6216\u8005\u7f51\u683c\u7684 std::vector \uff0c\u51fd\u6570\u58f0\u660e\u5982\u4e0b\uff1a bool ReadPLY(const std::string &filename, geometry::Point3List &points, geometry::Point3List &normals, geometry::Point3List &colors); bool ReadPLY(const std::string &filename, geometry::Point3List &points, geometry::Point3List &normals, geometry::Point3List &colors, std::vector<Eigen::Vector3i> &triangles);","title":"RPLYManager"},{"location":"api/#multithreads","text":"\u4e00\u4e2a\u5bf9\u4e8e\u5faa\u73af\u7684\u591a\u7ebf\u7a0b\u5b9e\u73b0\u7684\u6a21\u677f\u51fd\u6570\u3002\u4f60\u9700\u8981\u63d0\u4f9b\u7684\u662f\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u8f93\u5165\uff0c\u4ee5\u53ca\u9700\u8981\u6539\u53d8\u7684\u8f93\u51fa\uff0c\u4ee5\u53ca\u8c03\u7528\u7684\u51fd\u6570\u3002\u53c2\u6570\u4e0e\u8fd4\u56de\uff0c\u5206\u522b\u5b58\u653e\u5728\u4e24\u4e2a std::vector \u4e2d\u3002\u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a template <class T1, class T2> void MultiThreads(const std::vector<T1> &p1, std::vector<T2> &p2, std::function<void(const T1 &, T2&)> &f); \u5bf9\u4e8e\u5177\u4f53\u7684\u4f7f\u7528\u4e5f\u5f88\u7b80\u5355\uff0c\u5c06\u8f93\u5165\u548c\u8f93\u51fa\u5206\u522b\u653e\u5230\u4e24\u4e2astd::vector\u4e2d\uff0c\u63a5\u7740\u4f7f\u7528std::function\u7ed1\u5b9a\u51fd\u6570\uff0c\u4e00\u8d77\u4f20\u5165\u4e0a\u8ff0\u51fd\u6570\u4e2d\u5373\u53ef\uff0c\u4e4b\u540e\u4ecb\u7ecd\u7684\u7f51\u683c\u751f\u6210\u4f1a\u6709\u4f7f\u7528\u7684\u4f8b\u5b50\u3002 Note\uff1aMultiThreads\u4e0d\u4f1a\u7ba1\u4f60\u7684\u5faa\u73af\u80fd\u4e0d\u80fd\u5e76\u884c\uff0c\u6240\u4ee5\u786e\u4fdd\u5faa\u73af\u53ef\u4ee5\u5e76\u884c\u52a0\u901f\u662f\u4f7f\u7528\u8005\u7684\u8d23\u4efb\u3002","title":"MultiThreads"},{"location":"api/#ticktock","text":"TickTock\u662f\u8ba1\u65f6\u5668\uff0c\u91cc\u9762\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8ba1\u65f6\u5668\u7c7bTimer\u3002Timer\u53ef\u4ee5\u7ed9\u591a\u4e2a\u8fc7\u7a0b\u8ba1\u65f6\uff0c\u4ed6\u4eec\u53ef\u4ee5\u4ea4\u53c9\uff0c\u53ea\u8981\u540d\u5b57\u4e0d\u540c\u5c31\u53ef\u4ee5\u3002\u6ca1\u9519\uff0c\u4f7f\u7528Timer\u4f60\u5fc5\u987b\u8981\u7ed9\u8ba1\u65f6\u7684\u8fc7\u7a0b\u5b9a\u4e49\u4e00\u4e2a\u72ec\u7279\u7684\u540d\u5b57\u3002\u4f7f\u7528\u8d77\u6765\u5f88\u7b80\u5355\uff1a tool::Timer timer; timer.TICK(\"My Process\"); // code of process timer.TOCK(\"My Process\"); timer.Log(\"My Process\"); Log\u51fd\u6570\u7528\u6765\u8f93\u51fa\u4f7f\u7528\u7684\u65f6\u95f4\uff0c\u5355\u4f4d\u662f\u6beb\u79d2\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528LogAll()\u6765\u8f93\u51fa\u6240\u6709\u7684\u7edf\u8ba1\u3002\u4f46\u662f\u5bf9\u4e8e\u53eaTick\u6bd4Tock\u5927\u7684\u60c5\u51b5\u4f1a\u8f93\u51fa\u8b66\u544a\u3002\u6240\u4ee5\u5c31\u5c3d\u91cf\u6b63\u786e\u5730\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\u5427\u3002","title":"TickTock"},{"location":"api/#geometry","text":"\u51e0\u4f55\u6a21\u5757\u5b9a\u4e49\u4e86\u4e00\u4e9b\u51e0\u4f55\u76f8\u5173\u7684\u5185\u5bb9\u548c\u6570\u636e\u7ed3\u6784\u3002\u6bd4\u5982\uff0c\u5bf9\u4e8epoint\uff0cTransformation\uff0c\u674e\u7fa4\u674e\u4ee3\u6570\uff08SE(3), se(3)\uff09\u4e4b\u95f4\u7684\u8f6c\u8fd8\u7b49\u7b49\uff0c\u8fd8\u6709\u70b9\u4e91\uff0c\u4e09\u89d2\u7f51\u683c\u7b49\u5e38\u7528\u6570\u636e\u7ed3\u6784\u53ca\u76f8\u5173\u7b97\u6cd5\u7684\u5b9a\u4e49\u3002","title":"Geometry"},{"location":"api/#geometry_1","text":"\u8fd9\u91cc\u9762\u662f\u4e00\u4e9b\u57fa\u672c\u7684\u5b9a\u4e49\u4ee5\u53ca\u4e3a\u4e86\u7a0b\u5e8f\u4fbf\u4e8e\u7406\u89e3\u8d77\u5f97\u522b\u540d\uff0c\u4e5f\u6ca1\u4ec0\u4e48\u592a\u591a\u597d\u8bf4\u7684\u3002","title":"Geometry"},{"location":"api/#pointcloud","text":"PointCloud\u662f\u70b9\u4e91\u76f8\u5173\u7684\u6570\u636e\u7ed3\u6784\u4e0e\u4e00\u4e9b\u7b80\u5355\u7684\u5904\u7406\u7b97\u6cd5\u3002\u70b9\u4e91\u5305\u542b\u70b9\uff0c\u989c\u8272\uff0c\u6cd5\u5411\uff08\u540e\u9762\u4e8c\u8005\u662f\u53ef\u9009\u7684\uff09\uff0c\u76f8\u5173\u7b97\u6cd5\u5305\u542b\u4e86\u70b9\u4e91\u7684\u4e0b\u91c7\u6837\uff0c\u6cd5\u76f8\u4f30\u8ba1\u7b49\u7b49\u3002\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e9b\u57fa\u672c\u7684\u6210\u5458\u51fd\u6570\uff1a //\u4ecePLY\u6587\u4ef6\u8bfb\u53d6\u70b9\u4e91 void LoadFromPLY(const std::string &filename); //\u4eceRGBD\u56fe\u8bfb\u53d6\u70b9\u4e91 void LoadFromRGBD(const cv::Mat &rgb, const cv::Mat & depth, const camera::PinholeCamera &camera ); //\u4f30\u8ba1\u6cd5\u5411\u91cf void EstimateNormals(); //\u79fb\u52a8\u70b9\u4e91 void Transform(const TransformationMatrix &T); //\u5bf9\u70b9\u4e91\u8fdb\u884c\u4e0b\u91c7\u6837 std::shared_ptr<PointCloud> DownSample(double grid_len); //\u5c06\u70b9\u4e91\u5199\u5230\u6587\u4ef6\u4e2d bool WriteToPLY(const std::string &fileName) const; \u8fd9\u91cc\u4e3b\u8981\u60f3\u63d0\u4e00\u4e0b\u4e0b\u91c7\u6837\u4e0e\u6cd5\u5411\u91cf\u4f30\u8ba1\u7684\u7b97\u6cd5\u3002 - \u4e0b\u91c7\u6837 \u4e0b\u91c7\u6837\u91c7\u7528\u7684\u662f\u6700\u7b80\u5355\u7684\u5747\u5300\u4e0b\u91c7\u6837\uff0c\u4e5f\u5c31\u662f\u4f53\u7d20\u5316\uff0c\u56e0\u6b64\u53c2\u6570\u4e2d\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u4f53\u7d20\u7f51\u683c\u7684\u957f\u5ea6\u3002\u5c06\u5404\u4e2a\u70b9\u6620\u5c04\u5230\u5bf9\u5e94\u7684\u4f53\u7d20\u4e2d\uff0c\u6bcf\u4e2a\u4f53\u7d20\u4e2d\u53ef\u80fd\u6709\u591a\u4e2a\u539f\u6765\u7684\u70b9\u3002\u8fd9\u4e9b\u70b9\u5728\u65b0\u7684\u70b9\u4e91\u91cc\uff0c\u5168\u90e8\u4f7f\u7528\u4f53\u7d20\u7684\u4e2d\u5fc3\u5750\u6807\u6765\u8868\u793a\uff0c\u81f3\u4e8e\u989c\u8272\u503c\u53ef\u4ee5\u5bf9\u4f53\u7d20\u4e2d\u7684\u70b9\u6c42\u5e73\u5747\u5f97\u5230\uff0c\u6211\u5728\u5b9e\u73b0\u91cc\u7b80\u5355\u7684\u5c06\u989c\u8272\u503c\u8bbe\u4e3a\u4e86\u7b2c\u4e00\u4e2a\u6620\u5c04\u8fdb\u6765\u7684\u70b9\u3002\u8fd9\u4e2a\u7b97\u6cd5\u975e\u5e38\u7b80\u5355\u4e5f\u597d\u7406\u89e3\u3002\u6548\u679c\u56fe\u5982\u4e0b\uff1a - \u6cd5\u5411\u4f30\u8ba1 \u70b9\u4e91\u7684\u6cd5\u5411\u4f30\u8ba1\u5b9e\u9645\u4e0a\u662f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u62df\u5408\u5e73\u9762\u7684\u8fc7\u7a0b\uff0c\u9009\u53d6\u6700\u8fd1\u7684N\u4e2a\u70b9\u62df\u5408\u5e73\u9762\uff0c\u63a5\u7740\u6c42\u51fa\u5e73\u9762\u7684\u6cd5\u5411\u91cf\u4f5c\u4e3a\u70b9\u4e91\u7684\u6cd5\u5411\u91cf\u3002\u8fd9\u4e2a\u7b97\u6cd5\uff0c\u6700\u91cd\u8981\u7684\u90e8\u5206\u5728\u4e8e\u600e\u4e48\u627e\u5230\u6700\u90bb\u8fd1\u7684\u70b9\uff0c\u4f7f\u7528\u7684\u662fkd\u6811\u3002kd\u6811\u662f\u4e00\u79cd\u4e8c\u53c9\u6811\uff0c\u5b83\u53ef\u4ee5\u5728\u9ad8\u7eac\u5ea6\u4e0b\u7528\u6765\u5bfb\u627e\u6700\u90bb\u8fd1\u70b9\u3002 \u5728OpenCV\u4e2d\u6709\u5bf9kd\u6811\u7684\u5b9e\u73b0\u3002\u901a\u8fc7kd\u6811\u5f97\u5230\u6700\u90bb\u8fd1\u7684k\u4e2a\u70b9\uff08knn search\uff09\uff0c\u5229\u7528\u8fd9\u4e9b\u70b9\u62df\u5408\u5e73\u9762\uff0c\u4ece\u800c\u6839\u636e\u5e73\u9762\u6c42\u5f97\u6cd5\u5411\u91cf\u3002\u4f7f\u7528\u591a\u4e2a\u70b9\u62df\u5408\u5e73\u9762\u53ef\u4ee5\u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u6cd5\u3002\u8fd9\u6837\u6c42\u89e3\u5f97\u5230\u7684\u6cd5\u5411\u91cf\u5177\u6709\u4e8c\u4e49\u6027\uff0c\u4e00\u822c\u6765\u8bf4\u8fd8\u9700\u8981\u6709\u4e00\u4e2a\u7edf\u4e00\u6cd5\u5411\u91cf\u7684\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u6839\u636e\u89c6\u70b9\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u89c6\u70b9\u5230\u70b9\u7684\u8ddd\u79bb\u4e0e\u6cd5\u5411\u91cf\u662f\u76f8\u53cd\u7684\uff0c\u5219\u5bf9\u6cd5\u5411\u91cf\u53d6\u53cd\u3002 \u53e6\u5916\uff0c\u8fd8\u6709\u4e00\u4e9b\u522b\u7684\u6c42\u89e3\u6cd5\u5411\u91cf\u7684\u7b97\u6cd5\uff0c\u6bd4\u5982\u62df\u5408\u66f2\u9762\uff0c\u8fd9\u6837\u5f97\u5230\u7684\u6cd5\u5411\u91cf\u662f\u7edf\u4e00\u7684\uff0c\u4f46\u662f\u901f\u5ea6\u8f83\u6162\u3002","title":"PointCloud"},{"location":"api/#trianglemesh","text":"TriangleMesh\u5b9a\u4e49\u4e86\u4e09\u89d2\u7f51\u683c\u6570\u636e\u7ed3\u6784\u4ee5\u53ca\u76f8\u5173\u7684\u7b97\u6cd5\uff0c\u4e09\u89d2\u7f51\u683c\u4e0e\u70b9\u4e91\u6700\u5927\u7684\u533a\u522b\u5c31\u662f\u6709\u8fb9\u548c\u9762\uff0c\u5728\u4e09\u89d2\u7f51\u683c\u4e2d\u6bcf\u4e2a\u9762\u90fd\u662f\u4e09\u89d2\u5f62\uff0c\u67093\u4e2a\u70b9\u6784\u6210\u3002\u56e0\u6b64\uff0c\u9664\u4e86\u70b9\u4e4b\u5916\uff0c\u4e09\u89d2\u7f51\u683c\u4e2d\u8fd8\u6709\u9762\u8868\uff0c\u91cc\u9762\u5b58\u653e\u7684\u662f\u6784\u6210\u9762\u76843\u4e2a\u70b9\u7684\u7d22\u5f15\u3002\u7f51\u683c\u4e00\u7cfb\u5217\u7b97\u6cd5\u6709\u7f51\u683c\u7b80\u5316\uff0c\u6cd5\u5411\u4f30\u8ba1\u7b49\u7b49\u3002 - \u6cd5\u5411\u91cf\u4f30\u8ba1 \u4e09\u89d2\u7f51\u683c\u7684\u6cd5\u5411\u91cf\u4f30\u8ba1\u76f8\u5bf9\u4e8e\u70b9\u4e91\u7684\u6cd5\u5411\u91cf\u4f30\u8ba1\u5c31\u5bb9\u6613\u591a\u4e86\u3002\u9996\u5148\uff0c\u4e09\u89d2\u7f51\u683c\u5df2\u7ecf\u6709\u9762\u4e86\uff0c\u4e5f\u5c31\u53ef\u4ee5\u5f97\u5230\u9762\u7684\u6cd5\u5411\u91cf\uff0c\u63a5\u7740\uff0c\u6211\u4eec\u53ea\u8981\u5bf9\u4e0e\u70b9\u76f8\u8fde\u63a5\u7684\u6240\u6709\u7684\u9762\u7684\u6cd5\u5411\u91cf\u8fdb\u884c\u52a0\u6743\u5e73\u5747\uff0c\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u70b9\u7684\u6cd5\u5411\u91cf\u3002 - \u7f51\u683c\u7b80\u5316\u5b9e\u73b0\u4e86\u4e24\u79cd\u7b97\u6cd5\uff0c\u57fa\u4e8e\u4f53\u7d20\u7684\u805a\u7c7b\u7b80\u5316\u7b97\u6cd5\uff0c\u4ee5\u53ca\u57fa\u4e8e\u4e8c\u6b21\u9519\u8bef\u7684\u8fb9\u574d\u584c\u7b97\u6cd5\u3002\u5bf9\u4e8e\u8fd9\u4e24\u4e2a\u7b97\u6cd5\u4e4b\u540e\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u3002\u8c03\u7528\u7f51\u683c\u7b80\u5316\uff0c\u4e0d\u4f1a\u6539\u53d8\u539f\u6765\u7684\u7f51\u683c\uff0c\u800c\u662f\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u65b0\u7684\u7b80\u5316\u540e\u7684\u7f51\u683c\u7684\u667a\u80fd\u6307\u9488\u3002\u5bf9\u4e8e\u4f53\u7d20\u7684\u805a\u7c7b\u65b9\u6cd5\uff0c\u9700\u8981\u63d0\u4f9b\u7684\u53c2\u6570\u662f\u4f53\u7d20\u7684\u8fb9\u957f\uff0c\u4f53\u7d20\u8d8a\u5927\u7b80\u5316\u7a0b\u5ea6\u8d8a\u9ad8\uff0c\u800c\u5bf9\u4e8e\u8fb9\u574d\u584c\u7b97\u6cd5\uff0c\u9700\u8981\u63d0\u4f9b\u76ee\u6807\u7684\u4e09\u89d2\u5f62\u4e2a\u6570\u3002 \u8c03\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a auto cs_mesh_ptr = mesh.ClusteringSimplify(grid_len); auto qs_mesh_ptr = mesh.QuadricSimplify(target_num);","title":"TriangleMesh"},{"location":"api/#meshsimplification","text":"Vertex Clustering Quadric Edge Decimation","title":"MeshSimplification"},{"location":"api/#visualization","text":"","title":"Visualization"},{"location":"api/#odometry","text":"Odometry\u6307\u7684\u662fVisual Odometry\uff0c\u4e5f\u5c31\u662f\u89c6\u89c9\u91cc\u7a0b\u8ba1\u3002\u5bf9\u4e8e\u4e0d\u9700\u8981\u77e5\u9053\u89c6\u89c9\u91cc\u7a0b\u8ba1\u7684\u4eba\uff0c\u53ef\u4ee5\u5c06\u89c6\u89c9\u91cc\u7a0b\u8ba1\u770b\u6210\u4e00\u4e2a\u9ed1\u76d2\u5b50\uff0c\u5b83\u7684\u8f93\u5165\u8f93\u51fa\u5982\u4e0b\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u8f93\u5165\u7684\u662f\u4e00\u5bf9RGBD\u56fe\u7247\uff08\u5305\u62ecrgb\u4e0edepth\uff09\uff0c\u8f93\u51fa\u7684\u5185\u5bb9\u5305\u62ec\u76f8\u5bf9\u4f4d\u59ff\uff0c\u63d0\u53d6\u5230\u7684\u5bf9\u5e94\u70b9\uff08\u540e\u7eed\u4f18\u5316\u9700\u8981\u7528\u5230\uff09\uff0c\u4ee5\u53ca\u662f\u5426\u5339\u914d\u6210\u529f\uff08\u6839\u636eThreshold\u51b3\u5b9a\uff09\u3002\u5bf9\u4e8e\u60f3\u8981\u4e86\u89e3Odometry\u5177\u4f53\u5b9e\u73b0\u7684\u670b\u53cb\uff0c\u8bf7\u770b\u4e0b\u9762\u7684\u90e8\u5206\u3002 \u5728FCLib\u4e2d\uff0c\u6211\u5b9e\u73b0\u4e86\u4e24\u79cdOdometry\uff1a\u4e5f\u5c31\u662f\u7a00\u758f\u4f30\u8ba1\u4e0e\u7a20\u5bc6\u4f30\u8ba1\u3002","title":"Odometry"},{"location":"api/#sparse-extimation","text":"","title":"Sparse Extimation"},{"location":"api/#dense-extimation","text":"","title":"Dense Extimation"},{"location":"api/#integration","text":"","title":"Integration"},{"location":"api/#frustum","text":"\u89c6\u9525\u4f53\u7684\u4f5c\u7528\u662f\u786e\u5b9a\u6bcf\u4e00\u5e27\u56fe\u7247\u91cd\u5efa\u7684\u8303\u56f4\uff0c\u6211\u4eec\u53ea\u5bf9\u89c6\u9525\u4f53\u5185\u90e8\u7684\u4f53\u7d20\u8fdb\u884c\u878d\u5408\u3002\u89c6\u9525\u4f53\u6709\u8fd1\u5e73\u9762\u4e0e\u8fdc\u5e73\u9762\u3002\u4e3a\u4e86\u6c42\u4e00\u4e2a\u89c6\u9525\u4f53\uff0c\u4e5f\u5c31\u662f\u4e3b\u8981\u6c428\u4e2a\u9876\u70b9\u3002\u8fd9\u91cc\u6c42\u89e3\u9700\u8981\u4e86\u89e3\u9488\u5b54\u76f8\u673a\u6a21\u578b\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u5f97\u5230\u7684\u662f\u76f8\u673a\u7684FOV\uff0c\u8fd9\u4e2a\u5f88\u5bb9\u6613\u7406\u89e3\uff0c\u4e5f\u5c31\u662f\u6210\u50cf\u5e73\u9762\u7684\u9ad8\u5230\u4ea4\u70b9\u7684\u8fd9\u4e2a\u5782\u76f4\u7684\u89d2\u5ea6\u3002\u5728\u76f8\u673a\u6a21\u578b\u4ecb\u7ecd\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86fx\uff0cfy\uff0ccx\uff0ccy\u7684\u610f\u601d\uff0c\u5206\u522b\u662f\u6a2a\u7eb5\u7126\u8ddd\uff08\u7406\u8bba\u4e0a\u5e94\u8be5\u76f8\u7b49\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u5f80\u5f80\u662f\u6709\u4e00\u4e9b\u504f\u5dee\uff09\uff0c\u4ee5\u53ca\u76f8\u673a\u539f\u70b9\u5750\u6807\u7684\u504f\u79fb\u91cf\uff0c\u53ea\u4e0d\u8fc7\u5355\u4f4d\u662f\u50cf\u7d20\u7684\u4e2a\u6570\u3002\u50cf\u7d20\u7684\u957f\u5bbd\u867d\u7136\u4e0d\u4e00\u6837\uff0c\u4f46\u662f\u8fd9\u4e2a\u4e0d\u5f71\u54cdFOV\u7684\u8ba1\u7b97\uff0cfov\u53ea\u9700\u8981\u50cf\u7d20\u7684\u5bbd\u3002\u56e0\u6b64fov\u5f88\u5bb9\u6613\u5f97\u5230\uff0c\u5c31\u662f \\(2 * \\arctan\\frac{cy}{fy}\\) \u3002\u7406\u8bba\u4e0a\u4e0a\u534a\u89d2\u548c\u4e0b\u534a\u89d2\u662f\u5e94\u8be5\u4e00\u6837\u7684\uff0c\u4f46\u662f\u5b9e\u9645\u751f\u4ea7\u4e2d\uff0c\u7126\u70b9\u4e0e\u6210\u50cf\u5e73\u9762\u7684\u4e2d\u5fc3\u7684\u8fde\u7ebf\u4e0d\u4e00\u5b9a\u5782\u76f4\u6210\u50cf\u5e73\u9762\uff0c\u4e3a\u4e86\u5f97\u5230\u66f4\u7cbe\u786e\u7684\u4ea4\u77e9\uff0c\u6211\u4eec\u53ef\u4ee5\u5206\u6210\u4e24\u90e8\u5206\u6c42\uff0c\u4e5f\u5c31\u662f\uff1a $$ \\text{fov} = \\arctan{\\frac{cy}{fy}} + \\arctan{\\frac{height - cy}{fy}} $$ \u63a5\u7740\u6211\u4eec\u9700\u8981\u6c42\u6210\u50cf\u5e73\u9762\u7684\u957f\u5bbd\u6bd4\uff0c\u7531\u4e8e\u50cf\u7d20\u7684\u957f\u5bbd\u4e0d\u4e00\u6837\uff0c\u6211\u4eec\u9700\u8981\u8f6c\u5316\u6210\u5b9e\u9645\u7684\u8ddd\u79bb\u5355\u4f4d\u6765\u6bd4\u8f83\uff0c\u8fd9\u6837\u66f4\u7cbe\u786e\uff08\u8fd9\u91ccCHISEL\u4e2d\u4ee3\u7801\u5e94\u8be5\u662f\u4e2abug\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u4e00\u822c\u5f71\u54cd\u4e0d\u5927\uff09\uff1a $$ \\text{aspect} =\\frac{dx * width}{ dy * height} = \\frac{fy * width}{ fx * height} $$ \u5728\u76f8\u673a\u5750\u6807\u7cfb\u4e2d\uff0cz\u8f74\u662f\u76f8\u673a\u671d\u5411\u7684\u4f4d\u7f6e(\u4e5f\u79f0\u4e3aforward))\uff0c\u4e5f\u5c31\u662f\u5728\u76f8\u673a\u5750\u6807\u7cfb\u4e0b\uff0c\u8fdc\u8fd1\u5e73\u9762\u7684\u4e2d\u5fc3\u70b9\u662f\u5728z\u8f74\u4e0a\u7684\u3002\u800c\u65cb\u8f6c\u77e9\u9635\u7684\u4e09\u5217\u662f\u4e00\u7ec4\u65b0\u7684\u5750\u6807\u57fa \\(\\mathbf x_r\\) \uff0c \\(\\mathbf y_r\\) \uff0c \\(\\mathbf z_r\\) \uff0c\u4e5f\u662f\u65b9\u5411\u5411\u91cf\uff0c\u5206\u522b\u5bf9\u5e94\u4e86\u76f8\u673a\u5750\u6807\u7684\u524d\uff08forward\uff09\uff0c\u4e0b\uff08down\uff09\uff0c\u53f3\uff08right\uff09\uff08\u53f3\u624b\u5750\u6807\u7cfb\uff09\uff0c\u7531\u4e8e\u4e00\u822c\u4e60\u60ef\u7528\u4e0a\uff08up\uff09\uff0cup\u4e5f\u5c31\u662f \\(-y_r\\) \u3002\u7531\u4e8e\u8fdc\u5e73\u9762\u7684\u4e2d\u5fc3\u70b9\u662f\u5728z\u8f74\u4e0a\uff0c \u6240\u4ee5\u5b83\u4eec\u5728\u76f8\u673a\u5750\u6807\u7cfb\u4e0b\u4f4d\u7f6e\u4e3a \\((0,0,FarDist)\\) \uff0c\u5bf9\u5b83\u7684\u65cb\u8f6c\u53ea\u9700\u8981\u4e58\u4e0az\u7684\u65b9\u5411\u5411\u91cf\u3002\u800c\u5bf9\u4e8e\u8fdc\u5e73\u9762\u4e0a\u5176\u4ed6\u76844\u4e2a\u70b9\uff0c\u6bd4\u5982\u5de6\u4e0a\u70b9\uff0c\u5728\u76f8\u673a\u5750\u6807\u7cfb\u4e0b\u4e3a \\((WidthFar/2, -HeightFar/2, FarDist)\\) \uff0c\u56e0\u6b64\u5b83\u8f6c\u5316\u540e\u4e3a\uff1a \\((WidthFar \\cdot x_r/2, -HeightFar \\cdot y_r, FarDist \\cdot z_r)\\) \u3002\u5bf9\u4e8e\u5176\u4ed6\u7684\u70b9\u4ee5\u53ca\u8fd1\u5e73\u9762\u7684\u4e5f\u662f\u5982\u6b64\u6c42\u5f97\u3002\u8fd9\u91cc\u8bf4\u5f97\u6bd4\u8f83\u590d\u6742\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u7b80\u5355\u7684\u5bf9\u89c6\u9525\u4f53\u7684\u65cb\u8f6c\u548c\u5e73\u79fb\uff0c\u4f46\u662f\u660e\u767d\u4e86\u5c31\u80fd\u628a\u4ee3\u7801\u8bfb\u61c2\u3002","title":"Frustum"},{"location":"api/#geometry_2","text":"","title":"Geometry"},{"location":"api/#icp","text":"","title":"ICP"},{"location":"api/#point-to-point","text":"","title":"Point To Point"},{"location":"api/#point-to-plane","text":"The cost function of Point-To-Plane ICP is \\(\\Vert (Tp_s - p_t)n \\Vert^2\\) , which is quiet easy, because it's just the distance to plane. More information can get from PointToPlane . However, the method paper given( \\(Ax=b\\) ) can be the solving of large matrix, related to the number of points. We consider this as a optimization problem and use the Jacobian Matrix. So the solution is unrelated to the number of points. The cost function is still \\(Ax=b\\) , which the Jacobian Matrix is easy-computing.","title":"Point To Plane"},{"location":"examples/","text":"\u793a\u4f8b \u8fd9\u91cc\u662f\u4e00\u4e9b\u4f7f\u7528FCLib\u7684\u7a0b\u5e8f\u3002\u6240\u6709\u7684\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u5728 examples \u6587\u4ef6\u5939\u4e2d\u627e\u5230\u6e90\u4ee3\u7801\u3002\u7f16\u8bd1\u540e\uff0c\u8fdb\u5165\u5230 build/example \u4e0b\u53ef\u4ee5\u8f93\u5165\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u6d4b\u8bd5\u3002 \u8bfb\u53d6PLY\u7684\u70b9\u4e91/\u7f51\u683c\u5e76\u663e\u793a ./ReadPLYPCD [filename.ply] ./ReadPLYMesh [filename.ply] \u8bfb\u53d6RGBD\u63d0\u53d6\u70b9\u4e91\u5e76\u663e\u793a ./ReadRGBD [color] [depth] SparseTracking\u548cDenseTracking ./SparseOdometry [source_rgb] [source_depth] [target_rgb] [targe_depth] ./SparseOdometryMild [source_rgb] [source_depth] [target_rgb] [targe_depth] ./DenseOdometry [source_rgb] [source_depth] [target_rgb] [targe_depth] \u7f51\u683c\u7b80\u5316 ./SimplifyMeshClustering [filename.ply] [grid_length] ./SimplifyMeshQuadric [filename.ply] [simplify_ratio] \u7b80\u5316\u6548\u679c\u5982\u4e0b\uff1a \u539f\u59cb\u6a21\u578b\uff08hand.ply\uff09 \u8fb9\u574d\u584c\uff08\u5269\u4e0b10%\u7684\u4e09\u89d2\u5f62\uff09 \u539f\u59cb\u6a21\u578b\uff08\u4f53\u7d20\u957f0.1\uff09 BundleAdjustment\u6d4b\u8bd5 \u8fd9\u91cc\u8f93\u5165\u4e00\u5bf9RGBD frame\uff0cBundleAdjutment\u4f1a\u6839\u636eFeature matching\u7684\u7ed3\u679c\u8fdb\u884c\u4f4d\u59ff\u8c03\u6574\uff0c\u4e4b\u540e\u4f1a\u53ef\u89c6\u5316\u5339\u914d\u7ed3\u679c\uff0c\u5e76\u5c06\u91cd\u6295\u5f71\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u5f55\u4e0b\u7684\u56fe\u7247\u4e2d\u3002 ./BATest [source_rgb] [source_depth] [target_rgb] [targe_depth] \u7ed3\u679c\u5982\u4e0b\uff1a \u7ecf\u8fc7BA\u540e\u7684Match \u91cd\u6295\u5f71\u5bf9\u6bd4 \u7531\u4e8e\u4f18\u5316\u7684\u662f\u91cd\u6295\u5f71\u8bef\u5dee\uff0c\u4e09\u7ef4\u70b9\u4e91\u53ef\u89c6\u5316\u7684\u7ed3\u679c\u770b\u8d77\u6765\u53ef\u80fd\u5e76\u6ca1\u6709\u91cd\u6295\u5f71\u52302d\u56fe\u7247\u7ed3\u679c\u597d\u3002\u56e0\u4e3a\u4e09\u7ef4\u53ef\u89c6\u5316\u53ea\u662f\u8003\u8651\u4f4d\u59ff\u53d8\u5316\uff0c\u6839\u636e\u4f4d\u59ff\u5f97\u52303D\u70b9\uff0c\u800c\u6ca1\u6709\u5438\u6536\u5230\u4e16\u754c\u5750\u6807\u70b9\u4f18\u5316\u7684\u5185\u5bb9\u3002 ICP\u6d4b\u8bd5 ICPTest [source_pcd] [target_pcd] ICPTest\u5bf9\u4e24\u4e2a\u70b9\u4e91\u8fdb\u884c\u6ce8\u518c\u3002\u4f46\u662f\u5177\u4f53\u4f7f\u7528PointToPoint\u8fd8\u662fPointToPlane\u9700\u8981\u5728\u4ee3\u7801\u4e2d\u4fee\u6539\u3002\u4e0b\u9762\u662f\u4e24\u4e2a\u7b97\u6cd5\u8fed\u4ee330\u6b21\u540e\u7684\u8fd0\u884c\u7ed3\u679c\uff0c\u53ef\u4ee5\u770b\u51fa\u6765PointToPlane\u7684\u6536\u655b\u901f\u5ea6\u6bd4PointToPoint\u8981\u5feb\u5f88\u591a\u3002 point_to_point point_to_plane RansacRegistration\u6d4b\u8bd5 RansacTest [source_pcd] [target_pcd] RansacTest\u5bf9\u4e24\u4e2a\u70b9\u4e91\u8fdb\u884c\u6ce8\u518c\uff0c\u5728\u6ce8\u518c\u4e4b\u524d\u4f1a\u5bf9\u70b9\u4e91\u8fdb\u884c\u4e00\u4e2a\u968f\u673a\u65cb\u8f6c\uff0c\u5e76\u52a0\u4e0a\u5e73\u79fb\uff0c\u8fd9\u6837\u624d\u80fd\u770b\u51fa\u6765GlobalRegistration\u7684\u4f18\u52bf\u5728\u54ea\u91cc\u3002 \u4e0b\u9762\u662f\u8fd0\u884c\u7ed3\u679c\uff0c\u53ef\u4ee5\u4fee\u6539\u4ee3\u7801\uff0c\u53ef\u4ee5\u9009\u62e9\u76f4\u63a5\u770b\u5339\u914d\u540e\u7684\u7ed3\u679c\uff1a ransac registration \u9009\u62e9\u753b\u51fa\u6765correspondence\uff1a fpfh correspondence \u623f\u95f4\u5e73\u9762\u56fe\u68c0\u6d4b \u4f7f\u7528 algorithm \u4e2d\u7684\u7b97\u6cd5\u505a\u7684\u4e00\u4e9b\u6709\u610f\u601d\u7684\u4e8b\u60c5\u3002\u5728 example/RoomDetection.cpp \u4e2d\uff0c\u5b9e\u73b0\u4e86\u6839\u636e\u6709\u7740semantic\u4fe1\u606f\u7684\u70b9\u4e91\u6765\u5f97\u77e5\u623f\u95f4\u5e73\u9762\u56fe\u3002\u8fd9\u91cc\u9762\u7528\u5230\u4e86\uff1aLineDetection, PlaneDetection\uff08\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u4f7f\u7528\u4e00\u79cd\uff0c\u4e0d\u8fc7\u793a\u4f8b\u4e2d\u4e24\u4e2a\u90fd\u7528\u4e86\uff09, DCEL, KMedoidsClusteringDynamic\u3002 ./RoomDetection ../../TestData/room_with_labels.ply \u8f93\u5165\u7684\u6a21\u578b\uff1a \u68c0\u6d4b\u5230\u7684\u76f4\u7ebf\uff1a \u68c0\u6d4b\u5230\u7684\u5e73\u9762\uff08\u70b9\u4e91\u5f62\u5f0f\uff09\uff1a \u751f\u6210\u7684Line Arrangements\uff1a \u805a\u7c7b\u540e\u5f97\u5230\u7684\u623f\u95f4\u5e73\u9762\u56fe\uff1a \u4e09\u4e2a\u91cd\u5efa\u7cfb\u7edf FBAFusion FBAFusion\u7528\u7684\u662fSparseTracking\uff0cMild\u95ed\u73af\u68c0\u6d4b\uff0c\u52a0\u4e0aFast BundleAdjustment\u540e\u7aef\u4f18\u5316\uff0c\u4e5f\u5c31\u662f\u9996\u9875\u5c55\u793a\u7684\u5185\u5bb9\u3002 ./FBAFusion ../../TestData/rgbd/607 0.01 FBAFusion\u6700\u5feb\u3002\u91cd\u5efa\u6a21\u578b\u5982\u4e0b\uff1a BAFusion BAFusion\u7528\u7684\u662fSparseTracking\uff0cMild\u95ed\u73af\u68c0\u6d4b\uff0c\u52a0\u4e0aBundleAdjustment\u540e\u7aef\u4f18\u5316\u3002\u4e4b\u524d\u8bf4\u8fc7\u4e86\uff0cBA\u5728\u540e\u9762\u77e9\u9635\u7ef4\u5ea6\u4f1a\u5f88\u5927\uff0c\u5373\u4f7f\u5728BAFusion\u4e2d\uff0c\u6bcf\u4e2akeyframe\u7684\u7279\u5f81\u70b9\u53ea\u670930\u4e2a\uff0c\u540e\u9762\u4f9d\u7136\u8981\u4e00\u5206\u949f\u5de6\u53f3\u751a\u81f3\u66f4\u4e45\u624d\u80fd\u4f18\u5316\u4e00\u6b21\u3002\u800c\u4e14BA\u4f1a\u4f18\u5316\u7a7a\u95f4\u70b9\uff08\u4f18\u5316\u6295\u5f71\u566a\u58f0\u4ee5\u53ca\u53c2\u6570\uff09\uff0c\u4f46\u662f\u8fd9\u90e8\u5206\u4f18\u5316\u5728\u6700\u540e\u751f\u6210\u6a21\u578b\u7684\u65f6\u5019\u5e76\u6ca1\u6709\u8003\u8651\uff0c\u53ea\u7528\u5230\u4e86\u4f18\u5316\u7684\u4f4d\u59ff\uff0c\u6240\u4ee5\u91cd\u5efa\u6a21\u578b\u770b\u8d77\u6765\u6548\u679c\u4e0d\u5982FBAFusion\uff0c\u4e0d\u8fc7\u4f9d\u7136\u53ef\u4ee5\u770b\u5230\u4f18\u5316\u7684\u6548\u679c\uff08\u6ca1\u6709\u51fa\u73b0\u91cd\u5f71\uff09\u3002\u5982\u679c\u8003\u8651\u5230\u5404\u65b9\u9762\uff0cBA\u7684\u6548\u679c\u5e94\u8be5\u662f\u6700\u597d\u7684\u3002 ./BAFusion ../../TestData/rgbd/607 0.01 \u91cd\u5efa\u6548\u679c\u5982\u4e0b\uff1a DenseFusion DenseFusion\u4f7f\u7528\u7684\u662fDenseTracking\uff0c\u5e76\u4e14\u6ca1\u6709\u75282D\u7684\u95ed\u73af\u68c0\u6d4b\u3002\u5b83\u5c06\u8bfb\u5165\u7684\u5e27\u6bcf\u8fc7 \\(N\\) \u4e2a\u4f5c\u4e3a\u4e00\u4e2asubmap\uff0c\u518d\u68c0\u6d4b\u5230\u65b0\u7684submap\u540e\uff0c\u5229\u7528\u5f53\u524d\u7684submap\u4e0e\u4e4b\u524d\u7684submap\u8fdb\u884cGlobalRegistration\uff0c\u518d\u901a\u8fc7\u8bbe\u5b9a\u9608\u503c\u6765\u68c0\u6d4b\u662f\u5426\u5339\u914d\u6210\u529f\uff0c\u8fd9\u6837\u4e5f\u80fd\u8fbe\u5230global consistency\u3002\u5f53\u7136\uff0cDenseTracking\u4ee5\u53caGlobalRegistration\u76f8\u5bf9\u4e8eSparseTracking\u548c\u901a\u8fc7Mild\u6765\u6392\u9664\u6389\u5927\u90e8\u5206\u9519\u8bef\u7684\u95ed\u73af\uff0c\u8981\u6162\u5f88\u591a\uff0c\u6240\u4ee5DenseFusion\u901f\u5ea6\u4e5f\u5f88\u4e00\u822c\uff0c\u662f\u4e00\u4e2a\u79bb\u7ebf\u91cd\u5efa\u7cfb\u7edf\u3002\u540e\u7aef\u4f18\u5316\uff0cDenseFusion\u91c7\u7528\u7684\u662fFast BundleAdjustment\u3002 ./DenseFusion ../../TestData/rgbd/607 0.01 \u91cd\u5efa\u7ed3\u679c\uff1a","title":"\u793a\u4f8b"},{"location":"examples/#_1","text":"\u8fd9\u91cc\u662f\u4e00\u4e9b\u4f7f\u7528FCLib\u7684\u7a0b\u5e8f\u3002\u6240\u6709\u7684\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u5728 examples \u6587\u4ef6\u5939\u4e2d\u627e\u5230\u6e90\u4ee3\u7801\u3002\u7f16\u8bd1\u540e\uff0c\u8fdb\u5165\u5230 build/example \u4e0b\u53ef\u4ee5\u8f93\u5165\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u6d4b\u8bd5\u3002","title":"\u793a\u4f8b"},{"location":"examples/#ply","text":"./ReadPLYPCD [filename.ply] ./ReadPLYMesh [filename.ply]","title":"\u8bfb\u53d6PLY\u7684\u70b9\u4e91/\u7f51\u683c\u5e76\u663e\u793a"},{"location":"examples/#rgbd","text":"./ReadRGBD [color] [depth]","title":"\u8bfb\u53d6RGBD\u63d0\u53d6\u70b9\u4e91\u5e76\u663e\u793a"},{"location":"examples/#sparsetrackingdensetracking","text":"./SparseOdometry [source_rgb] [source_depth] [target_rgb] [targe_depth] ./SparseOdometryMild [source_rgb] [source_depth] [target_rgb] [targe_depth] ./DenseOdometry [source_rgb] [source_depth] [target_rgb] [targe_depth]","title":"SparseTracking\u548cDenseTracking"},{"location":"examples/#_2","text":"./SimplifyMeshClustering [filename.ply] [grid_length] ./SimplifyMeshQuadric [filename.ply] [simplify_ratio] \u7b80\u5316\u6548\u679c\u5982\u4e0b\uff1a \u539f\u59cb\u6a21\u578b\uff08hand.ply\uff09 \u8fb9\u574d\u584c\uff08\u5269\u4e0b10%\u7684\u4e09\u89d2\u5f62\uff09 \u539f\u59cb\u6a21\u578b\uff08\u4f53\u7d20\u957f0.1\uff09","title":"\u7f51\u683c\u7b80\u5316"},{"location":"examples/#bundleadjustment","text":"\u8fd9\u91cc\u8f93\u5165\u4e00\u5bf9RGBD frame\uff0cBundleAdjutment\u4f1a\u6839\u636eFeature matching\u7684\u7ed3\u679c\u8fdb\u884c\u4f4d\u59ff\u8c03\u6574\uff0c\u4e4b\u540e\u4f1a\u53ef\u89c6\u5316\u5339\u914d\u7ed3\u679c\uff0c\u5e76\u5c06\u91cd\u6295\u5f71\u7ed3\u679c\u4fdd\u5b58\u5230\u76ee\u5f55\u4e0b\u7684\u56fe\u7247\u4e2d\u3002 ./BATest [source_rgb] [source_depth] [target_rgb] [targe_depth] \u7ed3\u679c\u5982\u4e0b\uff1a \u7ecf\u8fc7BA\u540e\u7684Match \u91cd\u6295\u5f71\u5bf9\u6bd4 \u7531\u4e8e\u4f18\u5316\u7684\u662f\u91cd\u6295\u5f71\u8bef\u5dee\uff0c\u4e09\u7ef4\u70b9\u4e91\u53ef\u89c6\u5316\u7684\u7ed3\u679c\u770b\u8d77\u6765\u53ef\u80fd\u5e76\u6ca1\u6709\u91cd\u6295\u5f71\u52302d\u56fe\u7247\u7ed3\u679c\u597d\u3002\u56e0\u4e3a\u4e09\u7ef4\u53ef\u89c6\u5316\u53ea\u662f\u8003\u8651\u4f4d\u59ff\u53d8\u5316\uff0c\u6839\u636e\u4f4d\u59ff\u5f97\u52303D\u70b9\uff0c\u800c\u6ca1\u6709\u5438\u6536\u5230\u4e16\u754c\u5750\u6807\u70b9\u4f18\u5316\u7684\u5185\u5bb9\u3002","title":"BundleAdjustment\u6d4b\u8bd5"},{"location":"examples/#icp","text":"ICPTest [source_pcd] [target_pcd] ICPTest\u5bf9\u4e24\u4e2a\u70b9\u4e91\u8fdb\u884c\u6ce8\u518c\u3002\u4f46\u662f\u5177\u4f53\u4f7f\u7528PointToPoint\u8fd8\u662fPointToPlane\u9700\u8981\u5728\u4ee3\u7801\u4e2d\u4fee\u6539\u3002\u4e0b\u9762\u662f\u4e24\u4e2a\u7b97\u6cd5\u8fed\u4ee330\u6b21\u540e\u7684\u8fd0\u884c\u7ed3\u679c\uff0c\u53ef\u4ee5\u770b\u51fa\u6765PointToPlane\u7684\u6536\u655b\u901f\u5ea6\u6bd4PointToPoint\u8981\u5feb\u5f88\u591a\u3002 point_to_point point_to_plane","title":"ICP\u6d4b\u8bd5"},{"location":"examples/#ransacregistration","text":"RansacTest [source_pcd] [target_pcd] RansacTest\u5bf9\u4e24\u4e2a\u70b9\u4e91\u8fdb\u884c\u6ce8\u518c\uff0c\u5728\u6ce8\u518c\u4e4b\u524d\u4f1a\u5bf9\u70b9\u4e91\u8fdb\u884c\u4e00\u4e2a\u968f\u673a\u65cb\u8f6c\uff0c\u5e76\u52a0\u4e0a\u5e73\u79fb\uff0c\u8fd9\u6837\u624d\u80fd\u770b\u51fa\u6765GlobalRegistration\u7684\u4f18\u52bf\u5728\u54ea\u91cc\u3002 \u4e0b\u9762\u662f\u8fd0\u884c\u7ed3\u679c\uff0c\u53ef\u4ee5\u4fee\u6539\u4ee3\u7801\uff0c\u53ef\u4ee5\u9009\u62e9\u76f4\u63a5\u770b\u5339\u914d\u540e\u7684\u7ed3\u679c\uff1a ransac registration \u9009\u62e9\u753b\u51fa\u6765correspondence\uff1a fpfh correspondence","title":"RansacRegistration\u6d4b\u8bd5"},{"location":"examples/#_3","text":"\u4f7f\u7528 algorithm \u4e2d\u7684\u7b97\u6cd5\u505a\u7684\u4e00\u4e9b\u6709\u610f\u601d\u7684\u4e8b\u60c5\u3002\u5728 example/RoomDetection.cpp \u4e2d\uff0c\u5b9e\u73b0\u4e86\u6839\u636e\u6709\u7740semantic\u4fe1\u606f\u7684\u70b9\u4e91\u6765\u5f97\u77e5\u623f\u95f4\u5e73\u9762\u56fe\u3002\u8fd9\u91cc\u9762\u7528\u5230\u4e86\uff1aLineDetection, PlaneDetection\uff08\u5b9e\u9645\u4e0a\u53ea\u9700\u8981\u4f7f\u7528\u4e00\u79cd\uff0c\u4e0d\u8fc7\u793a\u4f8b\u4e2d\u4e24\u4e2a\u90fd\u7528\u4e86\uff09, DCEL, KMedoidsClusteringDynamic\u3002 ./RoomDetection ../../TestData/room_with_labels.ply \u8f93\u5165\u7684\u6a21\u578b\uff1a \u68c0\u6d4b\u5230\u7684\u76f4\u7ebf\uff1a \u68c0\u6d4b\u5230\u7684\u5e73\u9762\uff08\u70b9\u4e91\u5f62\u5f0f\uff09\uff1a \u751f\u6210\u7684Line Arrangements\uff1a \u805a\u7c7b\u540e\u5f97\u5230\u7684\u623f\u95f4\u5e73\u9762\u56fe\uff1a","title":"\u623f\u95f4\u5e73\u9762\u56fe\u68c0\u6d4b"},{"location":"examples/#_4","text":"","title":"\u4e09\u4e2a\u91cd\u5efa\u7cfb\u7edf"},{"location":"examples/#fbafusion","text":"FBAFusion\u7528\u7684\u662fSparseTracking\uff0cMild\u95ed\u73af\u68c0\u6d4b\uff0c\u52a0\u4e0aFast BundleAdjustment\u540e\u7aef\u4f18\u5316\uff0c\u4e5f\u5c31\u662f\u9996\u9875\u5c55\u793a\u7684\u5185\u5bb9\u3002 ./FBAFusion ../../TestData/rgbd/607 0.01 FBAFusion\u6700\u5feb\u3002\u91cd\u5efa\u6a21\u578b\u5982\u4e0b\uff1a","title":"FBAFusion"},{"location":"examples/#bafusion","text":"BAFusion\u7528\u7684\u662fSparseTracking\uff0cMild\u95ed\u73af\u68c0\u6d4b\uff0c\u52a0\u4e0aBundleAdjustment\u540e\u7aef\u4f18\u5316\u3002\u4e4b\u524d\u8bf4\u8fc7\u4e86\uff0cBA\u5728\u540e\u9762\u77e9\u9635\u7ef4\u5ea6\u4f1a\u5f88\u5927\uff0c\u5373\u4f7f\u5728BAFusion\u4e2d\uff0c\u6bcf\u4e2akeyframe\u7684\u7279\u5f81\u70b9\u53ea\u670930\u4e2a\uff0c\u540e\u9762\u4f9d\u7136\u8981\u4e00\u5206\u949f\u5de6\u53f3\u751a\u81f3\u66f4\u4e45\u624d\u80fd\u4f18\u5316\u4e00\u6b21\u3002\u800c\u4e14BA\u4f1a\u4f18\u5316\u7a7a\u95f4\u70b9\uff08\u4f18\u5316\u6295\u5f71\u566a\u58f0\u4ee5\u53ca\u53c2\u6570\uff09\uff0c\u4f46\u662f\u8fd9\u90e8\u5206\u4f18\u5316\u5728\u6700\u540e\u751f\u6210\u6a21\u578b\u7684\u65f6\u5019\u5e76\u6ca1\u6709\u8003\u8651\uff0c\u53ea\u7528\u5230\u4e86\u4f18\u5316\u7684\u4f4d\u59ff\uff0c\u6240\u4ee5\u91cd\u5efa\u6a21\u578b\u770b\u8d77\u6765\u6548\u679c\u4e0d\u5982FBAFusion\uff0c\u4e0d\u8fc7\u4f9d\u7136\u53ef\u4ee5\u770b\u5230\u4f18\u5316\u7684\u6548\u679c\uff08\u6ca1\u6709\u51fa\u73b0\u91cd\u5f71\uff09\u3002\u5982\u679c\u8003\u8651\u5230\u5404\u65b9\u9762\uff0cBA\u7684\u6548\u679c\u5e94\u8be5\u662f\u6700\u597d\u7684\u3002 ./BAFusion ../../TestData/rgbd/607 0.01 \u91cd\u5efa\u6548\u679c\u5982\u4e0b\uff1a","title":"BAFusion"},{"location":"examples/#densefusion","text":"DenseFusion\u4f7f\u7528\u7684\u662fDenseTracking\uff0c\u5e76\u4e14\u6ca1\u6709\u75282D\u7684\u95ed\u73af\u68c0\u6d4b\u3002\u5b83\u5c06\u8bfb\u5165\u7684\u5e27\u6bcf\u8fc7 \\(N\\) \u4e2a\u4f5c\u4e3a\u4e00\u4e2asubmap\uff0c\u518d\u68c0\u6d4b\u5230\u65b0\u7684submap\u540e\uff0c\u5229\u7528\u5f53\u524d\u7684submap\u4e0e\u4e4b\u524d\u7684submap\u8fdb\u884cGlobalRegistration\uff0c\u518d\u901a\u8fc7\u8bbe\u5b9a\u9608\u503c\u6765\u68c0\u6d4b\u662f\u5426\u5339\u914d\u6210\u529f\uff0c\u8fd9\u6837\u4e5f\u80fd\u8fbe\u5230global consistency\u3002\u5f53\u7136\uff0cDenseTracking\u4ee5\u53caGlobalRegistration\u76f8\u5bf9\u4e8eSparseTracking\u548c\u901a\u8fc7Mild\u6765\u6392\u9664\u6389\u5927\u90e8\u5206\u9519\u8bef\u7684\u95ed\u73af\uff0c\u8981\u6162\u5f88\u591a\uff0c\u6240\u4ee5DenseFusion\u901f\u5ea6\u4e5f\u5f88\u4e00\u822c\uff0c\u662f\u4e00\u4e2a\u79bb\u7ebf\u91cd\u5efa\u7cfb\u7edf\u3002\u540e\u7aef\u4f18\u5316\uff0cDenseFusion\u91c7\u7528\u7684\u662fFast BundleAdjustment\u3002 ./DenseFusion ../../TestData/rgbd/607 0.01 \u91cd\u5efa\u7ed3\u679c\uff1a","title":"DenseFusion"},{"location":"rules/","text":"\u4e00\u4e9b\u89c4\u5219 \u65e2\u7136\u60f3\u8981\u5bf9\u521d\u5b66\u8005\u53cb\u597d\uff0c\u4ee3\u7801\u7ed3\u6784\u5c3d\u91cf\u6e05\u6670\u662f\u5f88\u6709\u5fc5\u8981\u7684\u3002\u8fd9\u91cc\u8bf4\u660e\u4e00\u4e9bFCLib\u5728\u7f16\u5199\u65f6\u5019\u9075\u5faa\u7684\u89c4\u5219\u3002 \u9996\u5148\uff0c\u9664\u4e86\u793a\u4f8b\uff0c\u6240\u6709\u7684\u7c7b\uff0c\u51fd\u6570\u7b49\uff0c\u90fd\u88ab\u5305\u542b\u5728 fucking_cool \u547d\u540d\u7a7a\u95f4\u91cc\u3002\u800cFCLib\u5206\u6210\u5404\u4e2a\u6a21\u5757\uff0c\u6bcf\u4e2a\u6a21\u5757\u4e5f\u6709\u5404\u81ea\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u5206\u522b\u662f\u76f8\u673a( camera )\uff0c\u51e0\u4f55( geometry )\uff0c\u89c6\u89c9\u91cc\u7a0b\u8ba1( odometry )\uff0c\u95ed\u73af\u68c0\u6d4b( lcdetection )\uff0c\u70b9\u4e91\u6ce8\u518c( registration )\uff0c\u4f18\u5316( optimization )\uff0c\u751f\u6210\u6a21\u578b( integration )\uff0c\u53ef\u89c6\u5316( visualization )\uff0c\u7b97\u6cd5( algorithm )\u4ee5\u53ca\u5176\u4ed6\u5de5\u5177( tool )\u3002 \u76ee\u5f55\u4ee5\u53ca\u6587\u4ef6\u540d\u79f0\u90fd\u662f\u5927\u5199\u52a0\u5c0f\u5199\u7684\u65b9\u5f0f( FuckingCool )\uff0c\u547d\u540d\u7a7a\u95f4\u90fd\u662f\u5c0f\u5199\u52a0\u4e0b\u5212\u7ebf( fucking_cool )\uff0c\u51fd\u6570\u4ee5\u53ca\u7c7b\u540d\u90fd\u662f\u5927\u5199\u52a0\u5c0f\u5199( FuckingCool )\uff0c\u800c\u67d0\u4e2a\u7279\u5b9a\u7684\u5bf9\u8c61\u662f\u5c0f\u5199\u52a0\u4e0b\u5212\u7ebf\u7684\u65b9\u5f0f( fucking_cool )(\u57fa\u672c\u90fd\u662f\u8fd9\u6837\uff0c\u6709\u4e9b\u51fd\u6570\u53ef\u80fd\u7531\u4e8e\u4f5c\u8005\u758f\u5ffd\u800c\u53ef\u80fd\u4f1a\u6709\u7834\u574f\u89c4\u5219\u7684\u60c5\u51b5)\u3002\u5bf9\u4e8e\u63d0\u524d\u5b9a\u4e49\u7684\u4e00\u4e9b\u7279\u6b8a\u503c\u6216\u8005\u53c2\u6570\u7528\u5168\u90e8\u5927\u5199\u52a0\u4e0b\u5212\u7ebf\u7684\u65b9\u5f0f( MAX_VALUE )\u3002 \u4ee3\u7801\u7f29\u8fdb\u53c2\u8003python\u7684\u8bed\u6cd5\u3002 \u4f5c\u8005\u7684\u6ce8\u91ca\u5199\u7684\u5f88\u5dee\u3002\u4f46\u662f\u76f8\u5173\u7684\u6587\u7ae0\u4f1a\u5728 related_paper \u6587\u4ef6\u5939\u4e2d\u7ed9\u51fa\u3002 \u5728 examples \u4e2d\uff0c\u4f5c\u8005\u7ed9\u51fa\u4e86\u82e5\u5e72\u4e2a\u793a\u4f8b\uff0c\u4e5f\u4f1a\u5728\u540e\u9762\u7684\u5185\u5bb9\u4e2d\u4ecb\u7ecd\u3002\u6ca1\u6709\u4ecb\u7ecd\u7684\u90e8\u5206\uff0c\u53ef\u80fd\u5c31\u662f\u4e34\u65f6\u521b\u5efa\u7684\u9879\u76ee\u672a\u6765\u5f97\u53ca\u5220\u6389\u7f62\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\u3002","title":"\u4e00\u4e9b\u5173\u4e8e\u4ee3\u7801\u7684\u89c4\u5219"},{"location":"rules/#_1","text":"\u65e2\u7136\u60f3\u8981\u5bf9\u521d\u5b66\u8005\u53cb\u597d\uff0c\u4ee3\u7801\u7ed3\u6784\u5c3d\u91cf\u6e05\u6670\u662f\u5f88\u6709\u5fc5\u8981\u7684\u3002\u8fd9\u91cc\u8bf4\u660e\u4e00\u4e9bFCLib\u5728\u7f16\u5199\u65f6\u5019\u9075\u5faa\u7684\u89c4\u5219\u3002 \u9996\u5148\uff0c\u9664\u4e86\u793a\u4f8b\uff0c\u6240\u6709\u7684\u7c7b\uff0c\u51fd\u6570\u7b49\uff0c\u90fd\u88ab\u5305\u542b\u5728 fucking_cool \u547d\u540d\u7a7a\u95f4\u91cc\u3002\u800cFCLib\u5206\u6210\u5404\u4e2a\u6a21\u5757\uff0c\u6bcf\u4e2a\u6a21\u5757\u4e5f\u6709\u5404\u81ea\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u5206\u522b\u662f\u76f8\u673a( camera )\uff0c\u51e0\u4f55( geometry )\uff0c\u89c6\u89c9\u91cc\u7a0b\u8ba1( odometry )\uff0c\u95ed\u73af\u68c0\u6d4b( lcdetection )\uff0c\u70b9\u4e91\u6ce8\u518c( registration )\uff0c\u4f18\u5316( optimization )\uff0c\u751f\u6210\u6a21\u578b( integration )\uff0c\u53ef\u89c6\u5316( visualization )\uff0c\u7b97\u6cd5( algorithm )\u4ee5\u53ca\u5176\u4ed6\u5de5\u5177( tool )\u3002 \u76ee\u5f55\u4ee5\u53ca\u6587\u4ef6\u540d\u79f0\u90fd\u662f\u5927\u5199\u52a0\u5c0f\u5199\u7684\u65b9\u5f0f( FuckingCool )\uff0c\u547d\u540d\u7a7a\u95f4\u90fd\u662f\u5c0f\u5199\u52a0\u4e0b\u5212\u7ebf( fucking_cool )\uff0c\u51fd\u6570\u4ee5\u53ca\u7c7b\u540d\u90fd\u662f\u5927\u5199\u52a0\u5c0f\u5199( FuckingCool )\uff0c\u800c\u67d0\u4e2a\u7279\u5b9a\u7684\u5bf9\u8c61\u662f\u5c0f\u5199\u52a0\u4e0b\u5212\u7ebf\u7684\u65b9\u5f0f( fucking_cool )(\u57fa\u672c\u90fd\u662f\u8fd9\u6837\uff0c\u6709\u4e9b\u51fd\u6570\u53ef\u80fd\u7531\u4e8e\u4f5c\u8005\u758f\u5ffd\u800c\u53ef\u80fd\u4f1a\u6709\u7834\u574f\u89c4\u5219\u7684\u60c5\u51b5)\u3002\u5bf9\u4e8e\u63d0\u524d\u5b9a\u4e49\u7684\u4e00\u4e9b\u7279\u6b8a\u503c\u6216\u8005\u53c2\u6570\u7528\u5168\u90e8\u5927\u5199\u52a0\u4e0b\u5212\u7ebf\u7684\u65b9\u5f0f( MAX_VALUE )\u3002 \u4ee3\u7801\u7f29\u8fdb\u53c2\u8003python\u7684\u8bed\u6cd5\u3002 \u4f5c\u8005\u7684\u6ce8\u91ca\u5199\u7684\u5f88\u5dee\u3002\u4f46\u662f\u76f8\u5173\u7684\u6587\u7ae0\u4f1a\u5728 related_paper \u6587\u4ef6\u5939\u4e2d\u7ed9\u51fa\u3002 \u5728 examples \u4e2d\uff0c\u4f5c\u8005\u7ed9\u51fa\u4e86\u82e5\u5e72\u4e2a\u793a\u4f8b\uff0c\u4e5f\u4f1a\u5728\u540e\u9762\u7684\u5185\u5bb9\u4e2d\u4ecb\u7ecd\u3002\u6ca1\u6709\u4ecb\u7ecd\u7684\u90e8\u5206\uff0c\u53ef\u80fd\u5c31\u662f\u4e34\u65f6\u521b\u5efa\u7684\u9879\u76ee\u672a\u6765\u5f97\u53ca\u5220\u6389\u7f62\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u5ffd\u7565\u3002","title":"\u4e00\u4e9b\u89c4\u5219"},{"location":"thanksto/","text":"\u81f4\u8c22 \u611f\u8c22 Open3D \uff0c Google \uff0c SCIHub \uff0c Github \uff0c arxiv \uff0c Luvision\u5b9e\u9a8c\u5ba4\u53ca\u6210\u5458 \u3002 \u7279\u522b\u611f\u8c22 Lei Han \u3002","title":"\u81f4\u8c22"},{"location":"thanksto/#_1","text":"\u611f\u8c22 Open3D \uff0c Google \uff0c SCIHub \uff0c Github \uff0c arxiv \uff0c Luvision\u5b9e\u9a8c\u5ba4\u53ca\u6210\u5458 \u3002 \u7279\u522b\u611f\u8c22 Lei Han \u3002","title":"\u81f4\u8c22"},{"location":"modules/algorithm/","text":"\u4e00\u4e9b\u7b97\u6cd5 FCLib\u4e5f\u5b9e\u73b0\u4e86\u4e00\u4e9b\u5176\u4ed6\u7684\u7b97\u6cd5\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u6bd4\u8f83\u6742\u4e71\uff0c\u603b\u4e4b\u662f\u4f5c\u8005\u5e73\u65f6\u5b66\u4e60\u6709\u7528\u5230\u7684\u4e1c\u897f\u3002\u4e4b\u540eexample\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e9b\u4e1c\u897f\u53ef\u4ee5\u505a\u4e00\u4e9b\u795e\u5947\u7684\u4e8b\u60c5\u3002 Clutering.h Clutering.h \u4e2d\u5b9e\u73b0\u4e86\u4e09\u79cd\u805a\u7c7b\u65b9\u6cd5\uff1aKMeans\uff08\u57fa\u4e8eOpenCV\uff09\uff0c MeansShift\uff0cKMediods\u3002 //\u57fa\u4e8eOpenCV\u5b9e\u73b0\u7684KMmeans\u805a\u7c7b template <int T > void KMeansClustering(const std::vector<Eigen::Matrix<geometry::scalar,T,1>, Eigen::aligned_allocator<Eigen::Matrix<geometry::scalar,T,1>> > & wait_to_cluster, std::vector<Cluster<T>> &clustering_result, int K); //MeansShift\u805a\u7c7b template <int T > void MeansShiftClustering(const std::vector<Eigen::Matrix<geometry::scalar,T,1>, Eigen::aligned_allocator<Eigen::Matrix<geometry::scalar,T,1>> > & wait_to_cluster, std::vector<Cluster<T>> &clustering_result, float radius); //KMedoids\u805a\u7c7b template <int T > void KMedoidsClustering(const std::vector<Eigen::Matrix<geometry::scalar,T,1>, Eigen::aligned_allocator<Eigen::Matrix<geometry::scalar,T,1>> > & wait_to_cluster, std::vector<Cluster<T>> &clustering_result, int target_number, bool initialized = false, const std::vector<int> & initialized_index = std::vector<int>()); //\u4e0a\u9762\u4e09\u79cd\u805a\u7c7b\uff0c\u9700\u8981\u5728\u5199\u7a0b\u5e8f\u65f6\u5019\u786e\u5b9a\u805a\u7c7b\u7684\u5bf9\u8c61\u7684\u5411\u91cf\u7ef4\u5ea6 //\u8fd9\u4e2a\u7ef4\u5ea6\u662f\u53ef\u4ee5\u6839\u636e\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c\u52a8\u6001\u8bbe\u5b9a\u7684\uff0c\u7528\u5230\u4e86Eigen\u7684Dynamic Matrix void KMedoidsClusteringDynamic(const geometry::PointXList & wait_to_cluster, std::vector<ClusterDynamic> &clustering_result, int target_number, bool initialized = false, const std::vector<int> & initialized_index = std::vector<int>()); PatchDetection.h PatchDetection.h \u4e2d\u4e3b\u8981\u662f\u7528\u6765\u5728\u4e00\u7ec4\u70b9\u4e2d\u68c0\u6d4b\u76f4\u7ebf(\u4e8c\u7ef4\u70b9)\u6216\u8005\u5e73\u9762\uff08\u4e09\u7ef4\u70b9\uff09\u3002 void LineDetection(const geometry::Point2List &points, std::vector<LinePatch> &results); void PlaneDetection(const geometry::Point3List &points, std::vector<PlanePatch> &Patches); DCEL.h DCEL.h \u5b9e\u73b0\u4e86Doubly Connected Edge List\uff0c\u662f\u8ba1\u7b97\u51e0\u4f55\u975e\u5e38\u57fa\u7840\u7684\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u4e3b\u8981\u7528\u6765\u63cf\u8ff0Line Arrangements\uff08\u53c8\u53ebCell Complex\uff09\u3002\u4e5f\u5c31\u662f\u5728\u4e00\u4e2a\u5e73\u9762\u4e0a\u6709\u5f88\u591a\u76f4\u7ebf\u76f8\u4ea4\u540e\uff0c\u7ec4\u6210\u4e00\u4e9b\u7f51\u683c\uff0c\u8fd9\u4e9b\u7f51\u683c\u5c31\u50cf\u662f\u7ec6\u80de\u4e00\u6837\uff08Cell\uff09\u3002\u7528DCEL\u6765\u63cf\u8ff0\u7684\u8bdd\uff0c\u53ef\u4ee5\u968f\u610f\u5411\u5176\u4e2d\u6dfb\u52a0\u76f4\u7ebf\uff08\u6216\u8005\u62bd\u53d6\u67d0\u6761\u76f4\u7ebf\uff0c\u5f88\u5c11\u7528\u5230\uff09\uff0c\u4e5f\u80fd\u5f88\u5bb9\u6613\u627e\u5230\u67d0\u6761\u76f4\u7ebf\u7ecf\u8fc7\u7684\u7f51\u683c\uff0c\u4e5f\u80fd\u5f88\u5bb9\u6613\u5b9a\u4f4d\u4efb\u610f\u7ed9\u5b9a\u7684\u70b9\u5728\u54ea\u4e2a\u7f51\u683c\u4e2d\uff0c\u603b\u4e4b\u975e\u5e38\u5f3a\u5927\u3002 Line Arrangements DCEL \u7c7b\u4e3b\u8981\u6709\u4e0b\u9762\u4e24\u4e2a\u6210\u5458\u51fd\u6570\uff1a //\u6dfb\u52a0\u76f4\u7ebf void IncrementLine(const geometry::Line &line); //\u62bd\u53bb\u67d0\u6761\u7ebf\uff08\u672a\u7ecf\u8fc7\u8db3\u591f\u7684\u6d4b\u8bd5\u6765\u4fdd\u8bc1\u6b63\u786e\u6027\uff09 void ReductLine(int line_id); \u770b\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u80cc\u540e\u7684\u5b9e\u73b0\u8fd8\u662f\u975e\u5e38\u590d\u6742\u7684\u3002 Arrangements.h Arrangements.h \u7528\u6765\u8f85\u52a9DCEL\u7684\u5efa\u7acb\uff0c\u53ef\u4ee5\u7528\u6765\u6c42\u591a\u6761\u76f4\u7ebf\u7684\u4ea4\u70b9\uff0c\u4ece\u800c\u786e\u5b9aDCEL\u7684boundingbox\u6709\u591a\u5927\u3002 \u5173\u4e8eLine Arragements\u53ef\u4ee5\u5728\u8fd9\u4e2a\u7f51\u7ad9\u770b\u5728\u7ebf\u7684Demo\uff1a Line Arrangements","title":"\u4e00\u4e9b\u7b97\u6cd5"},{"location":"modules/algorithm/#_1","text":"FCLib\u4e5f\u5b9e\u73b0\u4e86\u4e00\u4e9b\u5176\u4ed6\u7684\u7b97\u6cd5\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u6bd4\u8f83\u6742\u4e71\uff0c\u603b\u4e4b\u662f\u4f5c\u8005\u5e73\u65f6\u5b66\u4e60\u6709\u7528\u5230\u7684\u4e1c\u897f\u3002\u4e4b\u540eexample\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u4e9b\u4e1c\u897f\u53ef\u4ee5\u505a\u4e00\u4e9b\u795e\u5947\u7684\u4e8b\u60c5\u3002","title":"\u4e00\u4e9b\u7b97\u6cd5"},{"location":"modules/algorithm/#cluteringh","text":"Clutering.h \u4e2d\u5b9e\u73b0\u4e86\u4e09\u79cd\u805a\u7c7b\u65b9\u6cd5\uff1aKMeans\uff08\u57fa\u4e8eOpenCV\uff09\uff0c MeansShift\uff0cKMediods\u3002 //\u57fa\u4e8eOpenCV\u5b9e\u73b0\u7684KMmeans\u805a\u7c7b template <int T > void KMeansClustering(const std::vector<Eigen::Matrix<geometry::scalar,T,1>, Eigen::aligned_allocator<Eigen::Matrix<geometry::scalar,T,1>> > & wait_to_cluster, std::vector<Cluster<T>> &clustering_result, int K); //MeansShift\u805a\u7c7b template <int T > void MeansShiftClustering(const std::vector<Eigen::Matrix<geometry::scalar,T,1>, Eigen::aligned_allocator<Eigen::Matrix<geometry::scalar,T,1>> > & wait_to_cluster, std::vector<Cluster<T>> &clustering_result, float radius); //KMedoids\u805a\u7c7b template <int T > void KMedoidsClustering(const std::vector<Eigen::Matrix<geometry::scalar,T,1>, Eigen::aligned_allocator<Eigen::Matrix<geometry::scalar,T,1>> > & wait_to_cluster, std::vector<Cluster<T>> &clustering_result, int target_number, bool initialized = false, const std::vector<int> & initialized_index = std::vector<int>()); //\u4e0a\u9762\u4e09\u79cd\u805a\u7c7b\uff0c\u9700\u8981\u5728\u5199\u7a0b\u5e8f\u65f6\u5019\u786e\u5b9a\u805a\u7c7b\u7684\u5bf9\u8c61\u7684\u5411\u91cf\u7ef4\u5ea6 //\u8fd9\u4e2a\u7ef4\u5ea6\u662f\u53ef\u4ee5\u6839\u636e\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c\u52a8\u6001\u8bbe\u5b9a\u7684\uff0c\u7528\u5230\u4e86Eigen\u7684Dynamic Matrix void KMedoidsClusteringDynamic(const geometry::PointXList & wait_to_cluster, std::vector<ClusterDynamic> &clustering_result, int target_number, bool initialized = false, const std::vector<int> & initialized_index = std::vector<int>());","title":"Clutering.h"},{"location":"modules/algorithm/#patchdetectionh","text":"PatchDetection.h \u4e2d\u4e3b\u8981\u662f\u7528\u6765\u5728\u4e00\u7ec4\u70b9\u4e2d\u68c0\u6d4b\u76f4\u7ebf(\u4e8c\u7ef4\u70b9)\u6216\u8005\u5e73\u9762\uff08\u4e09\u7ef4\u70b9\uff09\u3002 void LineDetection(const geometry::Point2List &points, std::vector<LinePatch> &results); void PlaneDetection(const geometry::Point3List &points, std::vector<PlanePatch> &Patches);","title":"PatchDetection.h"},{"location":"modules/algorithm/#dcelh","text":"DCEL.h \u5b9e\u73b0\u4e86Doubly Connected Edge List\uff0c\u662f\u8ba1\u7b97\u51e0\u4f55\u975e\u5e38\u57fa\u7840\u7684\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u4e3b\u8981\u7528\u6765\u63cf\u8ff0Line Arrangements\uff08\u53c8\u53ebCell Complex\uff09\u3002\u4e5f\u5c31\u662f\u5728\u4e00\u4e2a\u5e73\u9762\u4e0a\u6709\u5f88\u591a\u76f4\u7ebf\u76f8\u4ea4\u540e\uff0c\u7ec4\u6210\u4e00\u4e9b\u7f51\u683c\uff0c\u8fd9\u4e9b\u7f51\u683c\u5c31\u50cf\u662f\u7ec6\u80de\u4e00\u6837\uff08Cell\uff09\u3002\u7528DCEL\u6765\u63cf\u8ff0\u7684\u8bdd\uff0c\u53ef\u4ee5\u968f\u610f\u5411\u5176\u4e2d\u6dfb\u52a0\u76f4\u7ebf\uff08\u6216\u8005\u62bd\u53d6\u67d0\u6761\u76f4\u7ebf\uff0c\u5f88\u5c11\u7528\u5230\uff09\uff0c\u4e5f\u80fd\u5f88\u5bb9\u6613\u627e\u5230\u67d0\u6761\u76f4\u7ebf\u7ecf\u8fc7\u7684\u7f51\u683c\uff0c\u4e5f\u80fd\u5f88\u5bb9\u6613\u5b9a\u4f4d\u4efb\u610f\u7ed9\u5b9a\u7684\u70b9\u5728\u54ea\u4e2a\u7f51\u683c\u4e2d\uff0c\u603b\u4e4b\u975e\u5e38\u5f3a\u5927\u3002 Line Arrangements DCEL \u7c7b\u4e3b\u8981\u6709\u4e0b\u9762\u4e24\u4e2a\u6210\u5458\u51fd\u6570\uff1a //\u6dfb\u52a0\u76f4\u7ebf void IncrementLine(const geometry::Line &line); //\u62bd\u53bb\u67d0\u6761\u7ebf\uff08\u672a\u7ecf\u8fc7\u8db3\u591f\u7684\u6d4b\u8bd5\u6765\u4fdd\u8bc1\u6b63\u786e\u6027\uff09 void ReductLine(int line_id); \u770b\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u80cc\u540e\u7684\u5b9e\u73b0\u8fd8\u662f\u975e\u5e38\u590d\u6742\u7684\u3002","title":"DCEL.h"},{"location":"modules/algorithm/#arrangementsh","text":"Arrangements.h \u7528\u6765\u8f85\u52a9DCEL\u7684\u5efa\u7acb\uff0c\u53ef\u4ee5\u7528\u6765\u6c42\u591a\u6761\u76f4\u7ebf\u7684\u4ea4\u70b9\uff0c\u4ece\u800c\u786e\u5b9aDCEL\u7684boundingbox\u6709\u591a\u5927\u3002 \u5173\u4e8eLine Arragements\u53ef\u4ee5\u5728\u8fd9\u4e2a\u7f51\u7ad9\u770b\u5728\u7ebf\u7684Demo\uff1a Line Arrangements","title":"Arrangements.h"},{"location":"modules/camera/","text":"\u9488\u5b54\u76f8\u673a \u76f8\u673a\u6a21\u5757\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u9488\u5b54\u76f8\u673a\u6a21\u578b\uff0c\u5b9a\u4e49\u4e86\u76f8\u673a\u7684\u5185\u53c2\uff0c\u7578\u53d8\u53c2\u6570\uff08FCLib\u5b9e\u9645\u4e0a\u76ee\u524d\u6ca1\u6709\u7528\u5230\u8fd9\u90e8\u5206\uff0c\u6240\u4ee5\u5168\u90e8\u9ed8\u8ba4\u4e3a0\uff09\uff0c\u4ee5\u53ca\u6df1\u5ea6\u8303\u56f4\u3002\u4f60\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u6807\u5b9a\u76f8\u673a\u7684\u7ed3\u679c\u8bbe\u5b9a\u76f8\u673a\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5e93\u4e2d\u5b9a\u4e49\u597d\u7684TUM\u6570\u636e\u96c6\u7684\u76f8\u673a\u53c2\u6570\u6216\u8005\u662f\u4e00\u822c\u534e\u7855xtion\u76f8\u673a\u53c2\u6570\u3002 \u76f8\u673a\u6a21\u5757\u5f88\u7b80\u5355\uff0c\u53ea\u5305\u542b\u4e00\u4e2a\u5934\u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7 ToCameraMatrix \u6765\u8f7b\u677e\u5f97\u5230\u76f8\u673a\u53c2\u6570\u77e9\u9635\u65b9\u4fbf\u8fd0\u7b97\uff0c\u5bf9\u76f8\u673a\u7684\u90e8\u5206\uff0c\u53ea\u8981\u4e86\u89e3\u4e86\u9488\u5b54\u76f8\u673a\u6a21\u578b\uff0c\u5c31\u80fd\u5f88\u5bb9\u6613\u660e\u767d\u8fd9\u90e8\u5206\u7684\u4ee3\u7801\u3002 \u6709\u751f\u4e4b\u5e74\u53ef\u80fd\u4f1a\u6dfb\u52a0\u9c7c\u773c\u76f8\u673a\u6a21\u578b\u3002","title":"\u76f8\u673a"},{"location":"modules/camera/#_1","text":"\u76f8\u673a\u6a21\u5757\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u9488\u5b54\u76f8\u673a\u6a21\u578b\uff0c\u5b9a\u4e49\u4e86\u76f8\u673a\u7684\u5185\u53c2\uff0c\u7578\u53d8\u53c2\u6570\uff08FCLib\u5b9e\u9645\u4e0a\u76ee\u524d\u6ca1\u6709\u7528\u5230\u8fd9\u90e8\u5206\uff0c\u6240\u4ee5\u5168\u90e8\u9ed8\u8ba4\u4e3a0\uff09\uff0c\u4ee5\u53ca\u6df1\u5ea6\u8303\u56f4\u3002\u4f60\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u6807\u5b9a\u76f8\u673a\u7684\u7ed3\u679c\u8bbe\u5b9a\u76f8\u673a\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5e93\u4e2d\u5b9a\u4e49\u597d\u7684TUM\u6570\u636e\u96c6\u7684\u76f8\u673a\u53c2\u6570\u6216\u8005\u662f\u4e00\u822c\u534e\u7855xtion\u76f8\u673a\u53c2\u6570\u3002 \u76f8\u673a\u6a21\u5757\u5f88\u7b80\u5355\uff0c\u53ea\u5305\u542b\u4e00\u4e2a\u5934\u6587\u4ef6\uff0c\u53ef\u4ee5\u901a\u8fc7 ToCameraMatrix \u6765\u8f7b\u677e\u5f97\u5230\u76f8\u673a\u53c2\u6570\u77e9\u9635\u65b9\u4fbf\u8fd0\u7b97\uff0c\u5bf9\u76f8\u673a\u7684\u90e8\u5206\uff0c\u53ea\u8981\u4e86\u89e3\u4e86\u9488\u5b54\u76f8\u673a\u6a21\u578b\uff0c\u5c31\u80fd\u5f88\u5bb9\u6613\u660e\u767d\u8fd9\u90e8\u5206\u7684\u4ee3\u7801\u3002 \u6709\u751f\u4e4b\u5e74\u53ef\u80fd\u4f1a\u6dfb\u52a0\u9c7c\u773c\u76f8\u673a\u6a21\u578b\u3002","title":"\u9488\u5b54\u76f8\u673a"},{"location":"modules/geometry/","text":"\u51e0\u4f55\u6a21\u5757 \u51e0\u4f55\u6a21\u5757\u662f\u6574\u4e2a\u7cfb\u7edf\u7684\u4e00\u4e2a\u57fa\u7840\u3002\u8fd9\u91cc\u9762\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5f88\u57fa\u7840\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b9e\u73b0\u4e86\u57fa\u7840\u7684\u8fd0\u7b97\u548c\u7b97\u6cd5\uff0c\u5305\u62ec\u5bf9\u4e8e\u70b9\uff0c\u53d8\u6362\u77e9\u9635\uff08Transformation\uff09\uff0c\u674e\u7fa4\u674e\u4ee3\u6570\uff08SE(3), se(3)\uff09\u4e4b\u95f4\u7684\u8f6c\u6362\u7b49\u7b49\uff0c\u8fd8\u6709\u70b9\u4e91\uff0c\u4e09\u89d2\u7f51\u683c\u7b49\u5e38\u7528\u6570\u636e\u7ed3\u6784\u53ca\u76f8\u5173\u7b97\u6cd5\u7684\u5b9a\u4e49\u548c\u5b9e\u73b0\u3002 Geometry.h \u5728 Geometry.h \u4e2d\uff0c\u9996\u5148\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u5c31\u662f\uff1a typedef float scalar; \u8fd9\u91cc\u9ed8\u8ba4\u5c06 float \u4f5c\u4e3a\u6807\u91cf\u7c7b\u578b\uff0c\u56e0\u6b64\u4e4b\u540e\u70b9\u4e91\uff0c\u77e9\u9635\u7b49\uff0c\u683c\u5f0f\u90fd\u662f\u5355\u7cbe\u5ea6\u7684\uff0c\u5728\u8fd9\u91cc\u53ef\u4ee5\u6539\u53d8\u6574\u4e2a\u5e93\u4f7f\u7528\u7684\u6d6e\u70b9\u6570\u7cbe\u5ea6\u3002 typedef Vector6 Se3; typedef Matrix4 SE3; \u674e\u7fa4\u674e\u4ee3\u6570\u88ab\u5b9a\u4e49\u4e3aSE3\u548cSe3\uff0c\u5206\u522b\u662f\u56db\u7ef4\u65b9\u9635\u548c6\u7ef4\u77e9\u9635\uff0c\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\uff1a Matrix4 Se3ToSE3(const Vector6 &input); Vector6 SE3ToSe3(const Matrix4 &input); \u6765\u4e92\u76f8\u8f6c\u6362\uff0c\u8fd9\u4e2a\u51fd\u6570\u5185\u90e8\u5b9e\u73b0\u662f\u901a\u8fc7 Sophus \u5e93\u5b8c\u6210\u7684\uff08\u5728Open3D\u4e2d\uff0c\u4ece6\u7ef4\u5411\u91cf\u52304\u7ef4\u65b9\u9635\u7684\u4e92\u76f8\u53d8\u6362\uff0c\u5bf9\u4e8e\u5e73\u79fb\u90e8\u5206\u662f\u5b8c\u5168\u4e0d\u53d8\u7684\uff0c\u4f46\u662f\u4ece\u6570\u5b66\u63a8\u5bfc\u4e0a\u6765\u8bf4\uff0c\u4e8c\u8005\u662f\u6709\u5fae\u5c0f\u533a\u522b\u7684\uff0c\u6240\u4ee5\u7406\u8bba\u4e0a Sophus \u5e93\u662f\u66f4\u51c6\u786e\u7684\u53d8\u6362\uff0c\u5982\u4e0b\u56fe\uff09\u3002 struct VoxelGridHasher; struct PixelGridHasher; \u4e0a\u9762\u4e24\u4e2a\u5206\u522b\u662f\u4e09\u7ef4\u548c\u4e8c\u7ef4\u6574\u578b\u5411\u91cf\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u7a7a\u95f4\u54c8\u5e0c\u662f\u5f88\u9ad8\u6548\u7684\u6570\u636e\u7ed3\u6784\u3002 std::tuple<Point3, double, double> FitPlane(const Point3List & _points); std::tuple<Vector2, double, double> FitLine(const Point2List & _points); \u4e0a\u8ff0\u51fd\u6570\u5206\u522b\u7528\u6765\u62df\u5408\u4e00\u7ec43D\u70b9\u7684\u5e73\u9762\uff0c\u4ee5\u53ca2D\u70b9\u7684\u76f4\u7ebf\u3002\u4f8b\u5982\u4e09\u7ef4\u5750\u6807\u7cfb\u4e0b\uff0c\u5e73\u9762\u7684\u53c2\u6570\u65b9\u7a0b\u4e3a\uff1a \\(ax+by+cz+d = 0\\) \uff0c\u5176\u4e2d \\(n=\\{a, b, c\\}^T\\) \u662f\u5e73\u9762\u7684\u6cd5\u5411\u91cf\u3002\u4e0a\u8ff0\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a std::tuple \uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u4e3a\u5e73\u9762\u6216\u8005\u76f4\u7ebf\u7684\u6cd5\u5411\u91cf\uff0c\u7b2c\u4e8c\u4e2a\u4e3a \\(d\\) \uff0c\u7b2c\u4e09\u4e2a\u662f\u6b21\u5927\u5947\u5f02\u503c\u4e0e\u6700\u5927\u5947\u5f02\u503c\u7684\u4e00\u4e2a\u6bd4\u503c(\u4f7f\u7528SVD\u6765\u62df\u5408\u5e73\u9762\u6216\u8005\u76f4\u7ebf\uff0c\u53ef\u4ee5\u5f97\u5230\u5947\u5f02\u503c)\uff0c\u53ef\u4ee5\u7528\u6765\u4f5c\u4e3a\u5bf9\u539f\u59cb\u70b9\u4e0e\u62df\u5408\u5e73\u9762\u8bef\u5dee\u7684\u6307\u6807\uff0c\u5982\u679c\u6240\u6709\u70b9\u90fd\u5728\u5e73\u9762\u4e0a\uff0c\u8be5\u503c\u4e3a0\u3002\u4e5f\u5c31\u662f\u5e73\u9762fit\u5f97\u8d8a\u597d\uff0c\u8be5\u503c\u8d8a\u5c0f\u3002 \u5728 Geometry.h \u4e2d\u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5176\u4ed6\u7684\u522b\u540d\uff0c\u7528\u4e8e\u4e4b\u540e\u7684\u7279\u5f81\u5339\u914d\u7b49\uff0c\u8fd9\u4e9b\u522b\u540d\u4e4b\u6240\u4ee5\u88ab\u5b9a\u4e49\u4e5f\u6b63\u662f\u56e0\u4e3a\u8d77\u522b\u540d\u66f4\u4fbf\u4e8e\u7406\u89e3\uff0c\u5982\u679c\u5bf9\u57fa\u7840\u77e5\u8bc6\u8db3\u591f\u4e86\u89e3\uff0c\u4e00\u770b\u5c31\u77e5\u9053\u6307\u7684\u662f\u4ec0\u4e48\u4e86\u3002 Geometry2d.h Geometry2d.h \u5b9e\u73b0\u4e86\u4e00\u4e9b2d\u4e0a\u7684\u51e0\u4f55\u7b97\u6cd5\uff0c\u4e3b\u8981\u662f\u8ba1\u7b97\u51e0\u4f55\u7684\u4e00\u4e9b\u975e\u5e38\u975e\u5e38\u57fa\u7840\u7684\u5185\u5bb9\u3002\u8fd9\u90e8\u5206\u662f\u4e3a\u4e86\u5b9e\u73b0\u4e4b\u540e Algorithm \u4e2d DCEL (doubly connected edge list)\u800c\u5199\u7684\u3002\u5bf9\u4e8e\u8fd9\u90e8\u5206\u4e2d\u6bd4\u8f83\u91cd\u8981\u7684\u51fd\u6570\u6709\uff1a //\u68c0\u67e5\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u4e00\u4e2a\u51f8\u591a\u8fb9\u5f62\u5185 int CheckPointInConvexPoly(const geometry::Point2List &points, const Point2 &p); //\u8ba1\u7b97\u4e00\u4e2a\u51f8\u591a\u8fb9\u5f62\u7684\u9762\u79ef float ComputeAreaConvexPoly(const Point2List &points); PointCloud.h PointCloud\u662f\u70b9\u4e91\u76f8\u5173\u7684\u6570\u636e\u7ed3\u6784\u4e0e\u4e00\u4e9b\u7b80\u5355\u7684\u5904\u7406\u7b97\u6cd5\u3002\u70b9\u4e91\u5305\u542b\u70b9\uff0c\u989c\u8272\uff0c\u6cd5\u5411\uff08\u540e\u9762\u4e8c\u8005\u662f\u53ef\u9009\u7684\uff09\uff0c\u76f8\u5173\u7b97\u6cd5\u5305\u542b\u4e86\u70b9\u4e91\u7684\u4e0b\u91c7\u6837\uff0c\u6cd5\u5411\u91cf\u4f30\u8ba1\u7b49\u7b49\u3002\u4e0b\u9762\u5217\u51fa\u4e00\u4e9b\u57fa\u672c\u7684\u6210\u5458\u51fd\u6570\uff1a //\u4ecePLY\u6587\u4ef6\u8bfb\u53d6\u70b9\u4e91 void LoadFromPLY(const std::string &filename); //\u4eceOBJ\u6587\u4ef6\u8bfb\u53d6\u70b9\u4e91 void LoadFromOBJ(const std::string &filename); //\u4eceRGBD\u56fe\u8bfb\u53d6\u70b9\u4e91 void LoadFromRGBD(const cv::Mat &rgb, const cv::Mat & depth, const camera::PinholeCamera &camera ); void LoadFromRGBD(const RGBDFrame &rbgd, const camera::PinholeCamera &camera ); //\u4f30\u8ba1\u6cd5\u5411\u91cf\uff0c\u901a\u8fc7\u5bf9\u67d0\u4e2a\u70b9\u7684\u5468\u56f4\u70b9\u8fdb\u884c\u5e73\u9762\u62df\u5408\u3002radius\u4ee3\u8868\u4e86\u641c\u7d22\u534a\u5f84\uff0cknn\u4ee3\u8868\u62df\u5408\u70b9\u7684\u6570\u91cf void EstimateNormals(float radius = 0.1, int knn = 30); //\u6839\u636e\u53d8\u6362\u77e9\u9635\u5bf9\u70b9\u4e91\u8fdb\u884c\u65cb\u8f6c\u5e73\u79fb void Transform(const TransformationMatrix &T); //\u5bf9\u70b9\u4e91\u8fdb\u884c\u4e0b\u91c7\u6837 std::shared_ptr<PointCloud> DownSample(double grid_len); //\u5c06\u70b9\u4e91\u5199\u5230PLY\u6587\u4ef6\u4e2d bool WriteToPLY(const std::string &fileName) const; //\u5c06\u70b9\u4e91\u5199\u5230OBJ\u6587\u4ef6\u4e2d bool WriteToOBJ(const std::string &fileName) const; //\u4e0e\u53e6\u5916\u4e00\u4e2a\u70b9\u4e91\u5408\u5e76 void MergePCD(const PointCloud & another_pcd); TriangleMesh.h TriangleMesh\u5b9a\u4e49\u4e86\u4e09\u89d2\u7f51\u683c\u6570\u636e\u7ed3\u6784\u4ee5\u53ca\u76f8\u5173\u7684\u7b97\u6cd5\uff0c\u4e09\u89d2\u7f51\u683c\u4e0e\u70b9\u4e91\u6700\u5927\u7684\u533a\u522b\u5c31\u662f\u6709\u8fb9\u548c\u9762\uff0c\u5728\u4e09\u89d2\u7f51\u683c\u4e2d\u6bcf\u4e2a\u9762\u90fd\u662f\u4e09\u89d2\u5f62\uff0c\u75313\u4e2a\u70b9\u6784\u6210\u3002\u56e0\u6b64\uff0c\u9664\u4e86\u70b9\u4e4b\u5916\uff0c\u4e09\u89d2\u7f51\u683c\u4e2d\u8fd8\u6709\u9762\u8868\uff0c\u91cc\u9762\u5b58\u653e\u7684\u662f\u6784\u6210\u9762\u76843\u4e2a\u70b9\u7684\u7d22\u5f15\u3002\u76ee\u524d\u5b9e\u73b0\u7684\u7f51\u683c\uff0c\u662f\u4e0d\u5305\u542b\u7eb9\u7406\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e00\u5757\u513f\u4f5c\u8005\u4e0d\u61c2\u3002 //\u4ecePLY\u6587\u4ef6\u8bfb\u53d6\u7f51\u683c void LoadFromPLY(const std::string &filename); //\u4eceOBJ\u6587\u4ef6\u8bfb\u53d6\u7f51\u683c void LoadFromOBJ(const std::string &filename); /* \u8ba1\u7b97\u6cd5\u5411\u91cf\uff0c\u4e09\u89d2\u7f51\u683c\u7684\u6cd5\u5411\u91cf\u76f8\u5bf9\u4e8e\u7f51\u683c\u7684\u6cd5\u5411\u91cf\u4f30\u8ba1\u5c31\u5bb9\u6613\u591a\u4e86\u3002 \u9996\u5148\uff0c\u4e09\u89d2\u7f51\u683c\u5df2\u7ecf\u6709\u9762\u4e86\uff0c\u4e5f\u5c31\u53ef\u4ee5\u76f4\u63a5\u6839\u636e\u4e09\u4e2a\u70b9\u6c42\u5e73\u9762\u5f97\u5230\u9762\u7684\u6cd5\u5411\u91cf\uff0c \u63a5\u7740\uff0c\u6211\u4eec\u53ea\u8981\u5bf9\u4e0e\u70b9\u76f8\u8fde\u63a5\u7684\u6240\u6709\u7684\u9762\u7684\u6cd5\u5411\u91cf\u8fdb\u884c\u52a0\u6743\u5e73\u5747\uff0c \u5c31\u5f97\u5230\u70b9\u7684\u6cd5\u5411\u91cf */ void ComputeNormals(float radius = 0.1, int knn = 30); //\u6839\u636e\u53d8\u6362\u77e9\u9635\u5bf9\u7f51\u683c\u8fdb\u884c\u65cb\u8f6c\u5e73\u79fb void Transform(const TransformationMatrix &T); //\u5c06\u7f51\u683c\u5199\u5230PLY\u6587\u4ef6\u4e2d bool WriteToPLY(const std::string &fileName) const; //\u5c06\u7f51\u683c\u5199\u5230OBJ\u6587\u4ef6\u4e2d bool WriteToOBJ(const std::string &fileName) const; //\u57fa\u4e8e\u4e8c\u6b21\u8bef\u5dee\u7684\u8fb9\u574d\u584c\u7b80\u5316\u7f51\u683c std::shared_ptr<geometry::TriangleMesh> QuadricSimplify(int target_num) const; //\u57fa\u4e8e\u4f53\u7d20\u7684\u5747\u5300\u7f51\u683c\u7b80\u5316\uff0c\u7c7b\u4f3c\u4e8e\u70b9\u4e91\u4e0b\u91c7\u6837 std::shared_ptr<geometry::TriangleMesh> ClusteringSimplify(float grid_len) const; //\u5220\u9664\u70b9\u6bd4\u8f83\u5c11\u7684\u788e\u7247 std::shared_ptr<geometry::TriangleMesh> Prune(int min_points) const; \u5173\u4e8e\u7f51\u683c\u7b80\u5316\u7684\u539f\u7406\uff0c\u53ef\u4ee5\u770b\u8bba\u6587\uff1a related_paper/quadrics.pdf \u3002 \u7f51\u683c\u7b80\u5316\u6548\u679c\u5bf9\u6bd4\uff1a \u7f51\u683c\u7b80\u5316 Ransac.h Ransac.h \u4e2d\u4e3b\u8981\u5b9e\u73b0\u4e86\u4e24\u4e2a\u5177\u4f53\u7684\u5229\u7528ransac\u7684\u7b97\u6cd5\uff0c\u57fa\u4e8e\u4e00\u4e2a\u57fa\u672c\u7684Ransac\u6846\u67b6 GRANSAC \u3002Ransac\u7684\u597d\u5904\u662f\uff0c\u5b83\u4f1a\u968f\u673a\u62bd\u53d6\u4e00\u4e9b\u70b9\u6765\u6c42\u67d0\u4e2a\u53d8\u6362\u6216\u8005\u6a21\u578b\uff0c\u8fd9\u6837\u53ef\u4ee5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u6392\u9664outlier\u3002\u6bd4\u5982\u5728\u62df\u5408\u5e73\u9762\u65f6\uff0c\u5982\u679c\u5229\u7528 Geometry.h \u4e2d FitPlane \u76f4\u63a5\u62df\u5408\uff0c\u90a3\u4e48outlier\u4f1a\u5bf9\u7ed3\u679c\u9020\u6210\u5f88\u5927\u5f71\u54cd\uff0c\u800c\u4f7f\u7528Ransac\u5219\u80fd\u5f97\u5230\u66f4\u597d\u7684\u6548\u679c\u3002 //\u4f7f\u7528RANSAC\u6765\u4f30\u8ba1\u4e00\u7ec4\u5bf9\u5e94\u70b9\u4e4b\u95f4\u7684\u521a\u4f53\u53d8\u6362 TransformationMatrix EstimateRigidTransformationRANSAC(const PointCorrespondenceSet &correspondence_set, PointCorrespondenceSet & inliers, std::vector<int> &inlier_ids, int max_iteration = 2000, float threshold = 0.1); //\u4f7f\u7528RANSAC\u6765\u62df\u5408\u5e73\u9762 std::tuple<geometry::Point3, double, double> FitPlaneRANSAC(const Point3List &points, Point3List & inliers, std::vector<int> &inlier_ids, int max_iteration = 2000, float threshold = 0.05); \u4f7f\u7528\u4e0a\u8ff0Ransac\u51fd\u6570\uff0c\u8fd8\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u5f97inliers\u7684\u96c6\u5408\u3002 RGBDFrame.h RGBDFrame.h \u5b9a\u4e49\u4e86RGBDFrame\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u6574\u5408\u4e86\u6df1\u5ea6\u56fe\u548c\u989c\u8272\u56fe\uff0c\u53ef\u4ee5\u7b80\u5316\u8c03\u7528\u8fc7\u7a0b\u3002\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u4e3b\u8981\u662f\u4e3a\u4e86\u642d\u5efa\u4e00\u4e2aRGBD SLAM\u7cfb\u7edf\u6765\u670d\u52a1\u7684\u3002\u5b83\u53ef\u4ee5\u4fdd\u5b58\u4e00\u4e9b\u5df2\u7ecf\u63d0\u53d6\u7684feature\uff0cpointcloud\u7b49\u7b49\uff0c\u8fd9\u4e9b\u5728\u8ffd\u8e2a\u65f6\u5019\u9700\u8981\u7528\u5230\u3002\u5728\u642d\u5efa\u4e00\u4e2aRGBD SLAM\u65f6\u5019\uff0c\u8fd9\u4e9b\u5185\u5bb9\u4e0d\u7528\u91cd\u590d\u8ba1\u7b97\uff0c\u53ef\u4ee5\u63d0\u9ad8\u6548\u7387\u3002 Release() \u7528\u6765\u91ca\u653e\u6389\u6240\u6709\u4fdd\u5b58\u7684\u5185\u5bb9\u3002","title":"\u51e0\u4f55"},{"location":"modules/geometry/#_1","text":"\u51e0\u4f55\u6a21\u5757\u662f\u6574\u4e2a\u7cfb\u7edf\u7684\u4e00\u4e2a\u57fa\u7840\u3002\u8fd9\u91cc\u9762\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5f88\u57fa\u7840\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b9e\u73b0\u4e86\u57fa\u7840\u7684\u8fd0\u7b97\u548c\u7b97\u6cd5\uff0c\u5305\u62ec\u5bf9\u4e8e\u70b9\uff0c\u53d8\u6362\u77e9\u9635\uff08Transformation\uff09\uff0c\u674e\u7fa4\u674e\u4ee3\u6570\uff08SE(3), se(3)\uff09\u4e4b\u95f4\u7684\u8f6c\u6362\u7b49\u7b49\uff0c\u8fd8\u6709\u70b9\u4e91\uff0c\u4e09\u89d2\u7f51\u683c\u7b49\u5e38\u7528\u6570\u636e\u7ed3\u6784\u53ca\u76f8\u5173\u7b97\u6cd5\u7684\u5b9a\u4e49\u548c\u5b9e\u73b0\u3002","title":"\u51e0\u4f55\u6a21\u5757"},{"location":"modules/geometry/#geometryh","text":"\u5728 Geometry.h \u4e2d\uff0c\u9996\u5148\u8981\u6ce8\u610f\u7684\u4e00\u70b9\u5c31\u662f\uff1a typedef float scalar; \u8fd9\u91cc\u9ed8\u8ba4\u5c06 float \u4f5c\u4e3a\u6807\u91cf\u7c7b\u578b\uff0c\u56e0\u6b64\u4e4b\u540e\u70b9\u4e91\uff0c\u77e9\u9635\u7b49\uff0c\u683c\u5f0f\u90fd\u662f\u5355\u7cbe\u5ea6\u7684\uff0c\u5728\u8fd9\u91cc\u53ef\u4ee5\u6539\u53d8\u6574\u4e2a\u5e93\u4f7f\u7528\u7684\u6d6e\u70b9\u6570\u7cbe\u5ea6\u3002 typedef Vector6 Se3; typedef Matrix4 SE3; \u674e\u7fa4\u674e\u4ee3\u6570\u88ab\u5b9a\u4e49\u4e3aSE3\u548cSe3\uff0c\u5206\u522b\u662f\u56db\u7ef4\u65b9\u9635\u548c6\u7ef4\u77e9\u9635\uff0c\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\uff1a Matrix4 Se3ToSE3(const Vector6 &input); Vector6 SE3ToSe3(const Matrix4 &input); \u6765\u4e92\u76f8\u8f6c\u6362\uff0c\u8fd9\u4e2a\u51fd\u6570\u5185\u90e8\u5b9e\u73b0\u662f\u901a\u8fc7 Sophus \u5e93\u5b8c\u6210\u7684\uff08\u5728Open3D\u4e2d\uff0c\u4ece6\u7ef4\u5411\u91cf\u52304\u7ef4\u65b9\u9635\u7684\u4e92\u76f8\u53d8\u6362\uff0c\u5bf9\u4e8e\u5e73\u79fb\u90e8\u5206\u662f\u5b8c\u5168\u4e0d\u53d8\u7684\uff0c\u4f46\u662f\u4ece\u6570\u5b66\u63a8\u5bfc\u4e0a\u6765\u8bf4\uff0c\u4e8c\u8005\u662f\u6709\u5fae\u5c0f\u533a\u522b\u7684\uff0c\u6240\u4ee5\u7406\u8bba\u4e0a Sophus \u5e93\u662f\u66f4\u51c6\u786e\u7684\u53d8\u6362\uff0c\u5982\u4e0b\u56fe\uff09\u3002 struct VoxelGridHasher; struct PixelGridHasher; \u4e0a\u9762\u4e24\u4e2a\u5206\u522b\u662f\u4e09\u7ef4\u548c\u4e8c\u7ef4\u6574\u578b\u5411\u91cf\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u7a7a\u95f4\u54c8\u5e0c\u662f\u5f88\u9ad8\u6548\u7684\u6570\u636e\u7ed3\u6784\u3002 std::tuple<Point3, double, double> FitPlane(const Point3List & _points); std::tuple<Vector2, double, double> FitLine(const Point2List & _points); \u4e0a\u8ff0\u51fd\u6570\u5206\u522b\u7528\u6765\u62df\u5408\u4e00\u7ec43D\u70b9\u7684\u5e73\u9762\uff0c\u4ee5\u53ca2D\u70b9\u7684\u76f4\u7ebf\u3002\u4f8b\u5982\u4e09\u7ef4\u5750\u6807\u7cfb\u4e0b\uff0c\u5e73\u9762\u7684\u53c2\u6570\u65b9\u7a0b\u4e3a\uff1a \\(ax+by+cz+d = 0\\) \uff0c\u5176\u4e2d \\(n=\\{a, b, c\\}^T\\) \u662f\u5e73\u9762\u7684\u6cd5\u5411\u91cf\u3002\u4e0a\u8ff0\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a std::tuple \uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u4e3a\u5e73\u9762\u6216\u8005\u76f4\u7ebf\u7684\u6cd5\u5411\u91cf\uff0c\u7b2c\u4e8c\u4e2a\u4e3a \\(d\\) \uff0c\u7b2c\u4e09\u4e2a\u662f\u6b21\u5927\u5947\u5f02\u503c\u4e0e\u6700\u5927\u5947\u5f02\u503c\u7684\u4e00\u4e2a\u6bd4\u503c(\u4f7f\u7528SVD\u6765\u62df\u5408\u5e73\u9762\u6216\u8005\u76f4\u7ebf\uff0c\u53ef\u4ee5\u5f97\u5230\u5947\u5f02\u503c)\uff0c\u53ef\u4ee5\u7528\u6765\u4f5c\u4e3a\u5bf9\u539f\u59cb\u70b9\u4e0e\u62df\u5408\u5e73\u9762\u8bef\u5dee\u7684\u6307\u6807\uff0c\u5982\u679c\u6240\u6709\u70b9\u90fd\u5728\u5e73\u9762\u4e0a\uff0c\u8be5\u503c\u4e3a0\u3002\u4e5f\u5c31\u662f\u5e73\u9762fit\u5f97\u8d8a\u597d\uff0c\u8be5\u503c\u8d8a\u5c0f\u3002 \u5728 Geometry.h \u4e2d\u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5176\u4ed6\u7684\u522b\u540d\uff0c\u7528\u4e8e\u4e4b\u540e\u7684\u7279\u5f81\u5339\u914d\u7b49\uff0c\u8fd9\u4e9b\u522b\u540d\u4e4b\u6240\u4ee5\u88ab\u5b9a\u4e49\u4e5f\u6b63\u662f\u56e0\u4e3a\u8d77\u522b\u540d\u66f4\u4fbf\u4e8e\u7406\u89e3\uff0c\u5982\u679c\u5bf9\u57fa\u7840\u77e5\u8bc6\u8db3\u591f\u4e86\u89e3\uff0c\u4e00\u770b\u5c31\u77e5\u9053\u6307\u7684\u662f\u4ec0\u4e48\u4e86\u3002","title":"Geometry.h"},{"location":"modules/geometry/#geometry2dh","text":"Geometry2d.h \u5b9e\u73b0\u4e86\u4e00\u4e9b2d\u4e0a\u7684\u51e0\u4f55\u7b97\u6cd5\uff0c\u4e3b\u8981\u662f\u8ba1\u7b97\u51e0\u4f55\u7684\u4e00\u4e9b\u975e\u5e38\u975e\u5e38\u57fa\u7840\u7684\u5185\u5bb9\u3002\u8fd9\u90e8\u5206\u662f\u4e3a\u4e86\u5b9e\u73b0\u4e4b\u540e Algorithm \u4e2d DCEL (doubly connected edge list)\u800c\u5199\u7684\u3002\u5bf9\u4e8e\u8fd9\u90e8\u5206\u4e2d\u6bd4\u8f83\u91cd\u8981\u7684\u51fd\u6570\u6709\uff1a //\u68c0\u67e5\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u4e00\u4e2a\u51f8\u591a\u8fb9\u5f62\u5185 int CheckPointInConvexPoly(const geometry::Point2List &points, const Point2 &p); //\u8ba1\u7b97\u4e00\u4e2a\u51f8\u591a\u8fb9\u5f62\u7684\u9762\u79ef float ComputeAreaConvexPoly(const Point2List &points);","title":"Geometry2d.h"},{"location":"modules/geometry/#pointcloudh","text":"PointCloud\u662f\u70b9\u4e91\u76f8\u5173\u7684\u6570\u636e\u7ed3\u6784\u4e0e\u4e00\u4e9b\u7b80\u5355\u7684\u5904\u7406\u7b97\u6cd5\u3002\u70b9\u4e91\u5305\u542b\u70b9\uff0c\u989c\u8272\uff0c\u6cd5\u5411\uff08\u540e\u9762\u4e8c\u8005\u662f\u53ef\u9009\u7684\uff09\uff0c\u76f8\u5173\u7b97\u6cd5\u5305\u542b\u4e86\u70b9\u4e91\u7684\u4e0b\u91c7\u6837\uff0c\u6cd5\u5411\u91cf\u4f30\u8ba1\u7b49\u7b49\u3002\u4e0b\u9762\u5217\u51fa\u4e00\u4e9b\u57fa\u672c\u7684\u6210\u5458\u51fd\u6570\uff1a //\u4ecePLY\u6587\u4ef6\u8bfb\u53d6\u70b9\u4e91 void LoadFromPLY(const std::string &filename); //\u4eceOBJ\u6587\u4ef6\u8bfb\u53d6\u70b9\u4e91 void LoadFromOBJ(const std::string &filename); //\u4eceRGBD\u56fe\u8bfb\u53d6\u70b9\u4e91 void LoadFromRGBD(const cv::Mat &rgb, const cv::Mat & depth, const camera::PinholeCamera &camera ); void LoadFromRGBD(const RGBDFrame &rbgd, const camera::PinholeCamera &camera ); //\u4f30\u8ba1\u6cd5\u5411\u91cf\uff0c\u901a\u8fc7\u5bf9\u67d0\u4e2a\u70b9\u7684\u5468\u56f4\u70b9\u8fdb\u884c\u5e73\u9762\u62df\u5408\u3002radius\u4ee3\u8868\u4e86\u641c\u7d22\u534a\u5f84\uff0cknn\u4ee3\u8868\u62df\u5408\u70b9\u7684\u6570\u91cf void EstimateNormals(float radius = 0.1, int knn = 30); //\u6839\u636e\u53d8\u6362\u77e9\u9635\u5bf9\u70b9\u4e91\u8fdb\u884c\u65cb\u8f6c\u5e73\u79fb void Transform(const TransformationMatrix &T); //\u5bf9\u70b9\u4e91\u8fdb\u884c\u4e0b\u91c7\u6837 std::shared_ptr<PointCloud> DownSample(double grid_len); //\u5c06\u70b9\u4e91\u5199\u5230PLY\u6587\u4ef6\u4e2d bool WriteToPLY(const std::string &fileName) const; //\u5c06\u70b9\u4e91\u5199\u5230OBJ\u6587\u4ef6\u4e2d bool WriteToOBJ(const std::string &fileName) const; //\u4e0e\u53e6\u5916\u4e00\u4e2a\u70b9\u4e91\u5408\u5e76 void MergePCD(const PointCloud & another_pcd);","title":"PointCloud.h"},{"location":"modules/geometry/#trianglemeshh","text":"TriangleMesh\u5b9a\u4e49\u4e86\u4e09\u89d2\u7f51\u683c\u6570\u636e\u7ed3\u6784\u4ee5\u53ca\u76f8\u5173\u7684\u7b97\u6cd5\uff0c\u4e09\u89d2\u7f51\u683c\u4e0e\u70b9\u4e91\u6700\u5927\u7684\u533a\u522b\u5c31\u662f\u6709\u8fb9\u548c\u9762\uff0c\u5728\u4e09\u89d2\u7f51\u683c\u4e2d\u6bcf\u4e2a\u9762\u90fd\u662f\u4e09\u89d2\u5f62\uff0c\u75313\u4e2a\u70b9\u6784\u6210\u3002\u56e0\u6b64\uff0c\u9664\u4e86\u70b9\u4e4b\u5916\uff0c\u4e09\u89d2\u7f51\u683c\u4e2d\u8fd8\u6709\u9762\u8868\uff0c\u91cc\u9762\u5b58\u653e\u7684\u662f\u6784\u6210\u9762\u76843\u4e2a\u70b9\u7684\u7d22\u5f15\u3002\u76ee\u524d\u5b9e\u73b0\u7684\u7f51\u683c\uff0c\u662f\u4e0d\u5305\u542b\u7eb9\u7406\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e00\u5757\u513f\u4f5c\u8005\u4e0d\u61c2\u3002 //\u4ecePLY\u6587\u4ef6\u8bfb\u53d6\u7f51\u683c void LoadFromPLY(const std::string &filename); //\u4eceOBJ\u6587\u4ef6\u8bfb\u53d6\u7f51\u683c void LoadFromOBJ(const std::string &filename); /* \u8ba1\u7b97\u6cd5\u5411\u91cf\uff0c\u4e09\u89d2\u7f51\u683c\u7684\u6cd5\u5411\u91cf\u76f8\u5bf9\u4e8e\u7f51\u683c\u7684\u6cd5\u5411\u91cf\u4f30\u8ba1\u5c31\u5bb9\u6613\u591a\u4e86\u3002 \u9996\u5148\uff0c\u4e09\u89d2\u7f51\u683c\u5df2\u7ecf\u6709\u9762\u4e86\uff0c\u4e5f\u5c31\u53ef\u4ee5\u76f4\u63a5\u6839\u636e\u4e09\u4e2a\u70b9\u6c42\u5e73\u9762\u5f97\u5230\u9762\u7684\u6cd5\u5411\u91cf\uff0c \u63a5\u7740\uff0c\u6211\u4eec\u53ea\u8981\u5bf9\u4e0e\u70b9\u76f8\u8fde\u63a5\u7684\u6240\u6709\u7684\u9762\u7684\u6cd5\u5411\u91cf\u8fdb\u884c\u52a0\u6743\u5e73\u5747\uff0c \u5c31\u5f97\u5230\u70b9\u7684\u6cd5\u5411\u91cf */ void ComputeNormals(float radius = 0.1, int knn = 30); //\u6839\u636e\u53d8\u6362\u77e9\u9635\u5bf9\u7f51\u683c\u8fdb\u884c\u65cb\u8f6c\u5e73\u79fb void Transform(const TransformationMatrix &T); //\u5c06\u7f51\u683c\u5199\u5230PLY\u6587\u4ef6\u4e2d bool WriteToPLY(const std::string &fileName) const; //\u5c06\u7f51\u683c\u5199\u5230OBJ\u6587\u4ef6\u4e2d bool WriteToOBJ(const std::string &fileName) const; //\u57fa\u4e8e\u4e8c\u6b21\u8bef\u5dee\u7684\u8fb9\u574d\u584c\u7b80\u5316\u7f51\u683c std::shared_ptr<geometry::TriangleMesh> QuadricSimplify(int target_num) const; //\u57fa\u4e8e\u4f53\u7d20\u7684\u5747\u5300\u7f51\u683c\u7b80\u5316\uff0c\u7c7b\u4f3c\u4e8e\u70b9\u4e91\u4e0b\u91c7\u6837 std::shared_ptr<geometry::TriangleMesh> ClusteringSimplify(float grid_len) const; //\u5220\u9664\u70b9\u6bd4\u8f83\u5c11\u7684\u788e\u7247 std::shared_ptr<geometry::TriangleMesh> Prune(int min_points) const; \u5173\u4e8e\u7f51\u683c\u7b80\u5316\u7684\u539f\u7406\uff0c\u53ef\u4ee5\u770b\u8bba\u6587\uff1a related_paper/quadrics.pdf \u3002 \u7f51\u683c\u7b80\u5316\u6548\u679c\u5bf9\u6bd4\uff1a \u7f51\u683c\u7b80\u5316","title":"TriangleMesh.h"},{"location":"modules/geometry/#ransach","text":"Ransac.h \u4e2d\u4e3b\u8981\u5b9e\u73b0\u4e86\u4e24\u4e2a\u5177\u4f53\u7684\u5229\u7528ransac\u7684\u7b97\u6cd5\uff0c\u57fa\u4e8e\u4e00\u4e2a\u57fa\u672c\u7684Ransac\u6846\u67b6 GRANSAC \u3002Ransac\u7684\u597d\u5904\u662f\uff0c\u5b83\u4f1a\u968f\u673a\u62bd\u53d6\u4e00\u4e9b\u70b9\u6765\u6c42\u67d0\u4e2a\u53d8\u6362\u6216\u8005\u6a21\u578b\uff0c\u8fd9\u6837\u53ef\u4ee5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u6392\u9664outlier\u3002\u6bd4\u5982\u5728\u62df\u5408\u5e73\u9762\u65f6\uff0c\u5982\u679c\u5229\u7528 Geometry.h \u4e2d FitPlane \u76f4\u63a5\u62df\u5408\uff0c\u90a3\u4e48outlier\u4f1a\u5bf9\u7ed3\u679c\u9020\u6210\u5f88\u5927\u5f71\u54cd\uff0c\u800c\u4f7f\u7528Ransac\u5219\u80fd\u5f97\u5230\u66f4\u597d\u7684\u6548\u679c\u3002 //\u4f7f\u7528RANSAC\u6765\u4f30\u8ba1\u4e00\u7ec4\u5bf9\u5e94\u70b9\u4e4b\u95f4\u7684\u521a\u4f53\u53d8\u6362 TransformationMatrix EstimateRigidTransformationRANSAC(const PointCorrespondenceSet &correspondence_set, PointCorrespondenceSet & inliers, std::vector<int> &inlier_ids, int max_iteration = 2000, float threshold = 0.1); //\u4f7f\u7528RANSAC\u6765\u62df\u5408\u5e73\u9762 std::tuple<geometry::Point3, double, double> FitPlaneRANSAC(const Point3List &points, Point3List & inliers, std::vector<int> &inlier_ids, int max_iteration = 2000, float threshold = 0.05); \u4f7f\u7528\u4e0a\u8ff0Ransac\u51fd\u6570\uff0c\u8fd8\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u5f97inliers\u7684\u96c6\u5408\u3002","title":"Ransac.h"},{"location":"modules/geometry/#rgbdframeh","text":"RGBDFrame.h \u5b9a\u4e49\u4e86RGBDFrame\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u6574\u5408\u4e86\u6df1\u5ea6\u56fe\u548c\u989c\u8272\u56fe\uff0c\u53ef\u4ee5\u7b80\u5316\u8c03\u7528\u8fc7\u7a0b\u3002\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u4e3b\u8981\u662f\u4e3a\u4e86\u642d\u5efa\u4e00\u4e2aRGBD SLAM\u7cfb\u7edf\u6765\u670d\u52a1\u7684\u3002\u5b83\u53ef\u4ee5\u4fdd\u5b58\u4e00\u4e9b\u5df2\u7ecf\u63d0\u53d6\u7684feature\uff0cpointcloud\u7b49\u7b49\uff0c\u8fd9\u4e9b\u5728\u8ffd\u8e2a\u65f6\u5019\u9700\u8981\u7528\u5230\u3002\u5728\u642d\u5efa\u4e00\u4e2aRGBD SLAM\u65f6\u5019\uff0c\u8fd9\u4e9b\u5185\u5bb9\u4e0d\u7528\u91cd\u590d\u8ba1\u7b97\uff0c\u53ef\u4ee5\u63d0\u9ad8\u6548\u7387\u3002 Release() \u7528\u6765\u91ca\u653e\u6389\u6240\u6709\u4fdd\u5b58\u7684\u5185\u5bb9\u3002","title":"RGBDFrame.h"},{"location":"modules/integration/","text":"\u751f\u6210\u6a21\u578b \u901a\u8fc7tracking\uff0coptimization\uff0c\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u4e86\u6709\u7740\u7cbe\u786e\u4f4d\u59ff\u7684\u56fe\u7247\u5e8f\u5217\uff0c\u5982\u4f55\u6839\u636e\u8fd9\u4e9b\u5e8f\u5217\u751f\u6210\u9ad8\u7cbe\u5ea6\u7684\u7f51\u683c\u6a21\u578b\u5c31\u662fintegration\u8981\u89e3\u51b3\u7684\u4e8b\u60c5\u3002 TSDF TSDF\u662f\u4e00\u79cd\u5bf9\u4e8e\u4e09\u7ef4\u573a\u666f\u7684\u9690\u5f0f\u8868\u5f81\u3002\u4e16\u754c\u88ab\u5212\u5206\u6210\u4e00\u4e2a\u4e2a\u4f53\u7d20\uff0c\u800c\u6bcf\u4e2a\u4f53\u7d20\u4e2d\u5b58\u50a8\u7740\u5230\u6700\u8fd1\u8868\u9762\u7684\u8ddd\u79bb\uff0c\u8fd9\u4e2a\u8ddd\u79bb\u662f\u6709\u7b26\u53f7\u7684\uff0c\u800c\u63d2\u503c\u52300\u7684\u4f4d\u7f6e\u5c31\u662f\u771f\u6b63\u8868\u9762\u4e0a\u7684\u70b9\u3002\u5982\u679c\u8fd9\u4e2a\u8ddd\u79bb\u5f88\u8fdc\uff0c\u5b9e\u9645\u4e0a\u5c31\u6ca1\u4ec0\u4e48\u7528\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u622a\u65ad\uff0c\u8fd9\u4e5f\u5c31\u662fTSDF(Truncated Signed Distance Field)\u3002 \u5728FCLib\u4e2d\uff0c\u8fd9\u6837\u7684\u4f53\u7d20F\u88ab\u5b9a\u4e49\u4e3a class TSDFVoxel { public: //\u8ddd\u79bb float sdf = 999; //\u6743\u91cd float weight = 0; //\u989c\u8272 geometry::Point3 color = geometry::Point3(-1,-1,-1); }; \u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\u548c\u8282\u7701\u5185\u5b58\uff0c\u4e00\u4e2a\u666e\u904d\u7684\u505a\u6cd5\u662f\u4f7f\u7528\u7a7a\u95f4\u54c8\u5e0c\uff0c\u53ea\u5b58\u50a8\u8ddd\u79bb\u8868\u9762\u6bd4\u8f83\u8fd1\u7684voxel\uff0c\u5728FCLib\u4e2d\uff0c \\(8\\times 8 \\times 8\\) \u4e2a\u4f53\u7d20\u88ab\u5f53\u6210\u4e00\u4e2a\u7acb\u65b9\u4f53\uff08Cube\uff09\uff0c\u800c\u8fd9\u4e9bCube\u53c8\u901a\u8fc7\u7a7a\u95f4\u54c8\u5e0c\u51fd\u6570\u6765\u5b58\u50a8\u3002 class VoxelCube { public: std::vector<TSDFVoxel> voxels; Eigen::Vector3i cube_id; }; \u901a\u8fc7Cube\u7684ID\u53ef\u4ee5\u5f88\u5bb9\u6613\u627e\u5230Cube\u4f4d\u7f6e\uff0c\u8fdb\u800c\u627e\u5230\u5185\u90e8\u7684voxel\u3002\u5173\u4e8eCube\u7684\u54c8\u5e0c\u6620\u5c04\u8868\u88ab\u5c01\u88c5\u5230\u7c7b CubeHandler \u4e2d\u3002 \u4eceFrame\u5230TSDF \u5bf9\u4e8e\u4e00\u4e2a\u4f53\u7d20\uff08Voxel\uff09\uff0c\u4e00\u4e2aframe\uff0c\u5982\u4f55\u5f97\u5230\u5b83\u7684sdf\u503c\uff1f\u9996\u5148\uff0c\u6211\u4eec\u901a\u8fc7Voxel\u7684\u4f4d\u7f6e\u4ee5\u53ca\u5176\u6240\u5728\u7684Cube\uff0c\u8ba1\u7b97\u5f97\u5230Voxel\u4e2d\u5fc3\u7684\u4e16\u754c\u5750\u6807\u7cfb\u7684\u4f4d\u7f6e\uff0c\u63a5\u7740\uff0c\u5c06\u8fd9\u4e2a\u4f4d\u7f6e\u6295\u5f71\u5230frame\u4e2d\uff0c\u627e\u5230\u8be5\u4f4d\u7f6e\u7684depth\uff0c\u8fd9\u4e2adepth\u5c31\u662f\u8868\u9762\u7684\u70b9\u5230\u76f8\u673a\u5e73\u9762\u7684\u8ddd\u79bb\u3002SDF\u88ab\u5b9a\u4e49\u4e3a\uff1a \\[ sdf = z(T^{-1} * p_v) - d(\\omega(T^{-1} * p_v)) \\] \\(z(\\cdot)\\) \u53d6\u51fa\u4e09\u7ef4\u5411\u91cf\u7684 \\(z\\) \u503c\uff0c \\(d(\\cdot)\\) \u8bfb\u53d6\u5e27\u5728\u67d0\u4e00\u4f4d\u7f6e\u7684depth\uff0c \\(\\omega\\) \u4e3a\u91cd\u6295\u5f71\u51fd\u6570\u3002 \u6709\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u4e09\u7ef4\u4e16\u754c\u662f\u65e0\u9650\u5927\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u53ef\u80fd\u5bf9\u6bcf\u4e00\u4e2avoxel\u6765\u8fd9\u6837\u505a\u3002\u8fd9\u91cc\u8981\u4ecb\u7ecd\u4e00\u4e2a\u89c6\u9525\u4f53\u7684\u6982\u5ff5\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u76f8\u673a\u6765\u8bf4\u7684\u4e00\u4e2a\u6210\u50cf\u6709\u6548\u533a\u57df\uff0c\u5728\u89c6\u9525\u4f53\u4e4b\u5916\u7684\u70b9\u4e0d\u8003\u8651\u3002\u89c6\u9525\u4f53\u5728FCLib\u4e2d\u5b9a\u4e49\u4e3a Frustum.h \u3002 \u5bf9\u4e8e\u67d0\u4e2aframe\uff0c\u6211\u4eec\u53ea\u5bf9\u89c6\u9525\u4f53\u5185\u7684cube\u8fdb\u884c\u5904\u7406\u3002\u5373\u4f7f\u8fd9\u6837\uff0cvoxel\u7684\u4e2a\u6570\u4f9d\u7136\u5f88\u591a\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6839\u636e8\u4e2a\u9876\u70b9\u91c7\u6837\u6ee4\u6ce2\uff0c\u5982\u679c8\u4e2a\u9876\u70b9\u7684SDF value\u7b26\u53f7\u90fd\u4e00\u81f4\uff0c\u5219\u8ba4\u4e3a\u8fd9\u4e2aCube\u4e2d\u6ca1\u6709\u8868\u9762\uff0c\u8be6\u7ec6\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003 FlashFusion \u3002 \u4e00\u4e2aVoxel\u5bf9\u4e8e\u591a\u4e2aframe\u7684\u8ba1\u7b97\u53ef\u80fd\u4f1a\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c\uff0c\u6839\u636e \\(weights\\) \u4f7f\u7528\u52a0\u6743\u76f8\u52a0\uff0c\u6765\u5f97\u5230\u6700\u7ec8\u7684\u503c\u3002 \u5c06\u4e00\u5f20rgbd frame\u878d\u5408\u5230\u4e00\u4e2aTSDF\u4e2d\uff0c\u662f\u901a\u8fc7 CubeHandler \u7684\u6210\u5458\u51fd\u6570\u5b9e\u73b0\u7684\uff1a void CubeHandler::IntegrateImage(const cv::Mat &depth, const cv::Mat &rgb, const geometry::TransformationMatrix & pose); void CubeHandler::IntegrateImage(const geometry::RGBDFrame &rgbd, const geometry::TransformationMatrix & pose); \u4eceTSDF\u5230Mesh \u6211\u4eec\u53ef\u4ee5\u4eceTSDF\u4e2d\u8fdb\u4e00\u6b65\u63d0\u53d6\u51fa\u4e09\u89d2\u7f51\u683c\uff0c\u6bd4\u8f83\u6709\u540d\u7684\u7b97\u6cd5\u662f Marching Cubes \u3002Marching Cubes\u4e2d\uff0c\u7f51\u683c\u63d0\u53d6\u662f\u901a\u8fc7\u4e00\u4e2a\u4e2a\u6b63\u65b9\u4f53\u7684\u3002\u4e00\u4e2a\u6b63\u65b9\u4f53\u67098\u4e2a\u9876\u70b9\uff0c\u5206\u522b\u67098\u4e2asdf\u503c\u3002\u800c\u6bcf\u4e2a\u9876\u70b9\u7684sdf\u503c\u53ef\u80fd\u5927\u4e8e0\uff0c\u4e5f\u53ef\u80fd\u5c0f\u4e8e0\uff0c\u56e0\u6b64\u6240\u6709\u53ef\u80fd\u60c5\u51b5\u5c31\u662f \\(2^8 = 256\\) \u4e2d\u60c5\u51b5\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\uff0c\u67098\u4e2a\u5927\u4e8e0\u7684\u4e0e\u67098\u4e2a\u5c0f\u4e8e0\u7684\u60c5\u51b5\u4e00\u6837\uff0c\u6b63\u5982\u67092\u4e2a\u5927\u4e8e0\u7684\u4e0e\u67096\u4e2a\u5927\u4e8e0\u7684\u60c5\u51b5\u4e00\u6837\uff0c\u6700\u540e\u5217\u4e3e\u51fa\u6700\u57fa\u672c\u60c5\u51b5\u53ea\u670915\u79cd\uff1a 256\u79cd\u60c5\u51b5\u90fd\u88ab\u5217\u4e3e\u51fa\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u6620\u5c04\u8868\uff0c\u5b58\u50a8\u4e09\u89d2\u5f62\u9876\u70b9\u6240\u5728\u7684\u8fb9\uff08\u6211\u4eec\u4e3a\u6bcf\u6761\u8fb9\u8bbe\u5b9a\u4e00\u4e2a\u5e8f\u53f7\uff09\uff0c\u56e0\u6b64\u7ed9\u5b9a\u4e00\u4e2a\u8fd9\u6837\u7684\u6b63\u65b9\u4f53\uff0c\u6839\u636e\u6620\u5c04\u8868\u5c31\u80fd\u63d0\u53d6\u51fa\u4e09\u89d2\u5f62\u7684\u9876\u70b9\uff0c\u4ece\u800c\u63d0\u53d6\u51fa\u4e09\u89d2\u5f62\u3002\u5728TSDF\u4e2d\uff0c8\u4e2aVoxel\u6b63\u597d\u53ef\u4ee5\u770b\u6210\u662f\u6b63\u65b9\u4f53\u76848\u4e2a\u9876\u70b9\uff0cTSDF\u5230Mesh\u5c31\u662f\u8fd9\u6837\u8fdb\u884c\u7684\u3002 Mesh\u7684\u63d0\u53d6\u4e5f\u88ab\u5c01\u88c5\u5728 CubeHandler \u7684\u6210\u5458\u51fd\u6570\u4e2d\uff1a void CubeHandler::ExtractTriangleMesh(geometry::TriangleMesh &mesh); TSDF\u7684\u53d8\u6362 \u4e0e\u70b9\u4e91\uff0c\u4e09\u89d2\u7f51\u683c\u76f8\u6bd4\uff0c\u5bf9\u4e8eTSDF\u8fdb\u884c\u65cb\u8f6c\u5e73\u79fb\u7a0d\u6709\u4e0d\u540c\u3002\u4f53\u7d20\u662f\u5c06\u4e16\u754c\u5206\u5272\u6210\u4e00\u4e2a\u4e2a\u7acb\u65b9\u4f53\uff0c\u800c\u5728\u65cb\u8f6c\u5e73\u79fb\u4e4b\u540e\uff0c\u53d8\u6362\u4e4b\u540e\u7684voxel\u4e2d\u5fc3\u5750\u6807\u6210\u4e86\u5b9e\u6570\uff0c\u9700\u8981\u91cd\u65b0\u6620\u5c04\u5230\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u4f53\u7d20\u4e2d\uff0c\u6620\u5c04\u5230\u65cb\u8f6c\u540e\u7684\u4e2d\u5fc3\u76848\u4e2aneighbor\u4f53\u7d20\u3002 \u5982\u679c\u53ea\u6620\u5c04\u5230\u6700\u8fd1\u7684\u4f53\u7d20\uff0c\u4f1a\u5bfc\u81f4\u4e0d\u51c6\u786e\u7684\u7ed3\u679c\uff0c\u53ef\u80fd\u4ea7\u751f\u7a7a\u6d1e\u4ee5\u53ca\u7f3a\u5931\u3002 \u5728 CubeHandler \u4e2d\uff0c\u63d0\u4f9b\u4e86\u4e0a\u8ff0\u4e24\u79cdTransform\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u6bd4\u8f83\uff1a //\u6620\u5c04\u5230\u6700\u8fd1\u7684voxel std::shared_ptr<CubeHandler> TransformNearest(const geometry::TransformationMatrix &trans) const; //\u6620\u5c04\u52308\u4e2avoxel\uff0c\u52a0\u6743\u5f97\u5230\u65b0\u7684value std::shared_ptr<CubeHandler> Transform(const geometry::TransformationMatrix &trans) const; \u9700\u8981\u8bf4\u660e\u7684\uff0cFCLib\u5b9e\u73b0\u7684\u6700\u539f\u59cb\u7684Marching Cubes\u7b97\u6cd5\u3002\u5f97\u5230\u7684Mesh\u5f80\u5f80\u70b9\u5f88\u5bc6\u96c6\uff0c\u53ef\u4ee5\u4f7f\u7528 ClusteringSimplify \u5c06\u76f8\u540c\u7684\u70b9\u6216\u8005\u8ddd\u79bb\u8fc7\u8fd1\u7684\u805a\u5408\u4e3a\u4e00\u4e2a\u70b9\uff0c\u9700\u8981\u6cd5\u5411\u91cf\u53ef\u4ee5\u901a\u8fc7 ComputeNormals \u6765\u8ba1\u7b97\u3002","title":"\u751f\u6210\u6a21\u578b"},{"location":"modules/integration/#_1","text":"\u901a\u8fc7tracking\uff0coptimization\uff0c\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u4e86\u6709\u7740\u7cbe\u786e\u4f4d\u59ff\u7684\u56fe\u7247\u5e8f\u5217\uff0c\u5982\u4f55\u6839\u636e\u8fd9\u4e9b\u5e8f\u5217\u751f\u6210\u9ad8\u7cbe\u5ea6\u7684\u7f51\u683c\u6a21\u578b\u5c31\u662fintegration\u8981\u89e3\u51b3\u7684\u4e8b\u60c5\u3002","title":"\u751f\u6210\u6a21\u578b"},{"location":"modules/integration/#tsdf","text":"TSDF\u662f\u4e00\u79cd\u5bf9\u4e8e\u4e09\u7ef4\u573a\u666f\u7684\u9690\u5f0f\u8868\u5f81\u3002\u4e16\u754c\u88ab\u5212\u5206\u6210\u4e00\u4e2a\u4e2a\u4f53\u7d20\uff0c\u800c\u6bcf\u4e2a\u4f53\u7d20\u4e2d\u5b58\u50a8\u7740\u5230\u6700\u8fd1\u8868\u9762\u7684\u8ddd\u79bb\uff0c\u8fd9\u4e2a\u8ddd\u79bb\u662f\u6709\u7b26\u53f7\u7684\uff0c\u800c\u63d2\u503c\u52300\u7684\u4f4d\u7f6e\u5c31\u662f\u771f\u6b63\u8868\u9762\u4e0a\u7684\u70b9\u3002\u5982\u679c\u8fd9\u4e2a\u8ddd\u79bb\u5f88\u8fdc\uff0c\u5b9e\u9645\u4e0a\u5c31\u6ca1\u4ec0\u4e48\u7528\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8fdb\u884c\u622a\u65ad\uff0c\u8fd9\u4e5f\u5c31\u662fTSDF(Truncated Signed Distance Field)\u3002 \u5728FCLib\u4e2d\uff0c\u8fd9\u6837\u7684\u4f53\u7d20F\u88ab\u5b9a\u4e49\u4e3a class TSDFVoxel { public: //\u8ddd\u79bb float sdf = 999; //\u6743\u91cd float weight = 0; //\u989c\u8272 geometry::Point3 color = geometry::Point3(-1,-1,-1); }; \u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\u548c\u8282\u7701\u5185\u5b58\uff0c\u4e00\u4e2a\u666e\u904d\u7684\u505a\u6cd5\u662f\u4f7f\u7528\u7a7a\u95f4\u54c8\u5e0c\uff0c\u53ea\u5b58\u50a8\u8ddd\u79bb\u8868\u9762\u6bd4\u8f83\u8fd1\u7684voxel\uff0c\u5728FCLib\u4e2d\uff0c \\(8\\times 8 \\times 8\\) \u4e2a\u4f53\u7d20\u88ab\u5f53\u6210\u4e00\u4e2a\u7acb\u65b9\u4f53\uff08Cube\uff09\uff0c\u800c\u8fd9\u4e9bCube\u53c8\u901a\u8fc7\u7a7a\u95f4\u54c8\u5e0c\u51fd\u6570\u6765\u5b58\u50a8\u3002 class VoxelCube { public: std::vector<TSDFVoxel> voxels; Eigen::Vector3i cube_id; }; \u901a\u8fc7Cube\u7684ID\u53ef\u4ee5\u5f88\u5bb9\u6613\u627e\u5230Cube\u4f4d\u7f6e\uff0c\u8fdb\u800c\u627e\u5230\u5185\u90e8\u7684voxel\u3002\u5173\u4e8eCube\u7684\u54c8\u5e0c\u6620\u5c04\u8868\u88ab\u5c01\u88c5\u5230\u7c7b CubeHandler \u4e2d\u3002","title":"TSDF"},{"location":"modules/integration/#frametsdf","text":"\u5bf9\u4e8e\u4e00\u4e2a\u4f53\u7d20\uff08Voxel\uff09\uff0c\u4e00\u4e2aframe\uff0c\u5982\u4f55\u5f97\u5230\u5b83\u7684sdf\u503c\uff1f\u9996\u5148\uff0c\u6211\u4eec\u901a\u8fc7Voxel\u7684\u4f4d\u7f6e\u4ee5\u53ca\u5176\u6240\u5728\u7684Cube\uff0c\u8ba1\u7b97\u5f97\u5230Voxel\u4e2d\u5fc3\u7684\u4e16\u754c\u5750\u6807\u7cfb\u7684\u4f4d\u7f6e\uff0c\u63a5\u7740\uff0c\u5c06\u8fd9\u4e2a\u4f4d\u7f6e\u6295\u5f71\u5230frame\u4e2d\uff0c\u627e\u5230\u8be5\u4f4d\u7f6e\u7684depth\uff0c\u8fd9\u4e2adepth\u5c31\u662f\u8868\u9762\u7684\u70b9\u5230\u76f8\u673a\u5e73\u9762\u7684\u8ddd\u79bb\u3002SDF\u88ab\u5b9a\u4e49\u4e3a\uff1a \\[ sdf = z(T^{-1} * p_v) - d(\\omega(T^{-1} * p_v)) \\] \\(z(\\cdot)\\) \u53d6\u51fa\u4e09\u7ef4\u5411\u91cf\u7684 \\(z\\) \u503c\uff0c \\(d(\\cdot)\\) \u8bfb\u53d6\u5e27\u5728\u67d0\u4e00\u4f4d\u7f6e\u7684depth\uff0c \\(\\omega\\) \u4e3a\u91cd\u6295\u5f71\u51fd\u6570\u3002 \u6709\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u4e09\u7ef4\u4e16\u754c\u662f\u65e0\u9650\u5927\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u53ef\u80fd\u5bf9\u6bcf\u4e00\u4e2avoxel\u6765\u8fd9\u6837\u505a\u3002\u8fd9\u91cc\u8981\u4ecb\u7ecd\u4e00\u4e2a\u89c6\u9525\u4f53\u7684\u6982\u5ff5\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e\u76f8\u673a\u6765\u8bf4\u7684\u4e00\u4e2a\u6210\u50cf\u6709\u6548\u533a\u57df\uff0c\u5728\u89c6\u9525\u4f53\u4e4b\u5916\u7684\u70b9\u4e0d\u8003\u8651\u3002\u89c6\u9525\u4f53\u5728FCLib\u4e2d\u5b9a\u4e49\u4e3a Frustum.h \u3002 \u5bf9\u4e8e\u67d0\u4e2aframe\uff0c\u6211\u4eec\u53ea\u5bf9\u89c6\u9525\u4f53\u5185\u7684cube\u8fdb\u884c\u5904\u7406\u3002\u5373\u4f7f\u8fd9\u6837\uff0cvoxel\u7684\u4e2a\u6570\u4f9d\u7136\u5f88\u591a\u3002\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6839\u636e8\u4e2a\u9876\u70b9\u91c7\u6837\u6ee4\u6ce2\uff0c\u5982\u679c8\u4e2a\u9876\u70b9\u7684SDF value\u7b26\u53f7\u90fd\u4e00\u81f4\uff0c\u5219\u8ba4\u4e3a\u8fd9\u4e2aCube\u4e2d\u6ca1\u6709\u8868\u9762\uff0c\u8be6\u7ec6\u5185\u5bb9\u53ef\u4ee5\u53c2\u8003 FlashFusion \u3002 \u4e00\u4e2aVoxel\u5bf9\u4e8e\u591a\u4e2aframe\u7684\u8ba1\u7b97\u53ef\u80fd\u4f1a\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c\uff0c\u6839\u636e \\(weights\\) \u4f7f\u7528\u52a0\u6743\u76f8\u52a0\uff0c\u6765\u5f97\u5230\u6700\u7ec8\u7684\u503c\u3002 \u5c06\u4e00\u5f20rgbd frame\u878d\u5408\u5230\u4e00\u4e2aTSDF\u4e2d\uff0c\u662f\u901a\u8fc7 CubeHandler \u7684\u6210\u5458\u51fd\u6570\u5b9e\u73b0\u7684\uff1a void CubeHandler::IntegrateImage(const cv::Mat &depth, const cv::Mat &rgb, const geometry::TransformationMatrix & pose); void CubeHandler::IntegrateImage(const geometry::RGBDFrame &rgbd, const geometry::TransformationMatrix & pose);","title":"\u4eceFrame\u5230TSDF"},{"location":"modules/integration/#tsdfmesh","text":"\u6211\u4eec\u53ef\u4ee5\u4eceTSDF\u4e2d\u8fdb\u4e00\u6b65\u63d0\u53d6\u51fa\u4e09\u89d2\u7f51\u683c\uff0c\u6bd4\u8f83\u6709\u540d\u7684\u7b97\u6cd5\u662f Marching Cubes \u3002Marching Cubes\u4e2d\uff0c\u7f51\u683c\u63d0\u53d6\u662f\u901a\u8fc7\u4e00\u4e2a\u4e2a\u6b63\u65b9\u4f53\u7684\u3002\u4e00\u4e2a\u6b63\u65b9\u4f53\u67098\u4e2a\u9876\u70b9\uff0c\u5206\u522b\u67098\u4e2asdf\u503c\u3002\u800c\u6bcf\u4e2a\u9876\u70b9\u7684sdf\u503c\u53ef\u80fd\u5927\u4e8e0\uff0c\u4e5f\u53ef\u80fd\u5c0f\u4e8e0\uff0c\u56e0\u6b64\u6240\u6709\u53ef\u80fd\u60c5\u51b5\u5c31\u662f \\(2^8 = 256\\) \u4e2d\u60c5\u51b5\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\uff0c\u67098\u4e2a\u5927\u4e8e0\u7684\u4e0e\u67098\u4e2a\u5c0f\u4e8e0\u7684\u60c5\u51b5\u4e00\u6837\uff0c\u6b63\u5982\u67092\u4e2a\u5927\u4e8e0\u7684\u4e0e\u67096\u4e2a\u5927\u4e8e0\u7684\u60c5\u51b5\u4e00\u6837\uff0c\u6700\u540e\u5217\u4e3e\u51fa\u6700\u57fa\u672c\u60c5\u51b5\u53ea\u670915\u79cd\uff1a 256\u79cd\u60c5\u51b5\u90fd\u88ab\u5217\u4e3e\u51fa\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u6620\u5c04\u8868\uff0c\u5b58\u50a8\u4e09\u89d2\u5f62\u9876\u70b9\u6240\u5728\u7684\u8fb9\uff08\u6211\u4eec\u4e3a\u6bcf\u6761\u8fb9\u8bbe\u5b9a\u4e00\u4e2a\u5e8f\u53f7\uff09\uff0c\u56e0\u6b64\u7ed9\u5b9a\u4e00\u4e2a\u8fd9\u6837\u7684\u6b63\u65b9\u4f53\uff0c\u6839\u636e\u6620\u5c04\u8868\u5c31\u80fd\u63d0\u53d6\u51fa\u4e09\u89d2\u5f62\u7684\u9876\u70b9\uff0c\u4ece\u800c\u63d0\u53d6\u51fa\u4e09\u89d2\u5f62\u3002\u5728TSDF\u4e2d\uff0c8\u4e2aVoxel\u6b63\u597d\u53ef\u4ee5\u770b\u6210\u662f\u6b63\u65b9\u4f53\u76848\u4e2a\u9876\u70b9\uff0cTSDF\u5230Mesh\u5c31\u662f\u8fd9\u6837\u8fdb\u884c\u7684\u3002 Mesh\u7684\u63d0\u53d6\u4e5f\u88ab\u5c01\u88c5\u5728 CubeHandler \u7684\u6210\u5458\u51fd\u6570\u4e2d\uff1a void CubeHandler::ExtractTriangleMesh(geometry::TriangleMesh &mesh);","title":"\u4eceTSDF\u5230Mesh"},{"location":"modules/integration/#tsdf_1","text":"\u4e0e\u70b9\u4e91\uff0c\u4e09\u89d2\u7f51\u683c\u76f8\u6bd4\uff0c\u5bf9\u4e8eTSDF\u8fdb\u884c\u65cb\u8f6c\u5e73\u79fb\u7a0d\u6709\u4e0d\u540c\u3002\u4f53\u7d20\u662f\u5c06\u4e16\u754c\u5206\u5272\u6210\u4e00\u4e2a\u4e2a\u7acb\u65b9\u4f53\uff0c\u800c\u5728\u65cb\u8f6c\u5e73\u79fb\u4e4b\u540e\uff0c\u53d8\u6362\u4e4b\u540e\u7684voxel\u4e2d\u5fc3\u5750\u6807\u6210\u4e86\u5b9e\u6570\uff0c\u9700\u8981\u91cd\u65b0\u6620\u5c04\u5230\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u4f53\u7d20\u4e2d\uff0c\u6620\u5c04\u5230\u65cb\u8f6c\u540e\u7684\u4e2d\u5fc3\u76848\u4e2aneighbor\u4f53\u7d20\u3002 \u5982\u679c\u53ea\u6620\u5c04\u5230\u6700\u8fd1\u7684\u4f53\u7d20\uff0c\u4f1a\u5bfc\u81f4\u4e0d\u51c6\u786e\u7684\u7ed3\u679c\uff0c\u53ef\u80fd\u4ea7\u751f\u7a7a\u6d1e\u4ee5\u53ca\u7f3a\u5931\u3002 \u5728 CubeHandler \u4e2d\uff0c\u63d0\u4f9b\u4e86\u4e0a\u8ff0\u4e24\u79cdTransform\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u6bd4\u8f83\uff1a //\u6620\u5c04\u5230\u6700\u8fd1\u7684voxel std::shared_ptr<CubeHandler> TransformNearest(const geometry::TransformationMatrix &trans) const; //\u6620\u5c04\u52308\u4e2avoxel\uff0c\u52a0\u6743\u5f97\u5230\u65b0\u7684value std::shared_ptr<CubeHandler> Transform(const geometry::TransformationMatrix &trans) const; \u9700\u8981\u8bf4\u660e\u7684\uff0cFCLib\u5b9e\u73b0\u7684\u6700\u539f\u59cb\u7684Marching Cubes\u7b97\u6cd5\u3002\u5f97\u5230\u7684Mesh\u5f80\u5f80\u70b9\u5f88\u5bc6\u96c6\uff0c\u53ef\u4ee5\u4f7f\u7528 ClusteringSimplify \u5c06\u76f8\u540c\u7684\u70b9\u6216\u8005\u8ddd\u79bb\u8fc7\u8fd1\u7684\u805a\u5408\u4e3a\u4e00\u4e2a\u70b9\uff0c\u9700\u8981\u6cd5\u5411\u91cf\u53ef\u4ee5\u901a\u8fc7 ComputeNormals \u6765\u8ba1\u7b97\u3002","title":"TSDF\u7684\u53d8\u6362"},{"location":"modules/lcdetection/","text":"\u95ed\u73af\u68c0\u6d4b \u7531\u4e8e\u566a\u58f0\u7b49\u56e0\u7d20\uff0ctracking\u7684\u7ed3\u679c\u4e00\u5b9a\u4f1a\u6709\u8bef\u5dee\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u626b\u63cf\u4e00\u5708\u56de\u6765\u4e0d\u4e00\u5b9a\u80fd\u56de\u5230\u539f\u70b9\uff0c\u53cd\u6620\u5230\u91cd\u5efa\u7ed3\u679c\uff0c\u5c31\u662f\u4f1a\u51fa\u73b0\u91cd\u5f71\u3002\u800c\u95ed\u73af\u68c0\u6d4b\u662f\u68c0\u67e5\u5f53\u524d\u626b\u63cf\u7684\u56fe\u7247\u4e0e\u4e4b\u524d\u626b\u63cf\u56fe\u7247\u7684\u76f8\u4f3c\u5ea6\uff0c\u4ece\u800c\u627e\u5230\u4e4b\u524d\u9047\u5230\u7684\u573a\u666f\uff0c\u4e3a\u5168\u5c40\u7684\u4f4d\u59ff\u4f18\u5316\u63d0\u4f9b\u7ea6\u675f\uff0c\u8fbe\u5230global consistency\u3002 \u95ed\u73af\u68c0\u6d4b\u65b9\u6cd5\u5f88\u591a\uff0c\u5305\u62ec2D\u7684\u548c3D\u7684\uff0c\u76ee\u524dFCLib\u53ea\u5f15\u5165\u4e86 MILD \uff0c\u662f2D\u7684\u57fa\u4e8e\u591a\u7d22\u5f15\u54c8\u5e0c\u7684\u95ed\u73af\u68c0\u6d4b\u3002\u901a\u8fc7\u95ed\u73af\u68c0\u6d4b\u5f97\u5230\u4e00\u7cfb\u5217\u53ef\u80fd\u7684\u76f8\u4f3c\u573a\u666f\uff0c\u518d\u6839\u636e odometry::SparseTracking \u6765\u68c0\u67e5\u662f\u5426\u80fd\u8ffd\u8e2a\u6210\u529f\uff0c\u76f8\u5bf9\u4e8e\u5bf9\u6bcf\u4e2a\u5e27\u6765\u8fdb\u884ctracking\uff0c\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u6d88\u8017\u7684\u65f6\u95f4\u3002 FCLib\u5c06MILD\u5c01\u88c5\u6210\u7c7b MildLCDetector \uff0c\u4e3b\u8981\u6210\u5458\u51fd\u6570\u4e3a\uff1a //\u4e3a\u5f53\u524d\u5e27\u627e\u5230\u53ef\u80fd\u7684\u91cd\u590d\u573a\u666f\uff0c\u8f93\u5165\u4e3a\u5f53\u524d\u5e27 //\u8f93\u51fa\u662f\u53ef\u80fd\u4e3a\u91cd\u590d\u573a\u666f\u7684\u5e27\u5728\u6570\u636e\u5e93\u4e2d\u7684ID\u7684\u96c6\u5408 void SelectCandidates(const geometry::RGBDFrame &frame, std::vector<int> &candidates); //\u6dfb\u52a0\u5f53\u524d\u5e27\u5230\u6570\u636e\u5e93\u4e2d void Insert(const geometry::RGBDFrame &frame); \u4e4b\u540e\u53ef\u80fd\u6dfb\u52a0\u66f4\u591a\u7684\u95ed\u73af\u68c0\u6d4b\u65b9\u6cd5\u3002","title":"\u95ed\u73af\u68c0\u6d4b"},{"location":"modules/lcdetection/#_1","text":"\u7531\u4e8e\u566a\u58f0\u7b49\u56e0\u7d20\uff0ctracking\u7684\u7ed3\u679c\u4e00\u5b9a\u4f1a\u6709\u8bef\u5dee\uff0c\u8fd9\u5c31\u610f\u5473\u7740\u626b\u63cf\u4e00\u5708\u56de\u6765\u4e0d\u4e00\u5b9a\u80fd\u56de\u5230\u539f\u70b9\uff0c\u53cd\u6620\u5230\u91cd\u5efa\u7ed3\u679c\uff0c\u5c31\u662f\u4f1a\u51fa\u73b0\u91cd\u5f71\u3002\u800c\u95ed\u73af\u68c0\u6d4b\u662f\u68c0\u67e5\u5f53\u524d\u626b\u63cf\u7684\u56fe\u7247\u4e0e\u4e4b\u524d\u626b\u63cf\u56fe\u7247\u7684\u76f8\u4f3c\u5ea6\uff0c\u4ece\u800c\u627e\u5230\u4e4b\u524d\u9047\u5230\u7684\u573a\u666f\uff0c\u4e3a\u5168\u5c40\u7684\u4f4d\u59ff\u4f18\u5316\u63d0\u4f9b\u7ea6\u675f\uff0c\u8fbe\u5230global consistency\u3002 \u95ed\u73af\u68c0\u6d4b\u65b9\u6cd5\u5f88\u591a\uff0c\u5305\u62ec2D\u7684\u548c3D\u7684\uff0c\u76ee\u524dFCLib\u53ea\u5f15\u5165\u4e86 MILD \uff0c\u662f2D\u7684\u57fa\u4e8e\u591a\u7d22\u5f15\u54c8\u5e0c\u7684\u95ed\u73af\u68c0\u6d4b\u3002\u901a\u8fc7\u95ed\u73af\u68c0\u6d4b\u5f97\u5230\u4e00\u7cfb\u5217\u53ef\u80fd\u7684\u76f8\u4f3c\u573a\u666f\uff0c\u518d\u6839\u636e odometry::SparseTracking \u6765\u68c0\u67e5\u662f\u5426\u80fd\u8ffd\u8e2a\u6210\u529f\uff0c\u76f8\u5bf9\u4e8e\u5bf9\u6bcf\u4e2a\u5e27\u6765\u8fdb\u884ctracking\uff0c\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u6d88\u8017\u7684\u65f6\u95f4\u3002 FCLib\u5c06MILD\u5c01\u88c5\u6210\u7c7b MildLCDetector \uff0c\u4e3b\u8981\u6210\u5458\u51fd\u6570\u4e3a\uff1a //\u4e3a\u5f53\u524d\u5e27\u627e\u5230\u53ef\u80fd\u7684\u91cd\u590d\u573a\u666f\uff0c\u8f93\u5165\u4e3a\u5f53\u524d\u5e27 //\u8f93\u51fa\u662f\u53ef\u80fd\u4e3a\u91cd\u590d\u573a\u666f\u7684\u5e27\u5728\u6570\u636e\u5e93\u4e2d\u7684ID\u7684\u96c6\u5408 void SelectCandidates(const geometry::RGBDFrame &frame, std::vector<int> &candidates); //\u6dfb\u52a0\u5f53\u524d\u5e27\u5230\u6570\u636e\u5e93\u4e2d void Insert(const geometry::RGBDFrame &frame); \u4e4b\u540e\u53ef\u80fd\u6dfb\u52a0\u66f4\u591a\u7684\u95ed\u73af\u68c0\u6d4b\u65b9\u6cd5\u3002","title":"\u95ed\u73af\u68c0\u6d4b"},{"location":"modules/odometry/","text":"\u89c6\u89c9\u91cc\u7a0b\u8ba1 \u8fd9\u91cc\u7684\u89c6\u89c9\u91cc\u7a0b\u8ba1\u7279\u6307RGBD\u89c6\u89c9\u91cc\u7a0b\u8ba1\u3002\u89c6\u89c9\u91cc\u7a0b\u8ba1\u7684\u4f5c\u7528\u662f\u4f30\u8ba1\u4e24\u5e27\u4e4b\u95f4\u76f8\u673a\u7684\u8fd0\u52a8\uff0c\u662fSLAM\u7684\u7b2c\u4e00\u6b65\u3002\u5728FCLib\u4e2d\u5b9e\u73b0\u4e86\u4e24\u79cd\u89c6\u89c9\u91cc\u7a0b\u8ba1\uff0c\u7528\u5f97\u90fd\u6bd4\u8f83\u5e7f\u6cdb\uff1a\u57fa\u4e8e\u7279\u5f81\u70b9\u7684\u7a00\u758f\u5339\u914d\uff0c\u4ee5\u53ca\u57fa\u4e8e\u5149\u6d41\u7684\u7a20\u5bc6\u5339\u914d\u3002\u7528\u6cd5\u975e\u5e38\u7b80\u5355\uff1a std::shared_ptr<SparseTrackingResult> SparseTracking(const cv::Mat &source_color, const cv::Mat &target_color, const cv::Mat &source_depth, const cv::Mat &target_depth); std::shared_ptr<SparseTrackingResult> SparseTracking(geometry::RGBDFrame &source_frame, geometry::RGBDFrame &target_frame); std::shared_ptr<SparseTrackingResult> SparseTrackingMILD(const cv::Mat &source_color, const cv::Mat &target_color, const cv::Mat &source_depth, const cv::Mat &target_depth); std::shared_ptr<SparseTrackingResult> SparseTrackingMILD(geometry::RGBDFrame &source_frame, geometry::RGBDFrame &target_frame); std::shared_ptr<DenseTrackingResult> DenseTracking(const cv::Mat &source_color, const cv::Mat &target_color, const cv::Mat &source_depth, const cv::Mat &target_depth, const geometry::TransformationMatrix &initial_T, int term_type = 0); std::shared_ptr<DenseTrackingResult> DenseTracking(geometry::RGBDFrame &source_frame, geometry::RGBDFrame &target_frame, const geometry::TransformationMatrix &initial_T, int term_type = 0); \u4f60\u53ef\u4ee5\u9009\u62e9\u7528\u4e00\u5bf9\u6df1\u5ea6\u56fe\u4e00\u5bf9\u5f69\u8272\u56fe\u6765\u5339\u914d\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e24\u4e2a\u4e4b\u524d\u4ecb\u7ecd\u7684 geometry::RGBDFrame \u6765\u5339\u914d\u3002\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u667a\u80fd\u6307\u9488\uff0c\u6307\u5411\u4e00\u4e2a odometry::SparseTrackingResult \u5bf9\u8c61\uff0c\u6216\u8005\u662f odometry::DenseTrackingResult \u3002\u4e8c\u8005\u7684\u5b9a\u4e49\u5206\u522b\u5982\u4e0b\uff1a class SparseTrackingResult { public: //\u76f8\u5bf9\u4f4d\u59ff geometry::TransformationMatrix T; //\u5339\u914d\u7684inliers\u7684id\u5bf9 geometry::FMatchSet correspondence_set_index; //\u5339\u914d\u7684inliers\u7684\u70b9\u5bf9 geometry::PointCorrespondenceSet correspondence_set; //rmse\u8bef\u5dee double rmse = 1e6; //\u662f\u5426\u8ffd\u8e2a\u6210\u529f bool tracking_success; }; class DenseTrackingResult { public: //\u76f8\u5bf9\u4f4d\u59ff geometry::TransformationMatrix T; //\u5339\u914d\u7684inliers\u7684id\u5bf9 geometry::PixelCorrespondenceSet pixel_correspondence_set; //\u5339\u914d\u7684inliers\u7684\u70b9\u5bf9 geometry::PointCorrespondenceSet correspondence_set; //rmse\u8bef\u5dee double rmse = 1e6; //\u662f\u5426\u8ffd\u8e2a\u6210\u529f bool tracking_success; }; \u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff0c\u4e8c\u8005\u6700\u540e\u5f97\u5230\u7684\u5339\u914d\u70b9\u7684ID\u7c7b\u578b\u4e0d\u540c\uff0csparse tracking\u7279\u5f81\u70b9ID\u662f\u4e00\u7ef4\u7684\uff0c\u4e00\u5bf9\u6b63\u786e\u5339\u914d\u7684\u7279\u5f81\u70b9\u7c7b\u4f3c\u4e8e \\((501, 308)\\) \uff0c\u6307\u7684\u662fsource frame\u4e2d\u7684\u7b2c501\u4e2a\u7279\u5f81\u70b9\u548c\u7b2c308\u4e2a\u7279\u5f81\u70b9\u4e3a\u4e00\u5bf9\u3002\u800cdense tracking\u6700\u540e\u70b9\u7684ID\u662f\u4e8c\u7ef4\u7684\uff0c\u7ed3\u679c\u4f8b\u5982\uff1a \\([(501, 308), (489, 311)]\\) \uff0c\u6307\u7684\u662f\u50cf\u7d20\u4f4d\u7f6e \\((501, 308)\\) \u5bf9\u5e94\u76843D\u70b9\u4e0e\u50cf\u7d20\u4f4d\u7f6e\u4e3a \\((489, 311)\\) \u5bf9\u5e94\u76843D\u70b9\u4e3a\u4e00\u5bf9\u3002\u5f53\u7136\uff0c\u53ef\u4ee5\u5c06dense tracking\u7684\u7ed3\u679c\u6574\u5408\u6210\u4e0esparse tracking\u7ed3\u679c\u4e00\u6837\u7684\u5f62\u5f0f\uff0c\u4f46\u662fFCLib\u8ba4\u4e3a\u8fd9\u6837\u66f4\u63a5\u8fd1\u7b97\u6cd5\u7684\u672c\u8d28\uff0c\u56e0\u4e3a\u5b83\u900f\u6f0f\u51fa\u4e00\u4e2a\u4fe1\u606f\u5c31\u662f\uff1asparse tracking\u662f\u57fa\u4e8e\u63d0\u53d6\u51fa\u6765\u7684\u7279\u5f81\u70b9\u7684\uff0c\u800cdense tracking\u662f\u9010\u50cf\u7d20\u7684\u3002 SparseTracking SparseTracking\u7684\u57fa\u672c\u6b65\u9aa4\u5982\u4e0b\uff1a - \u63d0\u53d6\u7279\u5f81\u70b9 - \u7279\u5f81\u70b9\u5339\u914d - outlier\u8fc7\u6ee4 - \u6c42\u5f97\u53d8\u6362\u77e9\u9635 FCLib\u63d0\u53d6\u7684\u662fORB\u7279\u5f81\u70b9\uff0c\u901f\u5ea6\u5feb\u3002\u5728\u7279\u5f81\u70b9\u5339\u914d\u65f6\uff0c\u9009\u62e9\u4e86\u4e24\u79cd\u7b56\u7565\uff1aOpenCV\u7684BFMatcher\uff08brutal fource\uff09\uff0c\u4ee5\u53ca MILD \u4e2d\u63d0\u5230\u7684Sparse Match\u3002\u8fd9\u4e2a\u90e8\u5206\u7684\u5185\u5bb9\u4e5f\u5728\u4e0a\u8ff0\u94fe\u63a5\u4e2d\u5f00\u6e90\u4e86\uff0c\u6587\u7ae0\u53ef\u4ee5\u53c2\u8003 Beyond SIFT Using Binary features in Loop Closure Detection \uff0c\u5728code\u90e8\u5206\u7684 relative_paper/sparse_match.pdf \u4e5f\u662f\u8fd9\u7bc7\u6587\u7ae0\u3002\u8fd9\u4e2a\u6587\u7ae0\u4e2d\u63d0\u5230\u7684\u65b9\u6cd5\u5728FCLib\u4e2d\u88ab\u5c01\u88c5\u6210\u4e00\u4e2a\u7c7b SparseMatcher \uff0c\u4e3b\u8981\u6210\u5458\u51fd\u6570\uff1a //Match void Match(const geometry::Descriptor &source_descriptors, const geometry::Descriptor &target_descriptors, geometry::DMatchSet & matches); //\u5728match\u4e4b\u540e\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u6539\u8fdb\u5f97\u5230\u7684\u5339\u914d\uff0c //\u9700\u8981\u7279\u5f81\u70b9\u76843D\u5750\u6807\uff0c\u4e5f\u5c31\u662f\u53ea\u7528\u4e8eRGBD frame void RefineMatches(const geometry::Descriptor &source_descriptors, const geometry::Point3List &source_local_points, const geometry::KeyPointSet &source_keypoints, const geometry::KeyPointSet &target_keypoints, const geometry::TransformationMatrix & H,geometry::DMatchSet & matches); \u7279\u5f81\u70b9\u8fc7\u6ee4\u65b9\u6cd5\u4e5f\u5f88\u591a\uff0c odometry::outlier_filter \u7c7b\u63d0\u4f9b\u4e86\u51e0\u4e2a\u5e38\u7528\u7684\u65b9\u6cd5\u3002 //\u5220\u9664\u6389\u8ddd\u79bb\u5927\u4e8e\u6700\u5c0f\u8ddd\u79bbn\u500d\u7684\u5339\u914d\uff08Naive\uff09 void MinDistance(const geometry::KeyPointSet &source_keypoints, const geometry::KeyPointSet &target_keypoints,geometry::DMatchSet & matches); //\u5220\u9664\u6389\u6700\u4f18\u8ddd\u79bb\u4e0e\u6b21\u4f18\u8ddd\u79bb\u6bd4\u503c\u6bd4\u8f83\u5927\u7684\u70b9\uff08\u6b63\u786e\u7684\u5339\u914d\u6700\u4f18\u7ed3\u679c\u5e94\u8be5\u6bd4\u6b21\u4f18\u7ed3\u679c\u597d\u5f88\u591a\uff09 void KnnMatch(const geometry::Descriptor &source, geometry::Descriptor & target, const cv::BFMatcher &matcher, std::vector< cv::DMatch > &matches, float minRatio = 1.5); //\u901a\u8fc7Ransac\u8ba1\u7b97\u672c\u5f81\u77e9\u9635\uff0c\u6e05\u70b9inliers void Ransac(const geometry::KeyPointSet &source_keypoints, const geometry::KeyPointSet &target_keypoints,geometry::DMatchSet & matches); //\u5bf9\u5f53\u524d\u68c0\u67e5\u7684\u5339\u914d\u5bf9\uff0c\u968f\u673a\u9009\u62e9\u51e0\u4e2a\u522b\u7684\u5339\u914d\uff0c\u67e5\u770b\u4ed6\u4eec\u662f\u5426consistent //\u9519\u8bef\u7684\u5339\u914d\u5f88\u96be\u627e\u5230\u5176\u4ed6\u6bd4\u8f83consistent\u7684\u5339\u914d\u5bf9 void RanSaPC(const geometry::Point3List &source_local_points, const geometry::Point3List &target_local_points, std::default_random_engine &engine, std::vector< cv::DMatch > &init_matches); FCLib\u5c06\u4f7f\u7528 MILD \u4e2dsparse match\u7684tracking\u51fd\u6570\uff0c\u5c01\u88c5\u6210 SparseTrackingMILD \uff0c\u4e00\u822c\u6765\u8bf4\u76f8\u5bf9\u4e8e SparseTracking \u6709\u66f4\u597d\u7684\u6548\u679c\uff0c\u53ef\u4ee5\u5f97\u5230\u66f4\u591a\u7684\u6b63\u786e\u7684inliers\u3002 DenseTracking DenseTracking\u7684\u539f\u7406\u53ef\u4ee5\u53c2\u8003\u8bba\u6587\uff1a Real-Time Visual Odometry from Dense RGB-D Images \uff0c\u4e5f\u5c31\u662f related_paper/steinbruecker_sturm_cremers_iccv11.pdf \u3002 \u4e0a\u8ff0\u6587\u7ae0\u53ea\u662f\u8ffd\u8e2a\u989c\u8272\u56fe\u7684intensity\uff0c\u4e5f\u5c31\u662f\u5149\u6d41\u6cd5\uff0c\u4f46\u662f\u5f88\u5bb9\u6613\u62d3\u5c55\u5230\u8ffd\u8e2a\u6df1\u5ea6\u56fe\u7684depth\u3002\u5728FCLib\u4e2d\uff0c\u662f\u53ef\u4ee5\u6839\u636e\u6700\u540e\u4e00\u4e2a\u53c2\u6570 term_type \u6765\u9009\u62e9\u4f7f\u7528\u989c\u8272\u6216\u8005\u6df1\u5ea6\uff0c\u6216\u8005\u662f\u6df7\u5408\u9879\uff1a if(term_type == 0 )//\u6df7\u5408 std::cout<<BLUE<<\"[DEBUG]::Using hybrid term\"<<RESET<<std::endl; else if(term_type == 1)//\u989c\u8272 std::cout<<BLUE<<\"[DEBUG]::Using photo term\"<<RESET<<std::endl; else if(term_type == 2)//\u6df1\u5ea6 std::cout<<BLUE<<\"[DEBUG]::Using geometry term\"<<RESET<<std::endl; DenseTracking\u7684\u6b65\u9aa4\uff1a - \u5bf9source frame\u7684\u6bcf\u4e2apixel\u6839\u636e\u5f53\u524d\u4f4d\u59ff\u8ba1\u7b97source\u5230target\u91cd\u6295\u5f71\u7684\u5bf9\u5e94\u70b9 - \u627e\u5230\u6240\u6709\u7684inliers\u5bf9\u5e94\u70b9 - \u6839\u636e\u8fd9\u4e9b\u5bf9\u4e8einliers\u6c42\u96c5\u53ef\u6bd4\u77e9\u9635\uff0c\u6539\u8fdb\u4f4d\u59ff - \u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b \u53ef\u4ee5\u770b\u5230DenseTracking\u9700\u8981\u4e00\u4e2a\u521d\u59cb\u4f4d\u59ff\uff0c\u5982\u679c\u6ca1\u6709\u521d\u59cb\u4f30\u8ba1\uff0c\u9700\u8981\u5047\u8bbe\u8fd9\u4e24\u4e2aframe\u7684\u76f8\u5bf9\u4f4d\u59ff\u5f88\u63a5\u8fd1\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6709\u70b9\u50cfPointToPoint\u7684 ICP \uff0c\u533a\u522b\u5728\u4e8e\u4f18\u5316\u7684\u76ee\u6807\u51fd\u6570\u4e0d\u540c\uff0c\u56e0\u6b64PointToPoint\u9700\u8981\u627e\u5230\u6700\u8fd1\u70b9\u800c\u4e0d\u662f\u901a\u8fc7\u91cd\u6295\u5f71\uff0c\u627e\u5230\u6700\u8fd1\u70b9\u7684\u8fc7\u7a0b\u5f88\u8017\u65f6\u3002 \u5728\u5177\u4f53\u5b9e\u73b0\u65f6\u5019\uff0c\u4f1a\u5229\u7528\u56fe\u50cf\u91d1\u5b57\u5854\uff0c\u63d0\u9ad8\u8fd0\u884c\u6548\u7387\u3002 \u6bd4\u8f83 SparseTracking\u7279\u5f81\u70b9\u4e2a\u6570\u5c11\uff0c\u66f4\u5feb\uff0c\u4e5f\u4e0d\u9700\u8981\u521d\u59cb\u4f4d\u59ff\uff0c\u4f46\u662f\u53ea\u8003\u8651\u4e86\u89c6\u89c9\u4fe1\u606f\uff0c\u5728\u67d0\u4e9b\u7eb9\u7406\u6bd4\u8f83\u5c11\u6216\u8005\u989c\u8272\u56fe\u5f88\u5dee\u7684\u5730\u65b9\u5c31\u4e0d\u80fd\u7528\u4e86\u3002\u800cDenseTracking\u6bd4\u8f83\u6162\uff0c\u9700\u8981\u521d\u59cb\u4f4d\u59ff\uff0c\u4f46\u662f\u5b83\u66f4\u9c81\u68d2\uff0c\u751a\u81f3\u5728\u53ea\u6709\u6df1\u5ea6\u6216\u8005\u53ea\u6709\u989c\u8272\u56fe\u7684\u60c5\u51b5\u4e0b\u4e5f\u80fd\u4f7f\u7528\uff0c\u5728SparseTracking\u5931\u8d25\u7684\u65f6\u5019\uff0c\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u540e\u5907\u65b9\u6848\u3002 RGBDFrame \u53ef\u4ee5\u770b\u5230\u5bf9\u4e8e\u6bcf\u4e00\u79cdtracking\u90fd\u6709\u4e24\u4e2a\u51fd\u6570\uff1a\u5206\u522b\u662f\u76f4\u63a5\u4f5c\u7528\u4e8ergb\u548cdepth\u4e0a\u7684\uff1a std::shared_ptr<SparseTrackingResult> SparseTracking(const cv::Mat &source_color, const cv::Mat &target_color, const cv::Mat &source_depth, const cv::Mat &target_depth); \u4e0e\u4f5c\u7528\u4e8e geometry::RGBDFrame \u4e0a\u7684\uff1a std::shared_ptr<SparseTrackingResult> SparseTracking(geometry::RGBDFrame &source_frame, geometry::RGBDFrame &target_frame); \u533a\u522b\u5728\u4e8e geometry::RGBDFrame \u4f1a\u4fdd\u5b58\u4e2d\u95f4\u4fe1\u606f\uff0c\u642d\u5efa\u7cfb\u7edf\u65f6\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff1a //part of RGBDFrame /*for sparse odometry*/ geometry::Descriptor descriptor; geometry::KeyPointSet keypoints; PointCloud feature_pcd;//for optimization /*for dense odometry*/ cv::Mat gray;//gray image of rgb cv::Mat depth32f;//refined depth std::vector<cv::Mat> color_pyramid; std::vector<cv::Mat> depth_pyramid; std::vector<cv::Mat> color_dx_pyramid; std::vector<cv::Mat> color_dy_pyramid; std::vector<cv::Mat> depth_dx_pyramid; std::vector<cv::Mat> depth_dy_pyramid; std::vector<geometry::ImageXYZ> image_xyz; \u4e0a\u8ff0\u4e2d std::vector<geometry::ImageXYZ> image_xyz \u53ef\u4ee5\u770b\u4f5c\u4e00\u79cd\u4e09\u7ef4\u56fe\u7247\uff1a\u5bf9\u6bcf\u4e2aPixel\u6709\u4e00\u4e2a\u5bf9\u5e94\u70b9\uff0c\u901a\u8fc7\u50cf\u7d20\u5750\u6807\u6765\u627e\u5230\u5bf9\u5e94\u76843D\u70b9\uff0c\u8fd9\u4e5f\u662f\u5f00\u5934\u63d0\u5230\u7684 DenseTrackingResult \u4e2d\u5bf9\u5e94\u70b9ID\u4e3a\u4e8c\u7ef4\u7684\u539f\u56e0\u3002","title":"\u89c6\u89c9\u91cc\u7a0b\u8ba1"},{"location":"modules/odometry/#_1","text":"\u8fd9\u91cc\u7684\u89c6\u89c9\u91cc\u7a0b\u8ba1\u7279\u6307RGBD\u89c6\u89c9\u91cc\u7a0b\u8ba1\u3002\u89c6\u89c9\u91cc\u7a0b\u8ba1\u7684\u4f5c\u7528\u662f\u4f30\u8ba1\u4e24\u5e27\u4e4b\u95f4\u76f8\u673a\u7684\u8fd0\u52a8\uff0c\u662fSLAM\u7684\u7b2c\u4e00\u6b65\u3002\u5728FCLib\u4e2d\u5b9e\u73b0\u4e86\u4e24\u79cd\u89c6\u89c9\u91cc\u7a0b\u8ba1\uff0c\u7528\u5f97\u90fd\u6bd4\u8f83\u5e7f\u6cdb\uff1a\u57fa\u4e8e\u7279\u5f81\u70b9\u7684\u7a00\u758f\u5339\u914d\uff0c\u4ee5\u53ca\u57fa\u4e8e\u5149\u6d41\u7684\u7a20\u5bc6\u5339\u914d\u3002\u7528\u6cd5\u975e\u5e38\u7b80\u5355\uff1a std::shared_ptr<SparseTrackingResult> SparseTracking(const cv::Mat &source_color, const cv::Mat &target_color, const cv::Mat &source_depth, const cv::Mat &target_depth); std::shared_ptr<SparseTrackingResult> SparseTracking(geometry::RGBDFrame &source_frame, geometry::RGBDFrame &target_frame); std::shared_ptr<SparseTrackingResult> SparseTrackingMILD(const cv::Mat &source_color, const cv::Mat &target_color, const cv::Mat &source_depth, const cv::Mat &target_depth); std::shared_ptr<SparseTrackingResult> SparseTrackingMILD(geometry::RGBDFrame &source_frame, geometry::RGBDFrame &target_frame); std::shared_ptr<DenseTrackingResult> DenseTracking(const cv::Mat &source_color, const cv::Mat &target_color, const cv::Mat &source_depth, const cv::Mat &target_depth, const geometry::TransformationMatrix &initial_T, int term_type = 0); std::shared_ptr<DenseTrackingResult> DenseTracking(geometry::RGBDFrame &source_frame, geometry::RGBDFrame &target_frame, const geometry::TransformationMatrix &initial_T, int term_type = 0); \u4f60\u53ef\u4ee5\u9009\u62e9\u7528\u4e00\u5bf9\u6df1\u5ea6\u56fe\u4e00\u5bf9\u5f69\u8272\u56fe\u6765\u5339\u914d\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e24\u4e2a\u4e4b\u524d\u4ecb\u7ecd\u7684 geometry::RGBDFrame \u6765\u5339\u914d\u3002\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u667a\u80fd\u6307\u9488\uff0c\u6307\u5411\u4e00\u4e2a odometry::SparseTrackingResult \u5bf9\u8c61\uff0c\u6216\u8005\u662f odometry::DenseTrackingResult \u3002\u4e8c\u8005\u7684\u5b9a\u4e49\u5206\u522b\u5982\u4e0b\uff1a class SparseTrackingResult { public: //\u76f8\u5bf9\u4f4d\u59ff geometry::TransformationMatrix T; //\u5339\u914d\u7684inliers\u7684id\u5bf9 geometry::FMatchSet correspondence_set_index; //\u5339\u914d\u7684inliers\u7684\u70b9\u5bf9 geometry::PointCorrespondenceSet correspondence_set; //rmse\u8bef\u5dee double rmse = 1e6; //\u662f\u5426\u8ffd\u8e2a\u6210\u529f bool tracking_success; }; class DenseTrackingResult { public: //\u76f8\u5bf9\u4f4d\u59ff geometry::TransformationMatrix T; //\u5339\u914d\u7684inliers\u7684id\u5bf9 geometry::PixelCorrespondenceSet pixel_correspondence_set; //\u5339\u914d\u7684inliers\u7684\u70b9\u5bf9 geometry::PointCorrespondenceSet correspondence_set; //rmse\u8bef\u5dee double rmse = 1e6; //\u662f\u5426\u8ffd\u8e2a\u6210\u529f bool tracking_success; }; \u4e3b\u8981\u533a\u522b\u5728\u4e8e\uff0c\u4e8c\u8005\u6700\u540e\u5f97\u5230\u7684\u5339\u914d\u70b9\u7684ID\u7c7b\u578b\u4e0d\u540c\uff0csparse tracking\u7279\u5f81\u70b9ID\u662f\u4e00\u7ef4\u7684\uff0c\u4e00\u5bf9\u6b63\u786e\u5339\u914d\u7684\u7279\u5f81\u70b9\u7c7b\u4f3c\u4e8e \\((501, 308)\\) \uff0c\u6307\u7684\u662fsource frame\u4e2d\u7684\u7b2c501\u4e2a\u7279\u5f81\u70b9\u548c\u7b2c308\u4e2a\u7279\u5f81\u70b9\u4e3a\u4e00\u5bf9\u3002\u800cdense tracking\u6700\u540e\u70b9\u7684ID\u662f\u4e8c\u7ef4\u7684\uff0c\u7ed3\u679c\u4f8b\u5982\uff1a \\([(501, 308), (489, 311)]\\) \uff0c\u6307\u7684\u662f\u50cf\u7d20\u4f4d\u7f6e \\((501, 308)\\) \u5bf9\u5e94\u76843D\u70b9\u4e0e\u50cf\u7d20\u4f4d\u7f6e\u4e3a \\((489, 311)\\) \u5bf9\u5e94\u76843D\u70b9\u4e3a\u4e00\u5bf9\u3002\u5f53\u7136\uff0c\u53ef\u4ee5\u5c06dense tracking\u7684\u7ed3\u679c\u6574\u5408\u6210\u4e0esparse tracking\u7ed3\u679c\u4e00\u6837\u7684\u5f62\u5f0f\uff0c\u4f46\u662fFCLib\u8ba4\u4e3a\u8fd9\u6837\u66f4\u63a5\u8fd1\u7b97\u6cd5\u7684\u672c\u8d28\uff0c\u56e0\u4e3a\u5b83\u900f\u6f0f\u51fa\u4e00\u4e2a\u4fe1\u606f\u5c31\u662f\uff1asparse tracking\u662f\u57fa\u4e8e\u63d0\u53d6\u51fa\u6765\u7684\u7279\u5f81\u70b9\u7684\uff0c\u800cdense tracking\u662f\u9010\u50cf\u7d20\u7684\u3002","title":"\u89c6\u89c9\u91cc\u7a0b\u8ba1"},{"location":"modules/odometry/#sparsetracking","text":"SparseTracking\u7684\u57fa\u672c\u6b65\u9aa4\u5982\u4e0b\uff1a - \u63d0\u53d6\u7279\u5f81\u70b9 - \u7279\u5f81\u70b9\u5339\u914d - outlier\u8fc7\u6ee4 - \u6c42\u5f97\u53d8\u6362\u77e9\u9635 FCLib\u63d0\u53d6\u7684\u662fORB\u7279\u5f81\u70b9\uff0c\u901f\u5ea6\u5feb\u3002\u5728\u7279\u5f81\u70b9\u5339\u914d\u65f6\uff0c\u9009\u62e9\u4e86\u4e24\u79cd\u7b56\u7565\uff1aOpenCV\u7684BFMatcher\uff08brutal fource\uff09\uff0c\u4ee5\u53ca MILD \u4e2d\u63d0\u5230\u7684Sparse Match\u3002\u8fd9\u4e2a\u90e8\u5206\u7684\u5185\u5bb9\u4e5f\u5728\u4e0a\u8ff0\u94fe\u63a5\u4e2d\u5f00\u6e90\u4e86\uff0c\u6587\u7ae0\u53ef\u4ee5\u53c2\u8003 Beyond SIFT Using Binary features in Loop Closure Detection \uff0c\u5728code\u90e8\u5206\u7684 relative_paper/sparse_match.pdf \u4e5f\u662f\u8fd9\u7bc7\u6587\u7ae0\u3002\u8fd9\u4e2a\u6587\u7ae0\u4e2d\u63d0\u5230\u7684\u65b9\u6cd5\u5728FCLib\u4e2d\u88ab\u5c01\u88c5\u6210\u4e00\u4e2a\u7c7b SparseMatcher \uff0c\u4e3b\u8981\u6210\u5458\u51fd\u6570\uff1a //Match void Match(const geometry::Descriptor &source_descriptors, const geometry::Descriptor &target_descriptors, geometry::DMatchSet & matches); //\u5728match\u4e4b\u540e\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u6539\u8fdb\u5f97\u5230\u7684\u5339\u914d\uff0c //\u9700\u8981\u7279\u5f81\u70b9\u76843D\u5750\u6807\uff0c\u4e5f\u5c31\u662f\u53ea\u7528\u4e8eRGBD frame void RefineMatches(const geometry::Descriptor &source_descriptors, const geometry::Point3List &source_local_points, const geometry::KeyPointSet &source_keypoints, const geometry::KeyPointSet &target_keypoints, const geometry::TransformationMatrix & H,geometry::DMatchSet & matches); \u7279\u5f81\u70b9\u8fc7\u6ee4\u65b9\u6cd5\u4e5f\u5f88\u591a\uff0c odometry::outlier_filter \u7c7b\u63d0\u4f9b\u4e86\u51e0\u4e2a\u5e38\u7528\u7684\u65b9\u6cd5\u3002 //\u5220\u9664\u6389\u8ddd\u79bb\u5927\u4e8e\u6700\u5c0f\u8ddd\u79bbn\u500d\u7684\u5339\u914d\uff08Naive\uff09 void MinDistance(const geometry::KeyPointSet &source_keypoints, const geometry::KeyPointSet &target_keypoints,geometry::DMatchSet & matches); //\u5220\u9664\u6389\u6700\u4f18\u8ddd\u79bb\u4e0e\u6b21\u4f18\u8ddd\u79bb\u6bd4\u503c\u6bd4\u8f83\u5927\u7684\u70b9\uff08\u6b63\u786e\u7684\u5339\u914d\u6700\u4f18\u7ed3\u679c\u5e94\u8be5\u6bd4\u6b21\u4f18\u7ed3\u679c\u597d\u5f88\u591a\uff09 void KnnMatch(const geometry::Descriptor &source, geometry::Descriptor & target, const cv::BFMatcher &matcher, std::vector< cv::DMatch > &matches, float minRatio = 1.5); //\u901a\u8fc7Ransac\u8ba1\u7b97\u672c\u5f81\u77e9\u9635\uff0c\u6e05\u70b9inliers void Ransac(const geometry::KeyPointSet &source_keypoints, const geometry::KeyPointSet &target_keypoints,geometry::DMatchSet & matches); //\u5bf9\u5f53\u524d\u68c0\u67e5\u7684\u5339\u914d\u5bf9\uff0c\u968f\u673a\u9009\u62e9\u51e0\u4e2a\u522b\u7684\u5339\u914d\uff0c\u67e5\u770b\u4ed6\u4eec\u662f\u5426consistent //\u9519\u8bef\u7684\u5339\u914d\u5f88\u96be\u627e\u5230\u5176\u4ed6\u6bd4\u8f83consistent\u7684\u5339\u914d\u5bf9 void RanSaPC(const geometry::Point3List &source_local_points, const geometry::Point3List &target_local_points, std::default_random_engine &engine, std::vector< cv::DMatch > &init_matches); FCLib\u5c06\u4f7f\u7528 MILD \u4e2dsparse match\u7684tracking\u51fd\u6570\uff0c\u5c01\u88c5\u6210 SparseTrackingMILD \uff0c\u4e00\u822c\u6765\u8bf4\u76f8\u5bf9\u4e8e SparseTracking \u6709\u66f4\u597d\u7684\u6548\u679c\uff0c\u53ef\u4ee5\u5f97\u5230\u66f4\u591a\u7684\u6b63\u786e\u7684inliers\u3002","title":"SparseTracking"},{"location":"modules/odometry/#densetracking","text":"DenseTracking\u7684\u539f\u7406\u53ef\u4ee5\u53c2\u8003\u8bba\u6587\uff1a Real-Time Visual Odometry from Dense RGB-D Images \uff0c\u4e5f\u5c31\u662f related_paper/steinbruecker_sturm_cremers_iccv11.pdf \u3002 \u4e0a\u8ff0\u6587\u7ae0\u53ea\u662f\u8ffd\u8e2a\u989c\u8272\u56fe\u7684intensity\uff0c\u4e5f\u5c31\u662f\u5149\u6d41\u6cd5\uff0c\u4f46\u662f\u5f88\u5bb9\u6613\u62d3\u5c55\u5230\u8ffd\u8e2a\u6df1\u5ea6\u56fe\u7684depth\u3002\u5728FCLib\u4e2d\uff0c\u662f\u53ef\u4ee5\u6839\u636e\u6700\u540e\u4e00\u4e2a\u53c2\u6570 term_type \u6765\u9009\u62e9\u4f7f\u7528\u989c\u8272\u6216\u8005\u6df1\u5ea6\uff0c\u6216\u8005\u662f\u6df7\u5408\u9879\uff1a if(term_type == 0 )//\u6df7\u5408 std::cout<<BLUE<<\"[DEBUG]::Using hybrid term\"<<RESET<<std::endl; else if(term_type == 1)//\u989c\u8272 std::cout<<BLUE<<\"[DEBUG]::Using photo term\"<<RESET<<std::endl; else if(term_type == 2)//\u6df1\u5ea6 std::cout<<BLUE<<\"[DEBUG]::Using geometry term\"<<RESET<<std::endl; DenseTracking\u7684\u6b65\u9aa4\uff1a - \u5bf9source frame\u7684\u6bcf\u4e2apixel\u6839\u636e\u5f53\u524d\u4f4d\u59ff\u8ba1\u7b97source\u5230target\u91cd\u6295\u5f71\u7684\u5bf9\u5e94\u70b9 - \u627e\u5230\u6240\u6709\u7684inliers\u5bf9\u5e94\u70b9 - \u6839\u636e\u8fd9\u4e9b\u5bf9\u4e8einliers\u6c42\u96c5\u53ef\u6bd4\u77e9\u9635\uff0c\u6539\u8fdb\u4f4d\u59ff - \u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b \u53ef\u4ee5\u770b\u5230DenseTracking\u9700\u8981\u4e00\u4e2a\u521d\u59cb\u4f4d\u59ff\uff0c\u5982\u679c\u6ca1\u6709\u521d\u59cb\u4f30\u8ba1\uff0c\u9700\u8981\u5047\u8bbe\u8fd9\u4e24\u4e2aframe\u7684\u76f8\u5bf9\u4f4d\u59ff\u5f88\u63a5\u8fd1\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6709\u70b9\u50cfPointToPoint\u7684 ICP \uff0c\u533a\u522b\u5728\u4e8e\u4f18\u5316\u7684\u76ee\u6807\u51fd\u6570\u4e0d\u540c\uff0c\u56e0\u6b64PointToPoint\u9700\u8981\u627e\u5230\u6700\u8fd1\u70b9\u800c\u4e0d\u662f\u901a\u8fc7\u91cd\u6295\u5f71\uff0c\u627e\u5230\u6700\u8fd1\u70b9\u7684\u8fc7\u7a0b\u5f88\u8017\u65f6\u3002 \u5728\u5177\u4f53\u5b9e\u73b0\u65f6\u5019\uff0c\u4f1a\u5229\u7528\u56fe\u50cf\u91d1\u5b57\u5854\uff0c\u63d0\u9ad8\u8fd0\u884c\u6548\u7387\u3002","title":"DenseTracking"},{"location":"modules/odometry/#_2","text":"SparseTracking\u7279\u5f81\u70b9\u4e2a\u6570\u5c11\uff0c\u66f4\u5feb\uff0c\u4e5f\u4e0d\u9700\u8981\u521d\u59cb\u4f4d\u59ff\uff0c\u4f46\u662f\u53ea\u8003\u8651\u4e86\u89c6\u89c9\u4fe1\u606f\uff0c\u5728\u67d0\u4e9b\u7eb9\u7406\u6bd4\u8f83\u5c11\u6216\u8005\u989c\u8272\u56fe\u5f88\u5dee\u7684\u5730\u65b9\u5c31\u4e0d\u80fd\u7528\u4e86\u3002\u800cDenseTracking\u6bd4\u8f83\u6162\uff0c\u9700\u8981\u521d\u59cb\u4f4d\u59ff\uff0c\u4f46\u662f\u5b83\u66f4\u9c81\u68d2\uff0c\u751a\u81f3\u5728\u53ea\u6709\u6df1\u5ea6\u6216\u8005\u53ea\u6709\u989c\u8272\u56fe\u7684\u60c5\u51b5\u4e0b\u4e5f\u80fd\u4f7f\u7528\uff0c\u5728SparseTracking\u5931\u8d25\u7684\u65f6\u5019\uff0c\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u540e\u5907\u65b9\u6848\u3002","title":"\u6bd4\u8f83"},{"location":"modules/odometry/#rgbdframe","text":"\u53ef\u4ee5\u770b\u5230\u5bf9\u4e8e\u6bcf\u4e00\u79cdtracking\u90fd\u6709\u4e24\u4e2a\u51fd\u6570\uff1a\u5206\u522b\u662f\u76f4\u63a5\u4f5c\u7528\u4e8ergb\u548cdepth\u4e0a\u7684\uff1a std::shared_ptr<SparseTrackingResult> SparseTracking(const cv::Mat &source_color, const cv::Mat &target_color, const cv::Mat &source_depth, const cv::Mat &target_depth); \u4e0e\u4f5c\u7528\u4e8e geometry::RGBDFrame \u4e0a\u7684\uff1a std::shared_ptr<SparseTrackingResult> SparseTracking(geometry::RGBDFrame &source_frame, geometry::RGBDFrame &target_frame); \u533a\u522b\u5728\u4e8e geometry::RGBDFrame \u4f1a\u4fdd\u5b58\u4e2d\u95f4\u4fe1\u606f\uff0c\u642d\u5efa\u7cfb\u7edf\u65f6\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff1a //part of RGBDFrame /*for sparse odometry*/ geometry::Descriptor descriptor; geometry::KeyPointSet keypoints; PointCloud feature_pcd;//for optimization /*for dense odometry*/ cv::Mat gray;//gray image of rgb cv::Mat depth32f;//refined depth std::vector<cv::Mat> color_pyramid; std::vector<cv::Mat> depth_pyramid; std::vector<cv::Mat> color_dx_pyramid; std::vector<cv::Mat> color_dy_pyramid; std::vector<cv::Mat> depth_dx_pyramid; std::vector<cv::Mat> depth_dy_pyramid; std::vector<geometry::ImageXYZ> image_xyz; \u4e0a\u8ff0\u4e2d std::vector<geometry::ImageXYZ> image_xyz \u53ef\u4ee5\u770b\u4f5c\u4e00\u79cd\u4e09\u7ef4\u56fe\u7247\uff1a\u5bf9\u6bcf\u4e2aPixel\u6709\u4e00\u4e2a\u5bf9\u5e94\u70b9\uff0c\u901a\u8fc7\u50cf\u7d20\u5750\u6807\u6765\u627e\u5230\u5bf9\u5e94\u76843D\u70b9\uff0c\u8fd9\u4e5f\u662f\u5f00\u5934\u63d0\u5230\u7684 DenseTrackingResult \u4e2d\u5bf9\u5e94\u70b9ID\u4e3a\u4e8c\u7ef4\u7684\u539f\u56e0\u3002","title":"RGBDFrame"},{"location":"modules/optimization/","text":"\u4f18\u5316 \u5728 \u56de\u73af\u68c0\u6d4b \u4e2d\u63d0\u5230\u4e86\uff0ctracking\u4e00\u5b9a\u4f1a\u6709\u7d2f\u79ef\u8bef\u5dee\uff0c\u9700\u8981\u95ed\u73af\u68c0\u6d4b\u63d0\u4f9b\u7ea6\u675f\u6765\u4f18\u5316\u6d88\u9664\u8bef\u5dee\uff0c\u4f18\u5316\u4e5f\u5c31\u662f\u8fd9\u90e8\u5206\u7684\u5185\u5bb9\u3002 \u540e\u7aef\u4f18\u5316\u4e00\u822c\u4f1a\u7528\u4e00\u4e2a\u4f18\u5316\u5668\uff0cg2o\uff0cceres\u90fd\u662f\u5f88\u4e0d\u9519\u7684\uff0c\u53ef\u60dc\u7684\u662f\u4f5c\u8005\u53ea\u4f1aEigen\u3002\u5f53\u7136\uff0c\u5bf9\u4e8e\u4f18\u5316\u90e8\u5206\u81ea\u5df1\u7528Eigen\u5b9e\u73b0\uff0c\u5e94\u8be5\u4f1a\u66f4\u6709\u52a9\u4e8e\u5b66\u4e60\u5427\u3002FCLib\u5b9e\u73b0\u4e86\u4e24\u79cd\u540e\u7aef\u4f18\u5316\u65b9\u5f0f\uff1aFast BundleAdjustment\u4e0eBundleAdjustment\u3002 Fast BundleAdjustment \u4ecb\u7ecd\u4e4b\u524d\uff0c\u5148\u4ecb\u7ecd\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff1a Correspondence : class Correspondence { public: int source_id = -1; int target_id = -1; float average_disparity = 1e6; geometry::PointCorrespondenceSet correspondence_set; }; \u4e00\u4e2aFrame Correspondence\u610f\u601d\u662f\u4e00\u5bf9\u5339\u914d\u7684frame\uff0c\u5176\u4e2dsource id\u662fsource frame\u5728\u4f18\u5316\u53d8\u91cf\u4e2d\u7684id\uff0ctarget id\u662ftarget frame\u5728\u4f18\u5316\u53d8\u91cf\u4e2d\u7684id\u3002\u800c average_disparity \u7528\u6765\u8861\u91cf\u8fd9\u4e9b\u914d\u5bf9\u70b9\u57282\u7ef4\u56fe\u7247\u4e0a\u7684\u4f4d\u79fb\uff0c\u4e3b\u8981\u662f\u6839\u636e\u8fd9\u4e2a\u4f4d\u79fb\u6765\u5224\u65ad\u662f\u5426\u5e94\u8be5\u5f00\u59cb\u4e00\u4e2a\u65b0\u7684\u5173\u952e\u5e27\u3002 geometry::PointCorrespondenceSet \u662f\u8fd9\u4e00\u5bf9\u5339\u914d\u7684frame\u5305\u542b\u7684\u5339\u914d\u70b9\u7684\u96c6\u5408\u3002 Fast BundleAdjustment\uff08FBA\uff09\u6bd4\u4f20\u7edf\u7684BundleAdjustment\u66f4\u5feb\u3002\u5b9e\u9645\u4e0aFBA\u662f\u5728FCLib\u4e2d\u7684\u53eb\u6cd5\uff0c\u5e76\u6ca1\u6709\u4e00\u4e2a\u5f88\u6807\u51c6\u7684\u540d\u5b57\u3002\u5b83\u548cBundleAdjustment\u7684\u533a\u522b\u5728\u4e8e\u4f18\u5316\u53d8\u91cf\u4e0e\u76ee\u6807\u51fd\u6570\u3002FBA\u53ea\u4f18\u5316\u76f8\u673a\u4f4d\u59ff\uff0c\u4f18\u5316\u76ee\u6807\u51fd\u6570\u4e3a\uff1a \\[ E(T) = \\sum_{i}^{\\vert\\Omega\\vert}\\sum_{j}^{\\vert C_{i}\\vert}\\Vert T_sp_{s(j)} - T_tp_{t(j)} \\Vert^2 \\] \\(\\Omega\\) \u4e3a\u6240\u6709\u7684frame correspondences\uff0c \\(C_{i}\\) \u6307\u7684\u662f\u7b2c \\(i\\) \u4e2aframe correspondence\uff0c\u7531\u591a\u4e2apoint correspondence\u7ec4\u6210\u3002 \\(T_s, T_t\\) \u5206\u522b\u4ee3\u8868\u4e86frame correspondence\u4e2d\u7684source frame\u7684\u4f4d\u59ff\u4e0etarget frame\u7684\u4f4d\u59ff\uff0c\u800c \\(p_{s(j)}\\) \u8868\u793a\u7b2c \\(j\\) \u4e2apoint correspondence\u4e2d\u7684source point\u3002\u5bf9\u4e8e\u8fd9\u90e8\u5206\u7684\u4f18\u5316\uff0c\u53ef\u4ee5\u53c2\u8003\u6587\u7ae0 fastgo \uff0c\u4e5f\u5c31\u662f related_paper/fastgo.pdf \u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u8fd8\u5305\u542b\u4e86\u6709\u66f4\u591a\u7684\u4f18\u5316\u6280\u5de7\uff0c\u63d0\u9ad8\u7cfb\u7edf\u6548\u7387\uff0c\u800cFCLib\u53ea\u5b9e\u73b0\u4e86\u6bd4\u8f83\u57fa\u7840\u7684\u90e8\u5206\uff0c\u51fd\u6570\u5982\u4e0b\uff1a void FastBA(const std::vector<Correspondence> &correspondences, geometry::SE3List &poses, int max_iteration =5); BundleAdjutment \u4f20\u7edf\u7684BundleAdjustment\uff08BA\uff09\u9664\u4e86\u4f18\u5316\u4f4d\u59ff\uff0c\u8fd8\u4f1a\u4f18\u5316\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u4e09\u7ef4\u70b9\u5750\u6807\uff0c\u540c\u65f6\u4f18\u5316\u76ee\u6807\u662f\u4e8c\u7ef4\u7684\u91cd\u6295\u5f71\u8bef\u5dee\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u4f20\u7edfBA\u7684\u8f93\u5165\u662f\u4e16\u754c\u5750\u6807\u7cfb\u4e0b3d\u70b9\uff0c\u76f8\u673a\u4f4d\u59ff\uff0c3D\u70b9\u5728\u5404\u4e2a\u76f8\u673a\u4f4d\u59ff\u4e0b\u7684\u6295\u5f712D\u5750\u6807\u3002\u76ee\u6807\u51fd\u6570\u4e3a\uff1a \\[ E(T, p) = \\sum_i^{N_f}\\sum_{j}^{N_p}\\Vert u_{i,j} - \\omega(T_i^{-1} p_j) \\Vert, \\] \\(N_f\\) \u662f\u76f8\u673a\u4f4d\u59ff\uff08frame\uff09\u7684\u6570\u91cf\uff0c \\(N_p\\) \u662f\u4e16\u754c\u5750\u6807\u70b9\u7684\u6570\u91cf\uff0c\u800c \\(u_{i,j}\\) \u662f\u5b9e\u9645\u6295\u5f71\u7684\u4f4d\u7f6e\uff08\u7279\u5f81\u5339\u914d\u65f6\u5019\u7684uv\u5750\u6807\uff09\uff0c\u800c \\(\\omega\\) \u662f\u8ba1\u7b97\u6295\u5f71\u7684\u51fd\u6570\uff0c\u5c06\u4e16\u754c\u70b9\u6839\u636e\u76f8\u673a\u4f4d\u59ff\u91cd\u65b0\u6295\u5f71\u5f97\u5230\u7684\u5750\u6807\u3002 \u5bf9\u4e8e\u8fd9\u79cd\u4f18\u5316\uff0c\u9664\u4e86\u4f18\u5316\u76f8\u673a\u4f4d\u59ff\uff0c\u8fd8\u6709\u4f18\u5316\u4e86\u4e16\u754c\u4e0b\u70b9\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e5f\u5c31\u4f18\u5316\u4e86\u6295\u5f71\u8fc7\u7a0b\u4e2d\u7684\u566a\u58f0\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u4e16\u754c\u70b9\u7684\u6570\u91cf\u5f80\u5f80\u975e\u5e38\u591a\uff0c\u4f7f\u5f97\u6700\u540e\u4f18\u5316\u77e9\u9635\u7ef4\u5ea6\u4e0a\u4e07\u751a\u81f3\u767e\u4e07\u3002\u56e0\u6b64\u5230\u4e86\u540e\u9762\u5b83\u7684\u4f18\u5316\u901f\u5ea6\u53d8\u5f97\u5f88\u6162\u3002\u4f46\u662fBA\u662f\u5f88\u7ecf\u5178\u7684\u65b9\u6cd5\uff0c\u65e9\u5728SLAM\u51fa\u73b0\u4e4b\u524d\u5c31\u63d0\u51fa\u4e86\uff0c\u4e5f\u6709\u5f88\u591a\u5b83\u7684\u53d8\u79cd\uff0c\u52a0\u901f\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u53ea\u662f\u7528\u6765\u4e86\u89e3\u4e00\u4e0b\u6700\u57fa\u672c\u7684BA\u7f62\u4e86\u3002 void BundleAdjustment(geometry::Point3List &world_points, std::vector<ProjectedPointsOnFrame> &projected_points, geometry::SE3List &poses, const camera::PinholeCamera &camera, int max_iteration = 20); \u5728\u5b9e\u73b0FastBA\u65f6\uff0cFCLib\u4f7f\u7528\u9ad8\u65af\u725b\u987f\u4f18\u5316\u6cd5\uff0c\u800cBA\u4e00\u5b9a\u8981\u4f7f\u7528\u5217\u6587\u4f2f\u683c-\u9a6c\u5938\u5c14\u7279\u7b97\u6cd5\uff0c\u56e0\u4e3a\u5f88\u5bb9\u6613\u51fa\u73b0\u5947\u5f02\u77e9\u9635\uff0c\u5bfc\u81f4\u9ad8\u65af\u725b\u987f\u53d8\u5f97\u5f88\u8106\u5f31\uff0c\u4f7f\u5f97\u7ed3\u679c\u65e0\u6cd5\u6536\u655b\u3002\u5bf9\u4e8eBA\u7684\u8be6\u7ec6\u63a8\u5bfc\uff0c\u53ef\u4ee5\u770b related_paper/BARevisited.pdf \u3002 \u4e0b\u9762\u662fBA\u7684\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50\uff0c\u53ea\u6709\u4e24\u4e2aframe\uff0c\u4f46\u662f\u53ef\u4ee5\u5f88\u660e\u663e\u770b\u5230\u91cd\u6295\u5f71\u8bef\u5dee\u7684\u51cf\u5c11(\u8fd0\u884cexample/BATest.cpp\u53ef\u4ee5\u5f97\u5230)\uff1a","title":"\u4f18\u5316"},{"location":"modules/optimization/#_1","text":"\u5728 \u56de\u73af\u68c0\u6d4b \u4e2d\u63d0\u5230\u4e86\uff0ctracking\u4e00\u5b9a\u4f1a\u6709\u7d2f\u79ef\u8bef\u5dee\uff0c\u9700\u8981\u95ed\u73af\u68c0\u6d4b\u63d0\u4f9b\u7ea6\u675f\u6765\u4f18\u5316\u6d88\u9664\u8bef\u5dee\uff0c\u4f18\u5316\u4e5f\u5c31\u662f\u8fd9\u90e8\u5206\u7684\u5185\u5bb9\u3002 \u540e\u7aef\u4f18\u5316\u4e00\u822c\u4f1a\u7528\u4e00\u4e2a\u4f18\u5316\u5668\uff0cg2o\uff0cceres\u90fd\u662f\u5f88\u4e0d\u9519\u7684\uff0c\u53ef\u60dc\u7684\u662f\u4f5c\u8005\u53ea\u4f1aEigen\u3002\u5f53\u7136\uff0c\u5bf9\u4e8e\u4f18\u5316\u90e8\u5206\u81ea\u5df1\u7528Eigen\u5b9e\u73b0\uff0c\u5e94\u8be5\u4f1a\u66f4\u6709\u52a9\u4e8e\u5b66\u4e60\u5427\u3002FCLib\u5b9e\u73b0\u4e86\u4e24\u79cd\u540e\u7aef\u4f18\u5316\u65b9\u5f0f\uff1aFast BundleAdjustment\u4e0eBundleAdjustment\u3002","title":"\u4f18\u5316"},{"location":"modules/optimization/#fast-bundleadjustment","text":"\u4ecb\u7ecd\u4e4b\u524d\uff0c\u5148\u4ecb\u7ecd\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff1a Correspondence : class Correspondence { public: int source_id = -1; int target_id = -1; float average_disparity = 1e6; geometry::PointCorrespondenceSet correspondence_set; }; \u4e00\u4e2aFrame Correspondence\u610f\u601d\u662f\u4e00\u5bf9\u5339\u914d\u7684frame\uff0c\u5176\u4e2dsource id\u662fsource frame\u5728\u4f18\u5316\u53d8\u91cf\u4e2d\u7684id\uff0ctarget id\u662ftarget frame\u5728\u4f18\u5316\u53d8\u91cf\u4e2d\u7684id\u3002\u800c average_disparity \u7528\u6765\u8861\u91cf\u8fd9\u4e9b\u914d\u5bf9\u70b9\u57282\u7ef4\u56fe\u7247\u4e0a\u7684\u4f4d\u79fb\uff0c\u4e3b\u8981\u662f\u6839\u636e\u8fd9\u4e2a\u4f4d\u79fb\u6765\u5224\u65ad\u662f\u5426\u5e94\u8be5\u5f00\u59cb\u4e00\u4e2a\u65b0\u7684\u5173\u952e\u5e27\u3002 geometry::PointCorrespondenceSet \u662f\u8fd9\u4e00\u5bf9\u5339\u914d\u7684frame\u5305\u542b\u7684\u5339\u914d\u70b9\u7684\u96c6\u5408\u3002 Fast BundleAdjustment\uff08FBA\uff09\u6bd4\u4f20\u7edf\u7684BundleAdjustment\u66f4\u5feb\u3002\u5b9e\u9645\u4e0aFBA\u662f\u5728FCLib\u4e2d\u7684\u53eb\u6cd5\uff0c\u5e76\u6ca1\u6709\u4e00\u4e2a\u5f88\u6807\u51c6\u7684\u540d\u5b57\u3002\u5b83\u548cBundleAdjustment\u7684\u533a\u522b\u5728\u4e8e\u4f18\u5316\u53d8\u91cf\u4e0e\u76ee\u6807\u51fd\u6570\u3002FBA\u53ea\u4f18\u5316\u76f8\u673a\u4f4d\u59ff\uff0c\u4f18\u5316\u76ee\u6807\u51fd\u6570\u4e3a\uff1a \\[ E(T) = \\sum_{i}^{\\vert\\Omega\\vert}\\sum_{j}^{\\vert C_{i}\\vert}\\Vert T_sp_{s(j)} - T_tp_{t(j)} \\Vert^2 \\] \\(\\Omega\\) \u4e3a\u6240\u6709\u7684frame correspondences\uff0c \\(C_{i}\\) \u6307\u7684\u662f\u7b2c \\(i\\) \u4e2aframe correspondence\uff0c\u7531\u591a\u4e2apoint correspondence\u7ec4\u6210\u3002 \\(T_s, T_t\\) \u5206\u522b\u4ee3\u8868\u4e86frame correspondence\u4e2d\u7684source frame\u7684\u4f4d\u59ff\u4e0etarget frame\u7684\u4f4d\u59ff\uff0c\u800c \\(p_{s(j)}\\) \u8868\u793a\u7b2c \\(j\\) \u4e2apoint correspondence\u4e2d\u7684source point\u3002\u5bf9\u4e8e\u8fd9\u90e8\u5206\u7684\u4f18\u5316\uff0c\u53ef\u4ee5\u53c2\u8003\u6587\u7ae0 fastgo \uff0c\u4e5f\u5c31\u662f related_paper/fastgo.pdf \u3002\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\u8fd8\u5305\u542b\u4e86\u6709\u66f4\u591a\u7684\u4f18\u5316\u6280\u5de7\uff0c\u63d0\u9ad8\u7cfb\u7edf\u6548\u7387\uff0c\u800cFCLib\u53ea\u5b9e\u73b0\u4e86\u6bd4\u8f83\u57fa\u7840\u7684\u90e8\u5206\uff0c\u51fd\u6570\u5982\u4e0b\uff1a void FastBA(const std::vector<Correspondence> &correspondences, geometry::SE3List &poses, int max_iteration =5);","title":"Fast BundleAdjustment"},{"location":"modules/optimization/#bundleadjutment","text":"\u4f20\u7edf\u7684BundleAdjustment\uff08BA\uff09\u9664\u4e86\u4f18\u5316\u4f4d\u59ff\uff0c\u8fd8\u4f1a\u4f18\u5316\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u4e09\u7ef4\u70b9\u5750\u6807\uff0c\u540c\u65f6\u4f18\u5316\u76ee\u6807\u662f\u4e8c\u7ef4\u7684\u91cd\u6295\u5f71\u8bef\u5dee\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u4f20\u7edfBA\u7684\u8f93\u5165\u662f\u4e16\u754c\u5750\u6807\u7cfb\u4e0b3d\u70b9\uff0c\u76f8\u673a\u4f4d\u59ff\uff0c3D\u70b9\u5728\u5404\u4e2a\u76f8\u673a\u4f4d\u59ff\u4e0b\u7684\u6295\u5f712D\u5750\u6807\u3002\u76ee\u6807\u51fd\u6570\u4e3a\uff1a \\[ E(T, p) = \\sum_i^{N_f}\\sum_{j}^{N_p}\\Vert u_{i,j} - \\omega(T_i^{-1} p_j) \\Vert, \\] \\(N_f\\) \u662f\u76f8\u673a\u4f4d\u59ff\uff08frame\uff09\u7684\u6570\u91cf\uff0c \\(N_p\\) \u662f\u4e16\u754c\u5750\u6807\u70b9\u7684\u6570\u91cf\uff0c\u800c \\(u_{i,j}\\) \u662f\u5b9e\u9645\u6295\u5f71\u7684\u4f4d\u7f6e\uff08\u7279\u5f81\u5339\u914d\u65f6\u5019\u7684uv\u5750\u6807\uff09\uff0c\u800c \\(\\omega\\) \u662f\u8ba1\u7b97\u6295\u5f71\u7684\u51fd\u6570\uff0c\u5c06\u4e16\u754c\u70b9\u6839\u636e\u76f8\u673a\u4f4d\u59ff\u91cd\u65b0\u6295\u5f71\u5f97\u5230\u7684\u5750\u6807\u3002 \u5bf9\u4e8e\u8fd9\u79cd\u4f18\u5316\uff0c\u9664\u4e86\u4f18\u5316\u76f8\u673a\u4f4d\u59ff\uff0c\u8fd8\u6709\u4f18\u5316\u4e86\u4e16\u754c\u4e0b\u70b9\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e5f\u5c31\u4f18\u5316\u4e86\u6295\u5f71\u8fc7\u7a0b\u4e2d\u7684\u566a\u58f0\u3002\u4f46\u662f\uff0c\u7531\u4e8e\u4e16\u754c\u70b9\u7684\u6570\u91cf\u5f80\u5f80\u975e\u5e38\u591a\uff0c\u4f7f\u5f97\u6700\u540e\u4f18\u5316\u77e9\u9635\u7ef4\u5ea6\u4e0a\u4e07\u751a\u81f3\u767e\u4e07\u3002\u56e0\u6b64\u5230\u4e86\u540e\u9762\u5b83\u7684\u4f18\u5316\u901f\u5ea6\u53d8\u5f97\u5f88\u6162\u3002\u4f46\u662fBA\u662f\u5f88\u7ecf\u5178\u7684\u65b9\u6cd5\uff0c\u65e9\u5728SLAM\u51fa\u73b0\u4e4b\u524d\u5c31\u63d0\u51fa\u4e86\uff0c\u4e5f\u6709\u5f88\u591a\u5b83\u7684\u53d8\u79cd\uff0c\u52a0\u901f\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u53ea\u662f\u7528\u6765\u4e86\u89e3\u4e00\u4e0b\u6700\u57fa\u672c\u7684BA\u7f62\u4e86\u3002 void BundleAdjustment(geometry::Point3List &world_points, std::vector<ProjectedPointsOnFrame> &projected_points, geometry::SE3List &poses, const camera::PinholeCamera &camera, int max_iteration = 20); \u5728\u5b9e\u73b0FastBA\u65f6\uff0cFCLib\u4f7f\u7528\u9ad8\u65af\u725b\u987f\u4f18\u5316\u6cd5\uff0c\u800cBA\u4e00\u5b9a\u8981\u4f7f\u7528\u5217\u6587\u4f2f\u683c-\u9a6c\u5938\u5c14\u7279\u7b97\u6cd5\uff0c\u56e0\u4e3a\u5f88\u5bb9\u6613\u51fa\u73b0\u5947\u5f02\u77e9\u9635\uff0c\u5bfc\u81f4\u9ad8\u65af\u725b\u987f\u53d8\u5f97\u5f88\u8106\u5f31\uff0c\u4f7f\u5f97\u7ed3\u679c\u65e0\u6cd5\u6536\u655b\u3002\u5bf9\u4e8eBA\u7684\u8be6\u7ec6\u63a8\u5bfc\uff0c\u53ef\u4ee5\u770b related_paper/BARevisited.pdf \u3002 \u4e0b\u9762\u662fBA\u7684\u4e00\u4e2a\u7b80\u5355\u4f8b\u5b50\uff0c\u53ea\u6709\u4e24\u4e2aframe\uff0c\u4f46\u662f\u53ef\u4ee5\u5f88\u660e\u663e\u770b\u5230\u91cd\u6295\u5f71\u8bef\u5dee\u7684\u51cf\u5c11(\u8fd0\u884cexample/BATest.cpp\u53ef\u4ee5\u5f97\u5230)\uff1a","title":"BundleAdjutment"},{"location":"modules/registration/","text":"\u70b9\u4e91\u6ce8\u518c \u70b9\u4e91\u6ce8\u518c\u7684\u4efb\u52a1\u548c\u89c6\u89c9\u91cc\u7a0b\u8ba1\u5f88\u50cf\uff0c\u53ea\u4e0d\u8fc7\u89c6\u89c9\u91cc\u7a0b\u8ba1\u7684\u8f93\u5165\u662f\u4e00\u5bf9Frame\uff0c\u800c\u70b9\u4e91\u6ce8\u518c\u7684\u8f93\u5165\u662f\u4e24\u4e2a\u70b9\u4e91\uff0c\u6ca1\u6709\u522b\u7684\u5047\u8bbe\uff0c\u4e5f\u5c31\u6ca1\u6cd5\u5229\u7528\u91cd\u6295\u5f71\u5230\u4e8c\u7ef4\u56fe\u7247\u8fd9\u6837\u7684\u64cd\u4f5c\u4e86\u3002\u4e00\u822c\u6765\u8bf4\u7528\u6765\u6ce8\u518c\u7684\u70b9\u4e91\u7684\u89c4\u6a21\u6bd4Frame\u8981\u66f4\u5927\uff0c\u53ef\u4ee5\u662f\u51e0\u5341\u4e2a\u5e27\u63d0\u53d6\u7684model\uff0c\u751a\u81f3\u662f\u4e24\u4e2a\u623f\u95f4\u7684model\u3002 \u5bf9\u4e8e\u70b9\u4e91\u6ce8\u518c\uff0c\u548c\u89c6\u89c9\u91cc\u7a0b\u8ba1\u7684Sparse\u548cDense\u7c7b\u4f3c\uff0c\u4e5f\u6709\u4e24\u79cd\uff1a\u57fa\u4e8e\u7279\u5f81\u4e0e\u4e0d\u57fa\u4e8e\u7279\u5f81\u3002\u57fa\u4e8e\u7279\u5f81\u5339\u914d\u7684\uff0c\u4e00\u822c\u79f0\u4e3aGlobal Registration\uff0c\u4e0d\u9700\u8981\u6709\u521d\u59cb\u4f4d\u59ff\u4f30\u8ba1\uff0c\u4e5f\u53eb\u7c97\u5339\u914d\uff0c\u800c\u540e\u8005\u7684\u6bd4\u8f83\u7ecf\u5178\u7684\u7b97\u6cd5\u5c31\u662fICP\u4e86\uff0c\u4e5f\u53eb\u7cbe\u7ec6\u5339\u914d\u3002 Global Registration Global Registration\u4e0d\u9700\u8981\u521d\u59cb\u4f4d\u59ff\uff0c\u57fa\u672c\u6b65\u9aa4\u4e3a\uff1a - \u63d0\u53d63D\u7279\u5f81 - \u7279\u5f81\u5339\u914d - outlier\u8fc7\u6ee4 - \u8ba1\u7b97\u53d8\u6362\u77e9\u9635 \u5b9e\u9645\u4e0a\u548cSparseTracking\u662f\u4e00\u6837\u7684\u3002\u51fd\u6570\u539f\u578b\u4e3a\uff1a std::shared_ptr<RANSACRegistrationResult> RansacRegistration(const geometry::PointCloud &source_pcd, const geometry::PointCloud &target_pcd, const RANSACParameter &r_para = RANSACParameter()); std::shared_ptr<RANSACRegistrationResult> RansacRegistration(const geometry::PointCloud &source_feature_pcd, const geometry::PointCloud &target_feature_pcd, const FeatureSet & source_features, const FeatureSet & target_features, const RANSACParameter &r_para); \u4e0a\u9762\u4e24\u4e2a\u51fd\u6570\u7684\u533a\u522b\u5728\u4e8e\u7b2c\u4e00\u4e2a\u662f\u76f4\u63a5\u5bf9\u4e24\u4e2a\u70b9\u4e91\u8fdb\u884c\u6ce8\u518c\uff0c\u7b2c\u4e8c\u4e2a\u662f\u5bf9\u7279\u5f81\u70b9\u8fdb\u884c\u6ce8\u518c\uff0c\u4e5f\u5c31\u662f\u8df3\u8fc7\u4e86\u63d0\u53d63D\u7279\u5f81\u8fd9\u4e00\u6b65\u3002\u5728\u6784\u5efa\u4e00\u4e2a\u7cfb\u7edf\u65f6\u5019\uff0c\u4fdd\u5b583D\u7279\u5f81\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff0c\u63d0\u9ad8\u6548\u7387\u3002 \u63d0\u53d63D\u7279\u5f81\u7684\u5e93\u4e00\u822c\u5728PCL\u6216\u8005Open3D\u8fd9\u79cd\u5e93\u4e2d\u6709\u5b9e\u73b0\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u5e93\u592a\u5927\uff0cOpenCV\u6ca1\u6709\u5b9e\u73b03D\u7279\u5f81\u7684\u63d0\u53d6\uff0c\u6240\u4ee5FCLib\u5b9e\u73b0\u4e86\u8fd9\u4e00\u90e8\u5206\uff0c\u63d0\u53d6FPFH\u7279\u5f81\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u51fd\u6570\u8ba1\u7b97\u5f97\u5230\uff1a std::tuple<geometry::PointCloud, FeatureSet> DownSampleAndExtractFeature(const geometry::PointCloud &pcd, const RANSACParameter &r_para = RANSACParameter()); \u4e0a\u9762\u51fd\u6570\u8f93\u5165\u4e3a\u70b9\u4e91\u4ee5\u53ca\u76f8\u5173\u53c2\u6570\uff0c\u8fd4\u56de\u63d0\u53d6\u5230\u7684\u7279\u5f81\u70b9\u4f4d\u7f6e\u4ee5\u53ca\u7279\u5f81\uff0833\u7ef4\u5411\u91cf\uff09\u3002\u5728match\u65f6\u5019\uff0c\u53ea\u8981\u8fdb\u884cknnsearch\uff0c\u641c\u7d22\u6700\u8fd1\u70b9\u5f97\u5230\u5339\u914d\u7ed3\u679c\u3002outlier\u7684\u8fc7\u6ee4\u4e0e SparseTracking \u4e2d\u539f\u7406\u5f88\u76f8\u4f3c\uff0c\u5728\u8fd9\u91cc\u5c31\u4e0d\u591a\u4ecb\u7ecd\u4e86\u3002\u6700\u540e\u901a\u8fc7 RANSAC \u6765\u8ba1\u7b97\u5f97\u5230\u53d8\u6362\u77e9\u9635\u4ee5\u53cainliers\u3002 ICP ICP(iterative closest point)\u662f\u5f88\u7ecf\u5178\u7684\u7b97\u6cd5\uff0c\u53d8\u79cd\u5f88\u591a\uff0cFCLib\u5b9e\u73b0\u4e86ICP\u6bd4\u8f83\u57fa\u7840\u7684\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u70b9\u5bf9\u70b9\uff08PointToPoint\uff09\uff0c\u4e00\u79cd\u662f\u70b9\u5bf9\u9762\uff08PointToPlane\uff09\u3002 PointToPoint \u4f18\u5316\u70b9\u5230\u70b9\u7684\u8ddd\u79bb\uff0c\u4f18\u5316\u7684\u76ee\u6807\u51fd\u6570\u4e3a\uff1a \\(\\Vert T \\cdot p_s - p_t\\Vert^2\\) \u3002\u6839\u636eOpenCV\u7684KDtree\u627e\u5230\u6700\u8fd1\u70b9\uff0c\u53ef\u901a\u8fc7 geometry::EstimateRigidTransformation \u51fd\u6570\u76f4\u63a5\u6c42\u5f97\u6700\u4f18\u7684 \\(T\\) \uff08\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6c42\u96c5\u53ef\u6bd4\u77e9\u9635\u4f18\u5316\uff09\uff0c\u63a5\u7740\u6839\u636e\u65b0\u7684 \\(T\\) \u91cd\u65b0\u5bfb\u627e\u6700\u8fd1\u70b9\uff0c\u4e0d\u65ad\u8fed\u4ee3\u5230\u6536\u655b\u3002 PointToPlane \u4f18\u5316\u70b9\u5230\u9762\u7684\u8ddd\u79bb\uff0c\u9700\u8981\u77e5\u9053target\u70b9\u4e91\u7684\u6cd5\u5411\u91cf\u3002\u7ecf\u8fc7 \\(p_t\\) \u7684\uff0c\u6cd5\u5411\u91cf\u4e3a \\(n_t\\) \u7684\u5e73\u9762\u65b9\u7a0b\u4e3a\uff1a \\[ n_t^T (\\cdot p - p_t) = 0, \\] \\(n_t^T (\\cdot p - p_t)\\) \u4e3a\u70b9\u5230\u8be5\u5e73\u9762\u7684\u8ddd\u79bb\uff0c\u56e0\u6b64\u4f18\u5316\u7684\u76ee\u6807\u51fd\u6570\u4e3a\uff1a \\(\\Vert n_t^T\\cdot(T\\cdot p_s - p_t)\\Vert^2\\) \u3002\u5bf9\u4e8e\u8fd9\u4e2acost function\u7684\u7ebf\u6027\u5316\uff0c\u53ef\u4ee5\u67e5\u770b related_paper/lowk_point-to-plane_icp_techrep.pdf \u3002\u901a\u8fc7\u96c5\u53ef\u6bd4\u77e9\u9635\u4f18\u5316\u5f97\u5230\u65b0\u7684 \\(T\\) \uff0c\u63a5\u7740\u6839\u636e\u65b0\u7684 \\(T\\) \u91cd\u65b0\u5bfb\u627e\u6700\u8fd1\u70b9\uff0c\u4e0d\u65ad\u8fed\u4ee3\u5230\u6536\u655b\u3002 \u5b9e\u9a8c\u548c\u7406\u8bba\u5206\u6790\u90fd\u8bc1\u660e\u4e86\uff0cPointToPlane\u6bd4PointToPoint\u6709\u66f4\u5feb\u7684\u6536\u655b\u901f\u5ea6\u3002\u8c03\u7528\u65b9\u6cd5\u4e3a\uff1a std::shared_ptr<ICPRegistrationResult> PointToPoint(const geometry::PointCloud &source, const geometry::PointCloud &target, const geometry::TransformationMatrix &init_T = geometry::TransformationMatrix::Identity(), const ICPParameter &icp_para = ICPParameter() ); std::shared_ptr<ICPRegistrationResult> PointToPlane(const geometry::PointCloud &source, const geometry::PointCloud &target, const geometry::TransformationMatrix &init_T = geometry::TransformationMatrix::Identity(), const ICPParameter &icp_para = ICPParameter() ); \u5176\u4e2d icp_para \u662f\u76f8\u5173\u53c2\u6570\uff0c\u76f4\u63a5\u4f7f\u7528\u9ed8\u8ba4\u7684\u5c31\u662f\u5f88\u597d\u7684\u9009\u62e9\u3002\u6709\u4e24\u4e2a\u7c7bRegistrationResult\u7c7b\u5305\u542b\u4e86: class RegistrationResult { public: //\u76f8\u5bf9\u53d8\u6362 geometry::TransformationMatrix T; //\u5339\u914d\u70b9ID geometry::FMatchSet correspondence_set_index; //\u5339\u914d\u70b9 geometry::PointCorrespondenceSet correspondence_set; //rmse double rmse; }; \u5728\u8fd9\u91cc\uff0c\u662f\u5426\u5339\u914d\u6210\u529f\u4ea4\u7ed9\u4f7f\u7528\u8005\u6765\u5224\u65ad\u3002","title":"\u70b9\u4e91\u6ce8\u518c"},{"location":"modules/registration/#_1","text":"\u70b9\u4e91\u6ce8\u518c\u7684\u4efb\u52a1\u548c\u89c6\u89c9\u91cc\u7a0b\u8ba1\u5f88\u50cf\uff0c\u53ea\u4e0d\u8fc7\u89c6\u89c9\u91cc\u7a0b\u8ba1\u7684\u8f93\u5165\u662f\u4e00\u5bf9Frame\uff0c\u800c\u70b9\u4e91\u6ce8\u518c\u7684\u8f93\u5165\u662f\u4e24\u4e2a\u70b9\u4e91\uff0c\u6ca1\u6709\u522b\u7684\u5047\u8bbe\uff0c\u4e5f\u5c31\u6ca1\u6cd5\u5229\u7528\u91cd\u6295\u5f71\u5230\u4e8c\u7ef4\u56fe\u7247\u8fd9\u6837\u7684\u64cd\u4f5c\u4e86\u3002\u4e00\u822c\u6765\u8bf4\u7528\u6765\u6ce8\u518c\u7684\u70b9\u4e91\u7684\u89c4\u6a21\u6bd4Frame\u8981\u66f4\u5927\uff0c\u53ef\u4ee5\u662f\u51e0\u5341\u4e2a\u5e27\u63d0\u53d6\u7684model\uff0c\u751a\u81f3\u662f\u4e24\u4e2a\u623f\u95f4\u7684model\u3002 \u5bf9\u4e8e\u70b9\u4e91\u6ce8\u518c\uff0c\u548c\u89c6\u89c9\u91cc\u7a0b\u8ba1\u7684Sparse\u548cDense\u7c7b\u4f3c\uff0c\u4e5f\u6709\u4e24\u79cd\uff1a\u57fa\u4e8e\u7279\u5f81\u4e0e\u4e0d\u57fa\u4e8e\u7279\u5f81\u3002\u57fa\u4e8e\u7279\u5f81\u5339\u914d\u7684\uff0c\u4e00\u822c\u79f0\u4e3aGlobal Registration\uff0c\u4e0d\u9700\u8981\u6709\u521d\u59cb\u4f4d\u59ff\u4f30\u8ba1\uff0c\u4e5f\u53eb\u7c97\u5339\u914d\uff0c\u800c\u540e\u8005\u7684\u6bd4\u8f83\u7ecf\u5178\u7684\u7b97\u6cd5\u5c31\u662fICP\u4e86\uff0c\u4e5f\u53eb\u7cbe\u7ec6\u5339\u914d\u3002","title":"\u70b9\u4e91\u6ce8\u518c"},{"location":"modules/registration/#global-registration","text":"Global Registration\u4e0d\u9700\u8981\u521d\u59cb\u4f4d\u59ff\uff0c\u57fa\u672c\u6b65\u9aa4\u4e3a\uff1a - \u63d0\u53d63D\u7279\u5f81 - \u7279\u5f81\u5339\u914d - outlier\u8fc7\u6ee4 - \u8ba1\u7b97\u53d8\u6362\u77e9\u9635 \u5b9e\u9645\u4e0a\u548cSparseTracking\u662f\u4e00\u6837\u7684\u3002\u51fd\u6570\u539f\u578b\u4e3a\uff1a std::shared_ptr<RANSACRegistrationResult> RansacRegistration(const geometry::PointCloud &source_pcd, const geometry::PointCloud &target_pcd, const RANSACParameter &r_para = RANSACParameter()); std::shared_ptr<RANSACRegistrationResult> RansacRegistration(const geometry::PointCloud &source_feature_pcd, const geometry::PointCloud &target_feature_pcd, const FeatureSet & source_features, const FeatureSet & target_features, const RANSACParameter &r_para); \u4e0a\u9762\u4e24\u4e2a\u51fd\u6570\u7684\u533a\u522b\u5728\u4e8e\u7b2c\u4e00\u4e2a\u662f\u76f4\u63a5\u5bf9\u4e24\u4e2a\u70b9\u4e91\u8fdb\u884c\u6ce8\u518c\uff0c\u7b2c\u4e8c\u4e2a\u662f\u5bf9\u7279\u5f81\u70b9\u8fdb\u884c\u6ce8\u518c\uff0c\u4e5f\u5c31\u662f\u8df3\u8fc7\u4e86\u63d0\u53d63D\u7279\u5f81\u8fd9\u4e00\u6b65\u3002\u5728\u6784\u5efa\u4e00\u4e2a\u7cfb\u7edf\u65f6\u5019\uff0c\u4fdd\u5b583D\u7279\u5f81\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u8ba1\u7b97\uff0c\u63d0\u9ad8\u6548\u7387\u3002 \u63d0\u53d63D\u7279\u5f81\u7684\u5e93\u4e00\u822c\u5728PCL\u6216\u8005Open3D\u8fd9\u79cd\u5e93\u4e2d\u6709\u5b9e\u73b0\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u5e93\u592a\u5927\uff0cOpenCV\u6ca1\u6709\u5b9e\u73b03D\u7279\u5f81\u7684\u63d0\u53d6\uff0c\u6240\u4ee5FCLib\u5b9e\u73b0\u4e86\u8fd9\u4e00\u90e8\u5206\uff0c\u63d0\u53d6FPFH\u7279\u5f81\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u51fd\u6570\u8ba1\u7b97\u5f97\u5230\uff1a std::tuple<geometry::PointCloud, FeatureSet> DownSampleAndExtractFeature(const geometry::PointCloud &pcd, const RANSACParameter &r_para = RANSACParameter()); \u4e0a\u9762\u51fd\u6570\u8f93\u5165\u4e3a\u70b9\u4e91\u4ee5\u53ca\u76f8\u5173\u53c2\u6570\uff0c\u8fd4\u56de\u63d0\u53d6\u5230\u7684\u7279\u5f81\u70b9\u4f4d\u7f6e\u4ee5\u53ca\u7279\u5f81\uff0833\u7ef4\u5411\u91cf\uff09\u3002\u5728match\u65f6\u5019\uff0c\u53ea\u8981\u8fdb\u884cknnsearch\uff0c\u641c\u7d22\u6700\u8fd1\u70b9\u5f97\u5230\u5339\u914d\u7ed3\u679c\u3002outlier\u7684\u8fc7\u6ee4\u4e0e SparseTracking \u4e2d\u539f\u7406\u5f88\u76f8\u4f3c\uff0c\u5728\u8fd9\u91cc\u5c31\u4e0d\u591a\u4ecb\u7ecd\u4e86\u3002\u6700\u540e\u901a\u8fc7 RANSAC \u6765\u8ba1\u7b97\u5f97\u5230\u53d8\u6362\u77e9\u9635\u4ee5\u53cainliers\u3002","title":"Global Registration"},{"location":"modules/registration/#icp","text":"ICP(iterative closest point)\u662f\u5f88\u7ecf\u5178\u7684\u7b97\u6cd5\uff0c\u53d8\u79cd\u5f88\u591a\uff0cFCLib\u5b9e\u73b0\u4e86ICP\u6bd4\u8f83\u57fa\u7840\u7684\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u70b9\u5bf9\u70b9\uff08PointToPoint\uff09\uff0c\u4e00\u79cd\u662f\u70b9\u5bf9\u9762\uff08PointToPlane\uff09\u3002","title":"ICP"},{"location":"modules/registration/#pointtopoint","text":"\u4f18\u5316\u70b9\u5230\u70b9\u7684\u8ddd\u79bb\uff0c\u4f18\u5316\u7684\u76ee\u6807\u51fd\u6570\u4e3a\uff1a \\(\\Vert T \\cdot p_s - p_t\\Vert^2\\) \u3002\u6839\u636eOpenCV\u7684KDtree\u627e\u5230\u6700\u8fd1\u70b9\uff0c\u53ef\u901a\u8fc7 geometry::EstimateRigidTransformation \u51fd\u6570\u76f4\u63a5\u6c42\u5f97\u6700\u4f18\u7684 \\(T\\) \uff08\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6c42\u96c5\u53ef\u6bd4\u77e9\u9635\u4f18\u5316\uff09\uff0c\u63a5\u7740\u6839\u636e\u65b0\u7684 \\(T\\) \u91cd\u65b0\u5bfb\u627e\u6700\u8fd1\u70b9\uff0c\u4e0d\u65ad\u8fed\u4ee3\u5230\u6536\u655b\u3002","title":"PointToPoint"},{"location":"modules/registration/#pointtoplane","text":"\u4f18\u5316\u70b9\u5230\u9762\u7684\u8ddd\u79bb\uff0c\u9700\u8981\u77e5\u9053target\u70b9\u4e91\u7684\u6cd5\u5411\u91cf\u3002\u7ecf\u8fc7 \\(p_t\\) \u7684\uff0c\u6cd5\u5411\u91cf\u4e3a \\(n_t\\) \u7684\u5e73\u9762\u65b9\u7a0b\u4e3a\uff1a \\[ n_t^T (\\cdot p - p_t) = 0, \\] \\(n_t^T (\\cdot p - p_t)\\) \u4e3a\u70b9\u5230\u8be5\u5e73\u9762\u7684\u8ddd\u79bb\uff0c\u56e0\u6b64\u4f18\u5316\u7684\u76ee\u6807\u51fd\u6570\u4e3a\uff1a \\(\\Vert n_t^T\\cdot(T\\cdot p_s - p_t)\\Vert^2\\) \u3002\u5bf9\u4e8e\u8fd9\u4e2acost function\u7684\u7ebf\u6027\u5316\uff0c\u53ef\u4ee5\u67e5\u770b related_paper/lowk_point-to-plane_icp_techrep.pdf \u3002\u901a\u8fc7\u96c5\u53ef\u6bd4\u77e9\u9635\u4f18\u5316\u5f97\u5230\u65b0\u7684 \\(T\\) \uff0c\u63a5\u7740\u6839\u636e\u65b0\u7684 \\(T\\) \u91cd\u65b0\u5bfb\u627e\u6700\u8fd1\u70b9\uff0c\u4e0d\u65ad\u8fed\u4ee3\u5230\u6536\u655b\u3002 \u5b9e\u9a8c\u548c\u7406\u8bba\u5206\u6790\u90fd\u8bc1\u660e\u4e86\uff0cPointToPlane\u6bd4PointToPoint\u6709\u66f4\u5feb\u7684\u6536\u655b\u901f\u5ea6\u3002\u8c03\u7528\u65b9\u6cd5\u4e3a\uff1a std::shared_ptr<ICPRegistrationResult> PointToPoint(const geometry::PointCloud &source, const geometry::PointCloud &target, const geometry::TransformationMatrix &init_T = geometry::TransformationMatrix::Identity(), const ICPParameter &icp_para = ICPParameter() ); std::shared_ptr<ICPRegistrationResult> PointToPlane(const geometry::PointCloud &source, const geometry::PointCloud &target, const geometry::TransformationMatrix &init_T = geometry::TransformationMatrix::Identity(), const ICPParameter &icp_para = ICPParameter() ); \u5176\u4e2d icp_para \u662f\u76f8\u5173\u53c2\u6570\uff0c\u76f4\u63a5\u4f7f\u7528\u9ed8\u8ba4\u7684\u5c31\u662f\u5f88\u597d\u7684\u9009\u62e9\u3002\u6709\u4e24\u4e2a\u7c7bRegistrationResult\u7c7b\u5305\u542b\u4e86: class RegistrationResult { public: //\u76f8\u5bf9\u53d8\u6362 geometry::TransformationMatrix T; //\u5339\u914d\u70b9ID geometry::FMatchSet correspondence_set_index; //\u5339\u914d\u70b9 geometry::PointCorrespondenceSet correspondence_set; //rmse double rmse; }; \u5728\u8fd9\u91cc\uff0c\u662f\u5426\u5339\u914d\u6210\u529f\u4ea4\u7ed9\u4f7f\u7528\u8005\u6765\u5224\u65ad\u3002","title":"PointToPlane"},{"location":"modules/tool/","text":"\u5176\u4ed6\u5de5\u5177 \u5de5\u5177\u6a21\u5757\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5176\u4ed6\u6a21\u5757\u9700\u8981\u4f7f\u7528\u7684\uff0c\u6bd4\u8f83\u6742\u7684\u529f\u80fd\uff0c\u76ee\u524dtool\u4e2d\u5305\u542b\u4e86\u56fe\u7247\u7684\u57fa\u672c\u5904\u7406\uff0c\u5bf9\u4e8e\u63a7\u5236\u53f0\u989c\u8272\u8f93\u51fa\u7684\u63a7\u5236\uff0cPly\u6587\u4ef6\u7684\u8bfb\u53d6\uff0c\u8ba1\u65f6\u5668\uff0c\u591a\u7ebf\u7a0b\u7b49\u7b49\u3002 ConsoleColor \u5b9a\u4e49\u4e86\u4e00\u4e9b\u5bf9\u4e8e\u63a7\u5236\u53f0\u8f93\u51fa\u989c\u8272\u7684\u63a7\u5236\u3002\u6211\u5e0c\u671bFCLib\u6574\u4e2a\u6784\u67b6\u6e05\u6670\uff0c\u8f93\u51fa\u4e5f\u5c3d\u91cf\u4f18\u96c5\u3002\u5728\u8be5\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u7ea2\u9ec4\u7eff\u7bee\u56db\u79cd\u989c\u8272\uff0c\u7ea2\u8272\u5bf9\u5e94Error\uff0c\u9ec4\u8272\u5bf9\u5e94Warning\uff0c\u800c\u7eff\u8272\u8868\u793a\u8fd0\u884c\u6210\u529f\uff0c\u84dd\u8272\u5219\u662f\u8f93\u51fa\u4e00\u4e9b\u76f8\u5173\u4fe1\u606f\uff0c\u5229\u4e8eDebug\u4e4b\u7c7b\u7684\u3002\u4f7f\u7528\u65b9\u6cd5\uff0c\u5305\u542b\u4e86ConsoleColor\u5934\u6587\u4ef6\u540e\uff0c\u8f93\u51fa\uff1a //\u8f93\u51faERROR std::cout<<RED<<\"[ERROR]::There is a error.\"<<RESET<<std::endl; \u76f8\u5e94\u7684\uff0c\u9ec4\u7eff\u84dd\u5206\u522b\u5bf9\u5e94YELLOW\uff0cGREEN\uff0cBLUE\u3002RESET\u4f1a\u4f7f\u5f97\u8f93\u51fa\u989c\u8272\u6062\u590d\u9ed8\u8ba4\u7684\u767d\u8272\u3002 ImageProcessing \u56fe\u7247\u5904\u7406\u7684\u76f8\u5173\u5185\u5bb9\uff0c\u5c01\u88c5\u4e86\u4e00\u4e9bOpenCV\u7684\u51fd\u6570\uff0c\u5305\u62ec\u9ad8\u65af\u6ee4\u6ce2\uff0csobel\u6ee4\u6ce2\uff0c\u521b\u5efa\u56fe\u50cf\u91d1\u5b57\u5854\u7b49\u7b49\u3002 RPLYManager \u4f7f\u7528RPLY\u5e93\u6765\u8fdb\u884cPLY\u7684\u8bfb\u5199\uff0c\u53ef\u4ee5\u8bfb\u53d6\u70b9\u4e91\u4e0e\u4e09\u89d2\u7f51\u683c\uff0c geometry::PointCloud \u4ee5\u53ca geometry::TriangleMesh \u4e2dload\uff0cwrite\u64cd\u4f5c\u662f\u5bf9\u8fd9\u4e2a\u7c7b\u7684\u5c01\u88c5\u3002 OBJManager \u5bf9OBJ\u6587\u4ef6\u7684\u8bfb\u5199\uff0c\u4e0eRPLYManager\u76f8\u4f3c\u3002 MultiThreads \u4e00\u4e2a\u5bf9\u4e8e\u5faa\u73af\u7684\u591a\u7ebf\u7a0b\u5b9e\u73b0\u7684\u6a21\u677f\u51fd\u6570\u3002\u4f60\u9700\u8981\u63d0\u4f9b\u7684\u662f\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u8f93\u5165\uff0c\u4ee5\u53ca\u9700\u8981\u6539\u53d8\u7684\u8f93\u51fa\uff0c\u4ee5\u53ca\u8c03\u7528\u7684\u51fd\u6570\u3002\u53c2\u6570\u4e0e\u8fd4\u56de\uff0c\u5206\u522b\u5b58\u653e\u5728\u4e24\u4e2a std::vector \u4e2d\u3002\u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a template <class T1, class T2> void MultiThreads(const std::vector<T1> &p1, std::vector<T2> &p2, std::function<void(const T1 &, T2&)> &f); \u5bf9\u4e8e\u5177\u4f53\u7684\u4f7f\u7528\u4e5f\u5f88\u7b80\u5355\uff0c\u5c06\u8f93\u5165\u548c\u8f93\u51fa\u5206\u522b\u653e\u5230\u4e24\u4e2astd::vector\u4e2d\uff0c\u63a5\u7740\u4f7f\u7528std::function\u7ed1\u5b9a\u51fd\u6570\uff0c\u4e00\u8d77\u4f20\u5165\u4e0a\u8ff0\u51fd\u6570\u4e2d\u5373\u53ef\uff0c\u4e4b\u540e\u4ecb\u7ecd\u7684\u7f51\u683c\u751f\u6210\u4f1a\u6709\u4f7f\u7528\u7684\u4f8b\u5b50\u3002 \u8fd9\u91cc\u7684\u5b9e\u73b0\u8fd8\u662f\u592a\u7b80\u5355\u4e86\uff0c\u5c31\u610f\u5473\u7740\u53ea\u80fd\u6709\u4e00\u4e2a\u8f93\u5165\u4e00\u4e2a\u8f93\u51fa\uff0c\u662f\u4e3a\u4e86\u6ee1\u8db3\u4f5c\u8005\u9700\u8981\u7684\u67d0\u4e2a\u529f\u80fd\u4e34\u65f6\u5199\u7684\u3002 MultiThreads\u4e0d\u4f1a\u7ba1\u4f60\u7684\u5faa\u73af\u80fd\u4e0d\u80fd\u5e76\u884c\uff0c\u6240\u4ee5\u786e\u4fdd\u5faa\u73af\u53ef\u4ee5\u5e76\u884c\u52a0\u901f\u662f\u4f7f\u7528\u8005\u7684\u8d23\u4efb\u3002 TickTock TickTock\u662f\u8ba1\u65f6\u5668\uff0c\u91cc\u9762\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8ba1\u65f6\u5668\u7c7bTimer\u3002Timer\u53ef\u4ee5\u7ed9\u591a\u4e2a\u8fc7\u7a0b\u8ba1\u65f6\uff0c\u53ea\u8981\u540d\u5b57\u4e0d\u540c\u5c31\u53ef\u4ee5\u3002\u6ca1\u9519\uff0c\u4f7f\u7528Timer\u5fc5\u987b\u8981\u7ed9\u8ba1\u65f6\u7684\u8fc7\u7a0b\u5b9a\u4e49\u4e00\u4e2a\u72ec\u7279\u7684\u540d\u5b57\u3002\u4f7f\u7528\u8d77\u6765\u5f88\u7b80\u5355\uff1a tool::Timer timer; timer.TICK(\"My Process\"); // code of process timer.TOCK(\"My Process\"); timer.Log(\"My Process\"); Log\u51fd\u6570\u7528\u6765\u8f93\u51fa\u4f7f\u7528\u7684\u65f6\u95f4\uff0c\u5355\u4f4d\u662f\u6beb\u79d2\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528LogAll()\u6765\u8f93\u51fa\u6240\u6709\u7684\u7edf\u8ba1\u3002\u4f46\u662f\u5bf9\u4e8e\u53eaTick\u6bd4Tock\u5927\u7684\u60c5\u51b5\u4f1a\u8f93\u51fa\u8b66\u544a\u3002\u6240\u4ee5\u5c31\u5c3d\u91cf\u6b63\u786e\u5730\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\u5427\u3002 OpenNIReader \u5c01\u88c5\u4e86OpenNI\u8bfb\u53d6\u6df1\u5ea6\u56fe\u4e0e\u989c\u8272\u56fe\u7684\u63a5\u53e3\uff0c\u6709\u5f85\u5b8c\u5584\u3002 KeyframeBasedSlam \u57fa\u4e8e\u5173\u952e\u5e27\u7684slam\u7cfb\u7edf\u7684\u4e00\u4e2a\u57fa\u7c7b\uff0c example/BAFusion.cpp \u4ee5\u53ca example/FBAFusion.cpp \u90fd\u662f\u57fa\u4e8e\u8fd9\u4e2a\u7c7b\u7684\u3002","title":"\u5176\u4ed6\u5de5\u5177"},{"location":"modules/tool/#_1","text":"\u5de5\u5177\u6a21\u5757\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5176\u4ed6\u6a21\u5757\u9700\u8981\u4f7f\u7528\u7684\uff0c\u6bd4\u8f83\u6742\u7684\u529f\u80fd\uff0c\u76ee\u524dtool\u4e2d\u5305\u542b\u4e86\u56fe\u7247\u7684\u57fa\u672c\u5904\u7406\uff0c\u5bf9\u4e8e\u63a7\u5236\u53f0\u989c\u8272\u8f93\u51fa\u7684\u63a7\u5236\uff0cPly\u6587\u4ef6\u7684\u8bfb\u53d6\uff0c\u8ba1\u65f6\u5668\uff0c\u591a\u7ebf\u7a0b\u7b49\u7b49\u3002","title":"\u5176\u4ed6\u5de5\u5177"},{"location":"modules/tool/#consolecolor","text":"\u5b9a\u4e49\u4e86\u4e00\u4e9b\u5bf9\u4e8e\u63a7\u5236\u53f0\u8f93\u51fa\u989c\u8272\u7684\u63a7\u5236\u3002\u6211\u5e0c\u671bFCLib\u6574\u4e2a\u6784\u67b6\u6e05\u6670\uff0c\u8f93\u51fa\u4e5f\u5c3d\u91cf\u4f18\u96c5\u3002\u5728\u8be5\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u7ea2\u9ec4\u7eff\u7bee\u56db\u79cd\u989c\u8272\uff0c\u7ea2\u8272\u5bf9\u5e94Error\uff0c\u9ec4\u8272\u5bf9\u5e94Warning\uff0c\u800c\u7eff\u8272\u8868\u793a\u8fd0\u884c\u6210\u529f\uff0c\u84dd\u8272\u5219\u662f\u8f93\u51fa\u4e00\u4e9b\u76f8\u5173\u4fe1\u606f\uff0c\u5229\u4e8eDebug\u4e4b\u7c7b\u7684\u3002\u4f7f\u7528\u65b9\u6cd5\uff0c\u5305\u542b\u4e86ConsoleColor\u5934\u6587\u4ef6\u540e\uff0c\u8f93\u51fa\uff1a //\u8f93\u51faERROR std::cout<<RED<<\"[ERROR]::There is a error.\"<<RESET<<std::endl; \u76f8\u5e94\u7684\uff0c\u9ec4\u7eff\u84dd\u5206\u522b\u5bf9\u5e94YELLOW\uff0cGREEN\uff0cBLUE\u3002RESET\u4f1a\u4f7f\u5f97\u8f93\u51fa\u989c\u8272\u6062\u590d\u9ed8\u8ba4\u7684\u767d\u8272\u3002","title":"ConsoleColor"},{"location":"modules/tool/#imageprocessing","text":"\u56fe\u7247\u5904\u7406\u7684\u76f8\u5173\u5185\u5bb9\uff0c\u5c01\u88c5\u4e86\u4e00\u4e9bOpenCV\u7684\u51fd\u6570\uff0c\u5305\u62ec\u9ad8\u65af\u6ee4\u6ce2\uff0csobel\u6ee4\u6ce2\uff0c\u521b\u5efa\u56fe\u50cf\u91d1\u5b57\u5854\u7b49\u7b49\u3002","title":"ImageProcessing"},{"location":"modules/tool/#rplymanager","text":"\u4f7f\u7528RPLY\u5e93\u6765\u8fdb\u884cPLY\u7684\u8bfb\u5199\uff0c\u53ef\u4ee5\u8bfb\u53d6\u70b9\u4e91\u4e0e\u4e09\u89d2\u7f51\u683c\uff0c geometry::PointCloud \u4ee5\u53ca geometry::TriangleMesh \u4e2dload\uff0cwrite\u64cd\u4f5c\u662f\u5bf9\u8fd9\u4e2a\u7c7b\u7684\u5c01\u88c5\u3002","title":"RPLYManager"},{"location":"modules/tool/#objmanager","text":"\u5bf9OBJ\u6587\u4ef6\u7684\u8bfb\u5199\uff0c\u4e0eRPLYManager\u76f8\u4f3c\u3002","title":"OBJManager"},{"location":"modules/tool/#multithreads","text":"\u4e00\u4e2a\u5bf9\u4e8e\u5faa\u73af\u7684\u591a\u7ebf\u7a0b\u5b9e\u73b0\u7684\u6a21\u677f\u51fd\u6570\u3002\u4f60\u9700\u8981\u63d0\u4f9b\u7684\u662f\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u8f93\u5165\uff0c\u4ee5\u53ca\u9700\u8981\u6539\u53d8\u7684\u8f93\u51fa\uff0c\u4ee5\u53ca\u8c03\u7528\u7684\u51fd\u6570\u3002\u53c2\u6570\u4e0e\u8fd4\u56de\uff0c\u5206\u522b\u5b58\u653e\u5728\u4e24\u4e2a std::vector \u4e2d\u3002\u51fd\u6570\u539f\u578b\u5982\u4e0b\uff1a template <class T1, class T2> void MultiThreads(const std::vector<T1> &p1, std::vector<T2> &p2, std::function<void(const T1 &, T2&)> &f); \u5bf9\u4e8e\u5177\u4f53\u7684\u4f7f\u7528\u4e5f\u5f88\u7b80\u5355\uff0c\u5c06\u8f93\u5165\u548c\u8f93\u51fa\u5206\u522b\u653e\u5230\u4e24\u4e2astd::vector\u4e2d\uff0c\u63a5\u7740\u4f7f\u7528std::function\u7ed1\u5b9a\u51fd\u6570\uff0c\u4e00\u8d77\u4f20\u5165\u4e0a\u8ff0\u51fd\u6570\u4e2d\u5373\u53ef\uff0c\u4e4b\u540e\u4ecb\u7ecd\u7684\u7f51\u683c\u751f\u6210\u4f1a\u6709\u4f7f\u7528\u7684\u4f8b\u5b50\u3002 \u8fd9\u91cc\u7684\u5b9e\u73b0\u8fd8\u662f\u592a\u7b80\u5355\u4e86\uff0c\u5c31\u610f\u5473\u7740\u53ea\u80fd\u6709\u4e00\u4e2a\u8f93\u5165\u4e00\u4e2a\u8f93\u51fa\uff0c\u662f\u4e3a\u4e86\u6ee1\u8db3\u4f5c\u8005\u9700\u8981\u7684\u67d0\u4e2a\u529f\u80fd\u4e34\u65f6\u5199\u7684\u3002 MultiThreads\u4e0d\u4f1a\u7ba1\u4f60\u7684\u5faa\u73af\u80fd\u4e0d\u80fd\u5e76\u884c\uff0c\u6240\u4ee5\u786e\u4fdd\u5faa\u73af\u53ef\u4ee5\u5e76\u884c\u52a0\u901f\u662f\u4f7f\u7528\u8005\u7684\u8d23\u4efb\u3002","title":"MultiThreads"},{"location":"modules/tool/#ticktock","text":"TickTock\u662f\u8ba1\u65f6\u5668\uff0c\u91cc\u9762\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8ba1\u65f6\u5668\u7c7bTimer\u3002Timer\u53ef\u4ee5\u7ed9\u591a\u4e2a\u8fc7\u7a0b\u8ba1\u65f6\uff0c\u53ea\u8981\u540d\u5b57\u4e0d\u540c\u5c31\u53ef\u4ee5\u3002\u6ca1\u9519\uff0c\u4f7f\u7528Timer\u5fc5\u987b\u8981\u7ed9\u8ba1\u65f6\u7684\u8fc7\u7a0b\u5b9a\u4e49\u4e00\u4e2a\u72ec\u7279\u7684\u540d\u5b57\u3002\u4f7f\u7528\u8d77\u6765\u5f88\u7b80\u5355\uff1a tool::Timer timer; timer.TICK(\"My Process\"); // code of process timer.TOCK(\"My Process\"); timer.Log(\"My Process\"); Log\u51fd\u6570\u7528\u6765\u8f93\u51fa\u4f7f\u7528\u7684\u65f6\u95f4\uff0c\u5355\u4f4d\u662f\u6beb\u79d2\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528LogAll()\u6765\u8f93\u51fa\u6240\u6709\u7684\u7edf\u8ba1\u3002\u4f46\u662f\u5bf9\u4e8e\u53eaTick\u6bd4Tock\u5927\u7684\u60c5\u51b5\u4f1a\u8f93\u51fa\u8b66\u544a\u3002\u6240\u4ee5\u5c31\u5c3d\u91cf\u6b63\u786e\u5730\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\u5427\u3002","title":"TickTock"},{"location":"modules/tool/#opennireader","text":"\u5c01\u88c5\u4e86OpenNI\u8bfb\u53d6\u6df1\u5ea6\u56fe\u4e0e\u989c\u8272\u56fe\u7684\u63a5\u53e3\uff0c\u6709\u5f85\u5b8c\u5584\u3002","title":"OpenNIReader"},{"location":"modules/tool/#keyframebasedslam","text":"\u57fa\u4e8e\u5173\u952e\u5e27\u7684slam\u7cfb\u7edf\u7684\u4e00\u4e2a\u57fa\u7c7b\uff0c example/BAFusion.cpp \u4ee5\u53ca example/FBAFusion.cpp \u90fd\u662f\u57fa\u4e8e\u8fd9\u4e2a\u7c7b\u7684\u3002","title":"KeyframeBasedSlam"},{"location":"modules/visualization/","text":"\u53ef\u89c6\u5316 \u53ef\u89c6\u5316\u662f\u4e3a\u4e86\u65b9\u4fbf\u89c2\u5bdf\u6570\u636e\u4ece\u6765\u5e26\u6765\u66f4\u76f4\u89c2\u7684\u7406\u89e3\u548c\u611f\u53d7\uff08\u5bf9\u4e8e\u7814\u7a76\u8005\u6765\u8bf4\uff09\uff0c\u4e5f\u4f1a\u8ba9\u4f60\u505a\u7684\u4e8b\u60c5\u770b\u8d77\u6765\u66f4\u70ab\u9177\uff08\u5bf9\u4e8e\u4f5c\u8005\u6765\u8bf4\uff09\u3002 FCLib\u5bf9\u4e8e\u53ef\u89c6\u5316\u7684\u9700\u6c42\u4e5f\u4e0d\u591a\uff0c\u4e3b\u8981\u662f\u7528\u6765\u663e\u793a\u70b9\u4e91\uff0c\u4e09\u89d2\u7f51\u683c\uff08\u652f\u6301\u663e\u793a\u989c\u8272\uff0c\u6216\u8005phong\u6a21\u578b\uff09\uff0c\u8fd8\u652f\u6301\u663e\u793a\u7ebf\u6bb5\uff08\u7528\u6765\u63cf\u8ff0Correspondence\uff09\u548c\u4e09\u68f1\u9525\uff08\u7528\u6765\u663e\u793a\u76f8\u673a\u4f4d\u7f6e\uff09\u3002 \u53ef\u89c6\u5316\u7684\u529f\u80fd\u4e3b\u8981\u96c6\u4e2d\u5728\u7c7b Visualizer \u4e2d\uff0c\u662f\u5bf9 Pangolin \u7684\u9700\u8981\u529f\u80fd\u7684\u90e8\u5206\u5c01\u88c5\u3002\u4e3b\u8981\u6210\u5458\u51fd\u6570\u5982\u4e0b\uff1a class Visualizer { public: //\u521d\u59cb\u5316\uff0cname\u4e3a\u7a97\u53e3\u7684\u540d\u79f0 void Initialize(const std::string &name = \"FuckingCool\"); //\u6dfb\u52a0\u70b9\u4e91 void AddPointCloud( const geometry::PointCloud &pcd); //\u6dfb\u52a0\u4e09\u89d2\u7f51\u683c void AddTriangleMesh(const geometry::TriangleMesh &mesh); //\u663e\u793a\u4e00\u5e27\uff0c\u4e3b\u8981\u7528\u4e8e\u663e\u793a\u4f1a\u52a8\u6001\u53d8\u5316\u7684\u7269\u4f53\uff0c\u4f8b\u5982\u663e\u793a\u91cd\u5efa\u8fc7\u7a0b void ShowOnce(); //\u6301\u7eed\u663e\u793a\uff0c\u671f\u95f4\u4e0d\u80fd\u6539\u53d8\u53ef\u89c6\u5316\u4e2d\u7684\u51e0\u4f55\u5bf9\u8c61 void Show(); //\u6dfb\u52a0\u4e00\u7ec4Camera\uff08\u4e09\u68f1\u9525\uff09\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4f4d\u59ff\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u76f8\u673a\u989c\u8272 void AddCameraSet(const geometry::SE3List & _camera_poses, const geometry::Point3List &_camera_colors); //\u6dfb\u52a0\u4e00\u7ec4\u7ebf\u6bb5\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u7ebf\u7684\u4e24\u7aef\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u7ebf\u6bb5\u7684\u989c\u8272 void AddLineSet(const geometry::Point3List & _points, const std::vector<std::pair<int, int>> &_index, const geometry::Point3List &_line_colors); }; Visualizer \u7684\u529f\u80fd\u76ee\u524d\u6bd4\u8f83\u5c11\uff0c\u76ee\u524d\u4e5f\u4e0d\u652f\u6301\u591a\u79cd\u51e0\u4f55\u4e00\u8d77\u663e\u793a\uff08\u5982\u70b9\u4e91\u548c\u7f51\u683c\u4e00\u8d77\u663e\u793a\uff09\uff0c\u4e5f\u4e0d\u652f\u6301UI\u3002\u4ee5\u540e\u53ef\u80fd\u4e5f\u7ee7\u7eed\u4e0d\u4f1a\u652f\u6301\u3002","title":"\u53ef\u89c6\u5316"},{"location":"modules/visualization/#_1","text":"\u53ef\u89c6\u5316\u662f\u4e3a\u4e86\u65b9\u4fbf\u89c2\u5bdf\u6570\u636e\u4ece\u6765\u5e26\u6765\u66f4\u76f4\u89c2\u7684\u7406\u89e3\u548c\u611f\u53d7\uff08\u5bf9\u4e8e\u7814\u7a76\u8005\u6765\u8bf4\uff09\uff0c\u4e5f\u4f1a\u8ba9\u4f60\u505a\u7684\u4e8b\u60c5\u770b\u8d77\u6765\u66f4\u70ab\u9177\uff08\u5bf9\u4e8e\u4f5c\u8005\u6765\u8bf4\uff09\u3002 FCLib\u5bf9\u4e8e\u53ef\u89c6\u5316\u7684\u9700\u6c42\u4e5f\u4e0d\u591a\uff0c\u4e3b\u8981\u662f\u7528\u6765\u663e\u793a\u70b9\u4e91\uff0c\u4e09\u89d2\u7f51\u683c\uff08\u652f\u6301\u663e\u793a\u989c\u8272\uff0c\u6216\u8005phong\u6a21\u578b\uff09\uff0c\u8fd8\u652f\u6301\u663e\u793a\u7ebf\u6bb5\uff08\u7528\u6765\u63cf\u8ff0Correspondence\uff09\u548c\u4e09\u68f1\u9525\uff08\u7528\u6765\u663e\u793a\u76f8\u673a\u4f4d\u7f6e\uff09\u3002 \u53ef\u89c6\u5316\u7684\u529f\u80fd\u4e3b\u8981\u96c6\u4e2d\u5728\u7c7b Visualizer \u4e2d\uff0c\u662f\u5bf9 Pangolin \u7684\u9700\u8981\u529f\u80fd\u7684\u90e8\u5206\u5c01\u88c5\u3002\u4e3b\u8981\u6210\u5458\u51fd\u6570\u5982\u4e0b\uff1a class Visualizer { public: //\u521d\u59cb\u5316\uff0cname\u4e3a\u7a97\u53e3\u7684\u540d\u79f0 void Initialize(const std::string &name = \"FuckingCool\"); //\u6dfb\u52a0\u70b9\u4e91 void AddPointCloud( const geometry::PointCloud &pcd); //\u6dfb\u52a0\u4e09\u89d2\u7f51\u683c void AddTriangleMesh(const geometry::TriangleMesh &mesh); //\u663e\u793a\u4e00\u5e27\uff0c\u4e3b\u8981\u7528\u4e8e\u663e\u793a\u4f1a\u52a8\u6001\u53d8\u5316\u7684\u7269\u4f53\uff0c\u4f8b\u5982\u663e\u793a\u91cd\u5efa\u8fc7\u7a0b void ShowOnce(); //\u6301\u7eed\u663e\u793a\uff0c\u671f\u95f4\u4e0d\u80fd\u6539\u53d8\u53ef\u89c6\u5316\u4e2d\u7684\u51e0\u4f55\u5bf9\u8c61 void Show(); //\u6dfb\u52a0\u4e00\u7ec4Camera\uff08\u4e09\u68f1\u9525\uff09\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4f4d\u59ff\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u76f8\u673a\u989c\u8272 void AddCameraSet(const geometry::SE3List & _camera_poses, const geometry::Point3List &_camera_colors); //\u6dfb\u52a0\u4e00\u7ec4\u7ebf\u6bb5\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u7ebf\u7684\u4e24\u7aef\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u7ebf\u6bb5\u7684\u989c\u8272 void AddLineSet(const geometry::Point3List & _points, const std::vector<std::pair<int, int>> &_index, const geometry::Point3List &_line_colors); }; Visualizer \u7684\u529f\u80fd\u76ee\u524d\u6bd4\u8f83\u5c11\uff0c\u76ee\u524d\u4e5f\u4e0d\u652f\u6301\u591a\u79cd\u51e0\u4f55\u4e00\u8d77\u663e\u793a\uff08\u5982\u70b9\u4e91\u548c\u7f51\u683c\u4e00\u8d77\u663e\u793a\uff09\uff0c\u4e5f\u4e0d\u652f\u6301UI\u3002\u4ee5\u540e\u53ef\u80fd\u4e5f\u7ee7\u7eed\u4e0d\u4f1a\u652f\u6301\u3002","title":"\u53ef\u89c6\u5316"}]}